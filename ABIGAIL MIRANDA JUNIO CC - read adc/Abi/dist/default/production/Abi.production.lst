

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Sep 16 12:41:38 2021

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 2.05
    47                           ; Generated 20/12/2018 GMT
    48                           ; 
    49                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4550 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataCOMRAM
    82  002000                     __pidataCOMRAM:
    83                           	opt callstack 0
    84                           
    85                           ;initializer for _frecuencia
    86  002000  03E8               	dw	1000
    87                           
    88                           	psect	idataBANK0
    89  006C2E                     __pidataBANK0:
    90                           	opt callstack 0
    91                           
    92                           ;initializer for _tiempo_ventana_pesaje
    93  006C2E  0005               	dw	5
    94  006C30  0000               	dw	0
    95                           
    96                           ;initializer for _col
    97  006C32  FF                 	db	255
    98                           
    99                           ;initializer for _fila
   100  006C33  FF                 	db	255
   101                           
   102                           ;initializer for tic_encoder@estado
   103  006C34  04                 	db	4
   104                           
   105                           ;initializer for tic_debounce@debounce_tic
   106  006C35  0A                 	db	10
   107                           
   108                           ;initializer for _OffsetPeriodo
   109  006C36  20                 	db	32
   110                           
   111                           ;initializer for _UpperByte
   112  006C37  FF                 	db	255
   113                           
   114                           ;initializer for Send4Disp@Nro_Disp
   115  006C38  01                 	db	1
   116                           
   117                           ;initializer for Leds13@i
   118  006C39  01                 	db	1
   119                           
   120                           	psect	smallconst
   121  002018                     __psmallconst:
   122                           	opt callstack 0
   123  002018  00                 	db	0
   124  002019                     _teclas:
   125                           	opt callstack 0
   126  002019  01                 	db	1
   127  00201A  02                 	db	2
   128  00201B  03                 	db	3
   129  00201C  04                 	db	4
   130  00201D  05                 	db	5
   131  00201E  06                 	db	6
   132  00201F  07                 	db	7
   133  002020  08                 	db	8
   134  002021  09                 	db	9
   135  002022  2A                 	db	42
   136  002023  00                 	db	0
   137  002024  2B                 	db	43
   138  002025                     __end_of_teclas:
   139                           	opt callstack 0
   140  002025  20                 	db	32
   141  002026  20                 	db	32
   142  002027  20                 	db	32
   143  002028  2A                 	db	42
   144  002029  2A                 	db	42
   145  00202A  46                 	db	70	;'F'
   146  00202B  72                 	db	114	;'r'
   147  00202C  61                 	db	97	;'a'
   148  00202D  73                 	db	115	;'s'
   149  00202E  65                 	db	101	;'e'
   150  00202F  20                 	db	32
   151  002030  65                 	db	101	;'e'
   152  002031  73                 	db	115	;'s'
   153  002032  63                 	db	99	;'c'
   154  002033  6F                 	db	111	;'o'
   155  002034  6E                 	db	110	;'n'
   156  002035  64                 	db	100	;'d'
   157  002036  69                 	db	105	;'i'
   158  002037  64                 	db	100	;'d'
   159  002038  61                 	db	97	;'a'
   160  002039  20                 	db	32
   161  00203A  3A                 	db	58	;':'
   162  00203B  2D                 	db	45
   163  00203C  29                 	db	41
   164  00203D  20                 	db	32
   165  00203E  2A                 	db	42
   166  00203F  2A                 	db	42
   167  002040  00                 	db	0
   168  002041  48                 	db	72	;'H'
   169  002042  6F                 	db	111	;'o'
   170  002043  6C                 	db	108	;'l'
   171  002044  61                 	db	97	;'a'
   172  002045  20                 	db	32
   173  002046  41                 	db	65	;'A'
   174  002047  6C                 	db	108	;'l'
   175  002048  75                 	db	117	;'u'
   176  002049  6D                 	db	109	;'m'
   177  00204A  6E                 	db	110	;'n'
   178  00204B  6F                 	db	111	;'o'
   179  00204C  73                 	db	115	;'s'
   180  00204D  00                 	db	0
   181  00204E                     STR_1:
   182  00204E  50                 	db	80	;'P'
   183  00204F  45                 	db	69	;'E'
   184  002050  53                 	db	83	;'S'
   185  002051  4F                 	db	79	;'O'
   186  002052  3A                 	db	58	;':'
   187  002053  20                 	db	32
   188  002054  00                 	db	0
   189  002055  42                 	db	66	;'B'
   190  002056  4F                 	db	79	;'O'
   191  002057  54                 	db	84	;'T'
   192  002058  31                 	db	49	;'1'
   193  002059  20                 	db	32
   194  00205A  00                 	db	0
   195  00205B  42                 	db	66	;'B'
   196  00205C  4F                 	db	79	;'O'
   197  00205D  54                 	db	84	;'T'
   198  00205E  31                 	db	49	;'1'
   199  00205F  00                 	db	0
   200  002060  42                 	db	66	;'B'
   201  002061  4F                 	db	79	;'O'
   202  002062  54                 	db	84	;'T'
   203  002063  32                 	db	50	;'2'
   204  002064  00                 	db	0
   205  002065  42                 	db	66	;'B'
   206  002066  4F                 	db	79	;'O'
   207  002067  54                 	db	84	;'T'
   208  002068  33                 	db	51	;'3'
   209  002069  00                 	db	0
   210  00206A  42                 	db	66	;'B'
   211  00206B  4F                 	db	79	;'O'
   212  00206C  54                 	db	84	;'T'
   213  00206D  34                 	db	52	;'4'
   214  00206E  00                 	db	0
   215  00206F                     STR_2:
   216  00206F  4B                 	db	75	;'K'
   217  002070  67                 	db	103	;'g'
   218  002071  00                 	db	0
   219                           
   220                           ; #config settings
   221  002072  00                 	db	0	; dummy byte at the end
   222  0000                     
   223                           	psect	nvBANK0
   224  0000B0                     __pnvBANK0:
   225                           	opt callstack 0
   226  0000B0                     _LCD_tout:
   227                           	opt callstack 0
   228  0000B0                     	ds	2
   229  0000                     _PORTBbits	set	3969
   230  0000                     _INTCON3bits	set	4080
   231  0000                     _INTCON2bits	set	4081
   232  0000                     _TRISBbits	set	3987
   233  0000                     _EECON2	set	4007
   234  0000                     _EECON1bits	set	4006
   235  0000                     _EEDATA	set	4008
   236  0000                     _EEADR	set	4009
   237  0000                     _PORTB	set	3969
   238  0000                     _ADRESL	set	4035
   239  0000                     _ADRESH	set	4036
   240  0000                     _ADCON0bits	set	4034
   241  0000                     _ADCON2	set	4032
   242  0000                     _TRISAbits	set	3986
   243  0000                     _PORTA	set	3968
   244  0000                     _TXREG	set	4013
   245  0000                     _T2CONbits	set	4042
   246  0000                     _CCP1CONbits	set	4029
   247  0000                     _CCPR1L	set	4030
   248  0000                     _PR2	set	4043
   249  0000                     _RCREG	set	4014
   250  0000                     _RCSTAbits	set	4011
   251  0000                     _SPBRGH	set	4016
   252  0000                     _SPBRG	set	4015
   253  0000                     _BAUDCONbits	set	4024
   254  0000                     _TXSTAbits	set	4012
   255  0000                     _PIE1bits	set	3997
   256  0000                     _PIR1bits	set	3998
   257  0000                     _T1CONbits	set	4045
   258  0000                     _T0CONbits	set	4053
   259  0000                     _TRISC	set	3988
   260  0000                     _LATEbits	set	3981
   261  0000                     _LATAbits	set	3977
   262  0000                     _LATCbits	set	3979
   263  0000                     _LATDbits	set	3980
   264  0000                     _TRISB	set	3987
   265  0000                     _TRISE	set	3990
   266  0000                     _TRISA	set	3986
   267  0000                     _ADCON1	set	4033
   268  0000                     _CMCON	set	4020
   269  0000                     _TRISCbits	set	3988
   270  0000                     _LATE	set	3981
   271  0000                     _LATC	set	3979
   272  0000                     _LATB	set	3978
   273  0000                     _LATA	set	3977
   274  0000                     _PORTDbits	set	3971
   275  0000                     _LATD	set	3980
   276  0000                     _PORTEbits	set	3972
   277  0000                     _TRISEbits	set	3990
   278  0000                     _TRISD	set	3989
   279  0000                     _TMR1H	set	4047
   280  0000                     _TMR1L	set	4046
   281  0000                     _TMR0H	set	4055
   282  0000                     _TMR0L	set	4054
   283  0000                     _INTCONbits	set	4082
   284  0000                     _TRISDbits	set	3989
   285  0000                     _RBIE	set	32659
   286  0000                     _RBIP	set	32648
   287  0000                     _RBPU	set	32655
   288  0000                     _INT1IE	set	32643
   289  0000                     _INT1IF	set	32640
   290  0000                     _INT0IF	set	32657
   291  0000                     _INT0IE	set	32660
   292  0000                     _RBIF	set	32656
   293  0000                     _TMR1IF	set	31984
   294  0000                     _TMR0IF	set	32658
   295  0000                     _TMR1ON	set	32360
   296  0000                     _TMR0ON	set	32431
   297                           
   298                           	psect	cinit
   299  006E16                     __pcinit:
   300                           	opt callstack 0
   301  006E16                     start_initialization:
   302                           	opt callstack 0
   303  006E16                     __initialization:
   304                           	opt callstack 0
   305                           
   306                           ; Initialize objects allocated to BANK0 (12 bytes)
   307                           ; load TBLPTR registers with __pidataBANK0
   308  006E16  0E2E               	movlw	low __pidataBANK0
   309  006E18  6EF6               	movwf	tblptrl,c
   310  006E1A  0E6C               	movlw	high __pidataBANK0
   311  006E1C  6EF7               	movwf	tblptrh,c
   312  006E1E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   313  006E20  6EF8               	movwf	tblptru,c
   314  006E22  EE00  F0A4         	lfsr	0,__pdataBANK0
   315  006E26  EE10 F00C          	lfsr	1,12
   316  006E2A                     copy_data0:
   317  006E2A  0009               	tblrd		*+
   318  006E2C  CFF5 FFEE          	movff	tablat,postinc0
   319  006E30  50E5               	movf	postdec1,w,c
   320  006E32  50E1               	movf	fsr1l,w,c
   321  006E34  E1FA               	bnz	copy_data0
   322                           
   323                           ; Initialize objects allocated to COMRAM (2 bytes)
   324                           ; load TBLPTR registers with __pidataCOMRAM
   325  006E36  0E00               	movlw	low __pidataCOMRAM
   326  006E38  6EF6               	movwf	tblptrl,c
   327  006E3A  0E20               	movlw	high __pidataCOMRAM
   328  006E3C  6EF7               	movwf	tblptrh,c
   329  006E3E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   330  006E40  6EF8               	movwf	tblptru,c
   331  006E42  0009               	tblrd		*+	;fetch initializer
   332  006E44  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   333  006E48  0009               	tblrd		*+	;fetch initializer
   334  006E4A  CFF5 F05E          	movff	tablat,__pdataCOMRAM+1
   335                           
   336                           ; Clear objects allocated to BANK0 (68 bytes)
   337  006E4E  EE00  F060         	lfsr	0,__pbssBANK0
   338  006E52  0E44               	movlw	68
   339  006E54                     clear_0:
   340  006E54  6AEE               	clrf	postinc0,c
   341  006E56  06E8               	decf	wreg,f,c
   342  006E58  E1FD               	bnz	clear_0
   343                           
   344                           ; Clear objects allocated to COMRAM (2 bytes)
   345  006E5A  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   346  006E5C  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   347  006E5E                     end_of_initialization:
   348                           	opt callstack 0
   349  006E5E                     __end_of__initialization:
   350                           	opt callstack 0
   351  006E5E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   352  006E60  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   353  006E62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   354  006E64  6EF8               	movwf	tblptru,c
   355  006E66  0100               	movlb	0
   356  006E68  EF6C  F036         	goto	_main	;jump to C main() function
   357                           
   358                           	psect	bssCOMRAM
   359  00005B                     __pbssCOMRAM:
   360                           	opt callstack 0
   361  00005B                     _delay_kb:
   362                           	opt callstack 0
   363  00005B                     	ds	1
   364  00005C                     _EstadoDeLosBotones:
   365                           	opt callstack 0
   366  00005C                     	ds	1
   367                           
   368                           	psect	dataCOMRAM
   369  00005D                     __pdataCOMRAM:
   370                           	opt callstack 0
   371  00005D                     _frecuencia:
   372                           	opt callstack 0
   373  00005D                     	ds	2
   374                           
   375                           	psect	bssBANK0
   376  000060                     __pbssBANK0:
   377                           	opt callstack 0
   378  000060                     _casos_valores_pesaje:
   379                           	opt callstack 0
   380  000060                     	ds	4
   381  000064                     _activador_tiempo_ventana_pesaje:
   382                           	opt callstack 0
   383  000064                     	ds	4
   384  000068                     _gramos:
   385                           	opt callstack 0
   386  000068                     	ds	4
   387  00006C                     _uni_kg:
   388                           	opt callstack 0
   389  00006C                     	ds	4
   390  000070                     _dec_kg:
   391                           	opt callstack 0
   392  000070                     	ds	4
   393  000074                     _cen_kg:
   394                           	opt callstack 0
   395  000074                     	ds	4
   396  000078                     _kgrs_pesado:
   397                           	opt callstack 0
   398  000078                     	ds	4
   399  00007C                     _kilos:
   400                           	opt callstack 0
   401  00007C                     	ds	4
   402  000080                     _guarda_ADC:
   403                           	opt callstack 0
   404  000080                     	ds	4
   405  000084                     _desplazar_tout:
   406                           	opt callstack 0
   407  000084                     	ds	2
   408  000086                     _MedioPeriodoSet:
   409                           	opt callstack 0
   410  000086                     	ds	2
   411  000088                     _led_tout:
   412                           	opt callstack 0
   413  000088                     	ds	2
   414  00008A                     tecla@status_KB:
   415                           	opt callstack 0
   416  00008A                     	ds	1
   417  00008B                     _flag_kb:
   418                           	opt callstack 0
   419  00008B                     	ds	1
   420  00008C                     _flagCanal:
   421                           	opt callstack 0
   422  00008C                     	ds	1
   423  00008D                     _encoderTout:
   424                           	opt callstack 0
   425  00008D                     	ds	1
   426  00008E                     _posicionEncoder:
   427                           	opt callstack 0
   428  00008E                     	ds	1
   429  00008F                     _minimoEncoder:
   430                           	opt callstack 0
   431  00008F                     	ds	1
   432  000090                     _maximoEncoder:
   433                           	opt callstack 0
   434  000090                     	ds	1
   435  000091                     demo_shield2_1@cont3:
   436                           	opt callstack 0
   437  000091                     	ds	1
   438  000092                     demo_shield2_1@cont2:
   439                           	opt callstack 0
   440  000092                     	ds	1
   441  000093                     demo_shield2_1@cont1:
   442                           	opt callstack 0
   443  000093                     	ds	1
   444  000094                     demo_shield2_1@cont:
   445                           	opt callstack 0
   446  000094                     	ds	1
   447  000095                     demo_shield2_1@Desplazar:
   448                           	opt callstack 0
   449  000095                     	ds	1
   450  000096                     demo_shield2_1@PrimeraVez:
   451                           	opt callstack 0
   452  000096                     	ds	1
   453  000097                     demo_shield2_1@flag3:
   454                           	opt callstack 0
   455  000097                     	ds	1
   456  000098                     demo_shield2_1@flag2:
   457                           	opt callstack 0
   458  000098                     	ds	1
   459  000099                     demo_shield2_1@flag1:
   460                           	opt callstack 0
   461  000099                     	ds	1
   462  00009A                     demo_shield2_1@flag0:
   463                           	opt callstack 0
   464  00009A                     	ds	1
   465  00009B                     debounce@cnt1:
   466                           	opt callstack 0
   467  00009B                     	ds	1
   468  00009C                     debounce@cnt0:
   469                           	opt callstack 0
   470  00009C                     	ds	1
   471  00009D                     debounce@state:
   472                           	opt callstack 0
   473  00009D                     	ds	1
   474  00009E                     _MultiplicadorSet:
   475                           	opt callstack 0
   476  00009E                     	ds	1
   477  00009F                     _Multiplicador:
   478                           	opt callstack 0
   479  00009F                     	ds	1
   480  0000A0                     _LowerByte:
   481                           	opt callstack 0
   482  0000A0                     	ds	1
   483  0000A1                     Botones13@Estado_BOT:
   484                           	opt callstack 0
   485  0000A1                     	ds	1
   486  0000A2                     _bot_tout:
   487                           	opt callstack 0
   488  0000A2                     	ds	1
   489  0000A3                     _mux_tout:
   490                           	opt callstack 0
   491  0000A3                     	ds	1
   492                           
   493                           	psect	dataBANK0
   494  0000A4                     __pdataBANK0:
   495                           	opt callstack 0
   496  0000A4                     _tiempo_ventana_pesaje:
   497                           	opt callstack 0
   498  0000A4                     	ds	4
   499  0000A8                     _col:
   500                           	opt callstack 0
   501  0000A8                     	ds	1
   502  0000A9                     _fila:
   503                           	opt callstack 0
   504  0000A9                     	ds	1
   505  0000AA                     tic_encoder@estado:
   506                           	opt callstack 0
   507  0000AA                     	ds	1
   508  0000AB                     tic_debounce@debounce_tic:
   509                           	opt callstack 0
   510  0000AB                     	ds	1
   511  0000AC                     _OffsetPeriodo:
   512                           	opt callstack 0
   513  0000AC                     	ds	1
   514  0000AD                     _UpperByte:
   515                           	opt callstack 0
   516  0000AD                     	ds	1
   517  0000AE                     Send4Disp@Nro_Disp:
   518                           	opt callstack 0
   519  0000AE                     	ds	1
   520  0000AF                     Leds13@i:
   521                           	opt callstack 0
   522  0000AF                     	ds	1
   523                           
   524                           	psect	cstackCOMRAM
   525  000001                     __pcstackCOMRAM:
   526                           	opt callstack 0
   527  000001                     ?_obtener_ADC10:
   528                           	opt callstack 0
   529  000001                     ?___fladd:
   530                           	opt callstack 0
   531  000001                     ?___flmul:
   532                           	opt callstack 0
   533  000001                     write_LCD@dato:
   534                           	opt callstack 0
   535  000001                     ___fladd@b:
   536                           	opt callstack 0
   537  000001                     ___flmul@b:
   538                           	opt callstack 0
   539                           
   540                           ; 4 bytes @ 0x0
   541  000001                     	ds	1
   542  000002                     write_DATA@dato:
   543                           	opt callstack 0
   544  000002                     write_CMD@dato:
   545                           	opt callstack 0
   546                           
   547                           ; 1 bytes @ 0x1
   548  000002                     	ds	1
   549  000003                     char2LCD@dato:
   550                           	opt callstack 0
   551  000003                     set_CURSOR@posi:
   552                           	opt callstack 0
   553  000003                     obtener_ADC10@GuardoPorta:
   554                           	opt callstack 0
   555  000003                     msg2LCD@datos:
   556                           	opt callstack 0
   557  000003                     LCD_init@i:
   558                           	opt callstack 0
   559                           
   560                           ; 4 bytes @ 0x2
   561  000003                     	ds	1
   562  000004                     obtener_ADC10@GuardoTrisa:
   563                           	opt callstack 0
   564  000004                     char2LCD@i:
   565                           	opt callstack 0
   566  000004                     set_CURSOR@i:
   567                           	opt callstack 0
   568                           
   569                           ; 4 bytes @ 0x3
   570  000004                     	ds	1
   571  000005                     obtener_ADC10@ad_res:
   572                           	opt callstack 0
   573  000005                     msg2LCD@i:
   574                           	opt callstack 0
   575  000005                     ___fladd@a:
   576                           	opt callstack 0
   577  000005                     ___flmul@a:
   578                           	opt callstack 0
   579                           
   580                           ; 4 bytes @ 0x4
   581  000005                     	ds	2
   582  000007                     ?___xxtofl:
   583                           	opt callstack 0
   584  000007                     LCD_init@i_395:
   585                           	opt callstack 0
   586  000007                     ___xxtofl@val:
   587                           	opt callstack 0
   588                           
   589                           ; 4 bytes @ 0x6
   590  000007                     	ds	2
   591  000009                     ??___fladd:
   592  000009                     ??___flmul:
   593                           
   594                           ; 1 bytes @ 0x8
   595  000009                     	ds	2
   596  00000B                     ??___xxtofl:
   597  00000B                     LCD_init@i_396:
   598                           	opt callstack 0
   599                           
   600                           ; 4 bytes @ 0xA
   601  00000B                     	ds	2
   602  00000D                     ___fladd@signs:
   603                           	opt callstack 0
   604  00000D                     ___flmul@sign:
   605                           	opt callstack 0
   606                           
   607                           ; 1 bytes @ 0xC
   608  00000D                     	ds	1
   609  00000E                     ___fladd@aexp:
   610                           	opt callstack 0
   611  00000E                     ___flmul@grs:
   612                           	opt callstack 0
   613                           
   614                           ; 4 bytes @ 0xD
   615  00000E                     	ds	1
   616  00000F                     ___fladd@bexp:
   617                           	opt callstack 0
   618  00000F                     ___xxtofl@sign:
   619                           	opt callstack 0
   620  00000F                     LCD_init@i_397:
   621                           	opt callstack 0
   622                           
   623                           ; 4 bytes @ 0xE
   624  00000F                     	ds	1
   625  000010                     ___fladd@grs:
   626                           	opt callstack 0
   627  000010                     ___xxtofl@exp:
   628                           	opt callstack 0
   629                           
   630                           ; 1 bytes @ 0xF
   631  000010                     	ds	1
   632  000011                     ?___fltol:
   633                           	opt callstack 0
   634  000011                     ___fltol@f1:
   635                           	opt callstack 0
   636  000011                     ___xxtofl@arg:
   637                           	opt callstack 0
   638                           
   639                           ; 4 bytes @ 0x10
   640  000011                     	ds	1
   641  000012                     ___flmul@aexp:
   642                           	opt callstack 0
   643                           
   644                           ; 1 bytes @ 0x11
   645  000012                     	ds	1
   646  000013                     ___flmul@bexp:
   647                           	opt callstack 0
   648  000013                     LCD_init@i_398:
   649                           	opt callstack 0
   650                           
   651                           ; 4 bytes @ 0x12
   652  000013                     	ds	1
   653  000014                     ___flmul@prod:
   654                           	opt callstack 0
   655                           
   656                           ; 4 bytes @ 0x13
   657  000014                     	ds	1
   658  000015                     ??___fltol:
   659                           
   660                           ; 1 bytes @ 0x14
   661  000015                     	ds	2
   662  000017                     LCD_init@i_399:
   663                           	opt callstack 0
   664                           
   665                           ; 4 bytes @ 0x16
   666  000017                     	ds	1
   667  000018                     ___flmul@temp:
   668                           	opt callstack 0
   669                           
   670                           ; 2 bytes @ 0x17
   671  000018                     	ds	1
   672  000019                     ___fltol@sign1:
   673                           	opt callstack 0
   674                           
   675                           ; 1 bytes @ 0x18
   676  000019                     	ds	1
   677  00001A                     ?___fldiv:
   678                           	opt callstack 0
   679  00001A                     ___fltol@exp1:
   680                           	opt callstack 0
   681  00001A                     ___fldiv@b:
   682                           	opt callstack 0
   683                           
   684                           ; 4 bytes @ 0x19
   685  00001A                     	ds	4
   686  00001E                     ___fldiv@a:
   687                           	opt callstack 0
   688                           
   689                           ; 4 bytes @ 0x1D
   690  00001E                     	ds	4
   691  000022                     ??___fldiv:
   692                           
   693                           ; 1 bytes @ 0x21
   694  000022                     	ds	4
   695  000026                     ___fldiv@rem:
   696                           	opt callstack 0
   697                           
   698                           ; 4 bytes @ 0x25
   699  000026                     	ds	4
   700  00002A                     ___fldiv@sign:
   701                           	opt callstack 0
   702                           
   703                           ; 1 bytes @ 0x29
   704  00002A                     	ds	1
   705  00002B                     ___fldiv@new_exp:
   706                           	opt callstack 0
   707                           
   708                           ; 2 bytes @ 0x2A
   709  00002B                     	ds	2
   710  00002D                     ___fldiv@grs:
   711                           	opt callstack 0
   712                           
   713                           ; 4 bytes @ 0x2C
   714  00002D                     	ds	4
   715  000031                     ___fldiv@bexp:
   716                           	opt callstack 0
   717                           
   718                           ; 1 bytes @ 0x30
   719  000031                     	ds	1
   720  000032                     ___fldiv@aexp:
   721                           	opt callstack 0
   722                           
   723                           ; 1 bytes @ 0x31
   724  000032                     	ds	1
   725  000033                     ?_readADC:
   726                           	opt callstack 0
   727                           
   728                           ; 4 bytes @ 0x32
   729  000033                     	ds	4
   730  000037                     ?___almod:
   731                           	opt callstack 0
   732  000037                     ___almod@dividend:
   733                           	opt callstack 0
   734                           
   735                           ; 4 bytes @ 0x36
   736  000037                     	ds	4
   737  00003B                     ___almod@divisor:
   738                           	opt callstack 0
   739                           
   740                           ; 4 bytes @ 0x3A
   741  00003B                     	ds	4
   742  00003F                     ___almod@counter:
   743                           	opt callstack 0
   744                           
   745                           ; 1 bytes @ 0x3E
   746  00003F                     	ds	1
   747  000040                     ___almod@sign:
   748                           	opt callstack 0
   749                           
   750                           ; 1 bytes @ 0x3F
   751  000040                     	ds	1
   752  000041                     ?___aldiv:
   753                           	opt callstack 0
   754  000041                     ___aldiv@dividend:
   755                           	opt callstack 0
   756                           
   757                           ; 4 bytes @ 0x40
   758  000041                     	ds	4
   759  000045                     ___aldiv@divisor:
   760                           	opt callstack 0
   761                           
   762                           ; 4 bytes @ 0x44
   763  000045                     	ds	4
   764  000049                     ___aldiv@counter:
   765                           	opt callstack 0
   766                           
   767                           ; 1 bytes @ 0x48
   768  000049                     	ds	1
   769  00004A                     ___aldiv@sign:
   770                           	opt callstack 0
   771                           
   772                           ; 1 bytes @ 0x49
   773  00004A                     	ds	1
   774  00004B                     ___aldiv@quotient:
   775                           	opt callstack 0
   776                           
   777                           ; 4 bytes @ 0x4A
   778  00004B                     	ds	4
   779  00004F                     _descomposicion$2519:
   780                           	opt callstack 0
   781                           
   782                           ; 4 bytes @ 0x4E
   783  00004F                     	ds	4
   784  000053                     _descomposicion$2521:
   785                           	opt callstack 0
   786                           
   787                           ; 4 bytes @ 0x52
   788  000053                     	ds	4
   789  000057                     _descomposicion$2520:
   790                           	opt callstack 0
   791                           
   792                           ; 4 bytes @ 0x56
   793  000057                     	ds	4
   794  00005B                     
   795                           ; 1 bytes @ 0x5A
   796 ;;
   797 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   798 ;;
   799 ;; *************** function _main *****************
   800 ;; Defined at:
   801 ;;		line 35 in file "main.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   815 ;;      Params:         0       0       0       0       0       0       0       0       0
   816 ;;      Locals:         0       0       0       0       0       0       0       0       0
   817 ;;      Temps:          0       0       0       0       0       0       0       0       0
   818 ;;      Totals:         0       0       0       0       0       0       0       0       0
   819 ;;Total ram usage:        0 bytes
   820 ;; Hardware stack levels required when called:    6
   821 ;; This function calls:
   822 ;;		_LCD_init
   823 ;;		_PicIni21
   824 ;;		_TIMER0_INI
   825 ;;		_TIMER1_INI
   826 ;;		_descomposicion
   827 ;;		_tecladoIni13
   828 ;; This function is called by:
   829 ;;		Startup code after reset
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text0
   834  006CD8                     __ptext0:
   835                           	opt callstack 0
   836  006CD8                     _main:
   837                           	opt callstack 25
   838                           
   839                           ;main.c: 37: PicIni21();
   840                           
   841                           ;incstack = 0
   842  006CD8  EC7E  F036         	call	_PicIni21	;wreg free
   843                           
   844                           ;main.c: 39: TRISDbits.RD1 = 0;
   845  006CDC  9295               	bcf	3989,1,c	;volatile
   846                           
   847                           ;main.c: 40: TRISDbits.RD0 = 0;
   848  006CDE  9095               	bcf	3989,0,c	;volatile
   849                           
   850                           ;main.c: 42: TIMER0_INI();
   851  006CE0  EC3F  F036         	call	_TIMER0_INI	;wreg free
   852                           
   853                           ;main.c: 43: TMR0ON = 1;
   854  006CE4  8ED5               	bsf	4053,7,c	;volatile
   855                           
   856                           ;main.c: 44: TIMER1_INI();
   857  006CE6  EC5C  F036         	call	_TIMER1_INI	;wreg free
   858                           
   859                           ;main.c: 45: TMR1ON = 1;
   860  006CEA  80CD               	bsf	4045,0,c	;volatile
   861                           
   862                           ;main.c: 46: (INTCONbits.GIE = 1);
   863  006CEC  8EF2               	bsf	4082,7,c	;volatile
   864                           
   865                           ;main.c: 47: tecladoIni13();
   866  006CEE  EC34  F036         	call	_tecladoIni13	;wreg free
   867                           
   868                           ;main.c: 49: LCD_init();
   869  006CF2  EC6D  F039         	call	_LCD_init	;wreg free
   870  006CF6                     l4209:
   871                           
   872                           ;main.c: 55: descomposicion();
   873  006CF6  EC75  F03B         	call	_descomposicion	;wreg free
   874  006CFA  D7FD               	goto	l4209
   875  006CFC                     __end_of_main:
   876                           	opt callstack 0
   877                           
   878 ;; *************** function _tecladoIni13 *****************
   879 ;; Defined at:
   880 ;;		line 42 in file "teclado.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, status,2
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   894 ;;      Params:         0       0       0       0       0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0       0       0       0       0
   896 ;;      Temps:          0       0       0       0       0       0       0       0       0
   897 ;;      Totals:         0       0       0       0       0       0       0       0       0
   898 ;;Total ram usage:        0 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    2
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text1
   909  006C68                     __ptext1:
   910                           	opt callstack 0
   911  006C68                     _tecladoIni13:
   912                           	opt callstack 28
   913                           
   914                           ;teclado.c: 44: LATB = 0;
   915                           
   916                           ;incstack = 0
   917  006C68  0E00               	movlw	0
   918  006C6A  6E8A               	movwf	3978,c	;volatile
   919                           
   920                           ;teclado.c: 45: PORTB = 0;
   921  006C6C  0E00               	movlw	0
   922  006C6E  6E81               	movwf	3969,c	;volatile
   923                           
   924                           ;teclado.c: 46: TRISB = 0xF0;
   925  006C70  0EF0               	movlw	240
   926  006C72  6E93               	movwf	3987,c	;volatile
   927                           
   928                           ;teclado.c: 47: RBPU = 0;
   929  006C74  9EF1               	bcf	4081,7,c	;volatile
   930                           
   931                           ;teclado.c: 48: RBIP = 1;
   932  006C76  80F1               	bsf	4081,0,c	;volatile
   933                           
   934                           ;teclado.c: 49: RBIF = 0;
   935  006C78  90F2               	bcf	4082,0,c	;volatile
   936                           
   937                           ;teclado.c: 50: RBIE = 1;
   938  006C7A  86F2               	bsf	4082,3,c	;volatile
   939  006C7C  0012               	return		;funcret
   940  006C7E                     __end_of_tecladoIni13:
   941                           	opt callstack 0
   942                           
   943 ;; *************** function _descomposicion *****************
   944 ;; Defined at:
   945 ;;		line 100 in file "main.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   959 ;;      Params:         0       0       0       0       0       0       0       0       0
   960 ;;      Locals:        12       0       0       0       0       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0       0       0       0       0
   962 ;;      Totals:        12       0       0       0       0       0       0       0       0
   963 ;;Total ram usage:       12 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; Hardware stack levels required when called:    5
   966 ;; This function calls:
   967 ;;		___aldiv
   968 ;;		___almod
   969 ;;		___fladd
   970 ;;		___fltol
   971 ;;		___xxtofl
   972 ;;		_char2LCD
   973 ;;		_msg2LCD
   974 ;;		_readADC
   975 ;;		_set_CURSOR
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text2
   982  0076EA                     __ptext2:
   983                           	opt callstack 0
   984  0076EA                     _descomposicion:
   985                           	opt callstack 25
   986                           
   987                           ;main.c: 101: set_CURSOR(0x00);
   988                           
   989                           ;incstack = 0
   990  0076EA  0E00               	movlw	0
   991  0076EC  ECCA  F036         	call	_set_CURSOR
   992                           
   993                           ;main.c: 102: msg2LCD("PESO: ");
   994  0076F0  0E4E               	movlw	low STR_1
   995  0076F2  6E03               	movwf	msg2LCD@datos,c
   996  0076F4  0E20               	movlw	high STR_1
   997  0076F6  6E04               	movwf	msg2LCD@datos+1,c
   998  0076F8  EC36  F037         	call	_msg2LCD	;wreg free
   999                           
  1000                           ;main.c: 103: cen_kg = (readADC() % 1000) / 100;
  1001  0076FC  0E64               	movlw	100
  1002  0076FE  6E45               	movwf	___aldiv@divisor,c
  1003  007700  0E00               	movlw	0
  1004  007702  6E46               	movwf	___aldiv@divisor+1,c
  1005  007704  0E00               	movlw	0
  1006  007706  6E47               	movwf	___aldiv@divisor+2,c
  1007  007708  0E00               	movlw	0
  1008  00770A  6E48               	movwf	___aldiv@divisor+3,c
  1009  00770C  0EE8               	movlw	232
  1010  00770E  6E3B               	movwf	___almod@divisor,c
  1011  007710  0E03               	movlw	3
  1012  007712  6E3C               	movwf	___almod@divisor+1,c
  1013  007714  0E00               	movlw	0
  1014  007716  6E3D               	movwf	___almod@divisor+2,c
  1015  007718  0E00               	movlw	0
  1016  00771A  6E3E               	movwf	___almod@divisor+3,c
  1017  00771C  EC62  F037         	call	_readADC	;wreg free
  1018  007720  C033  F037         	movff	?_readADC,___almod@dividend
  1019  007724  C034  F038         	movff	?_readADC+1,___almod@dividend+1
  1020  007728  C035  F039         	movff	?_readADC+2,___almod@dividend+2
  1021  00772C  C036  F03A         	movff	?_readADC+3,___almod@dividend+3
  1022  007730  ECB4  F037         	call	___almod	;wreg free
  1023  007734  C037  F041         	movff	?___almod,___aldiv@dividend
  1024  007738  C038  F042         	movff	?___almod+1,___aldiv@dividend+1
  1025  00773C  C039  F043         	movff	?___almod+2,___aldiv@dividend+2
  1026  007740  C03A  F044         	movff	?___almod+3,___aldiv@dividend+3
  1027  007744  EC67  F038         	call	___aldiv	;wreg free
  1028  007748  C041  F04F         	movff	?___aldiv,_descomposicion$2519
  1029  00774C  C042  F050         	movff	?___aldiv+1,_descomposicion$2519+1
  1030  007750  C043  F051         	movff	?___aldiv+2,_descomposicion$2519+2
  1031  007754  C044  F052         	movff	?___aldiv+3,_descomposicion$2519+3
  1032                           
  1033                           ;main.c: 103: cen_kg = (readADC() % 1000) / 100;
  1034  007758  C04F  F007         	movff	_descomposicion$2519,___xxtofl@val
  1035  00775C  C050  F008         	movff	_descomposicion$2519+1,___xxtofl@val+1
  1036  007760  C051  F009         	movff	_descomposicion$2519+2,___xxtofl@val+2
  1037  007764  C052  F00A         	movff	_descomposicion$2519+3,___xxtofl@val+3
  1038  007768  0E01               	movlw	1
  1039  00776A  ECCD  F038         	call	___xxtofl
  1040  00776E  C007  F074         	movff	?___xxtofl,_cen_kg
  1041  007772  C008  F075         	movff	?___xxtofl+1,_cen_kg+1
  1042  007776  C009  F076         	movff	?___xxtofl+2,_cen_kg+2
  1043  00777A  C00A  F077         	movff	?___xxtofl+3,_cen_kg+3
  1044                           
  1045                           ;main.c: 104: dec_kg = ((readADC() % 1000) % 100) / 10;
  1046  00777E  0EE8               	movlw	232
  1047  007780  6E3B               	movwf	___almod@divisor,c
  1048  007782  0E03               	movlw	3
  1049  007784  6E3C               	movwf	___almod@divisor+1,c
  1050  007786  0E00               	movlw	0
  1051  007788  6E3D               	movwf	___almod@divisor+2,c
  1052  00778A  0E00               	movlw	0
  1053  00778C  6E3E               	movwf	___almod@divisor+3,c
  1054  00778E  EC62  F037         	call	_readADC	;wreg free
  1055  007792  C033  F037         	movff	?_readADC,___almod@dividend
  1056  007796  C034  F038         	movff	?_readADC+1,___almod@dividend+1
  1057  00779A  C035  F039         	movff	?_readADC+2,___almod@dividend+2
  1058  00779E  C036  F03A         	movff	?_readADC+3,___almod@dividend+3
  1059  0077A2  ECB4  F037         	call	___almod	;wreg free
  1060  0077A6  C037  F057         	movff	?___almod,_descomposicion$2520
  1061  0077AA  C038  F058         	movff	?___almod+1,_descomposicion$2520+1
  1062  0077AE  C039  F059         	movff	?___almod+2,_descomposicion$2520+2
  1063  0077B2  C03A  F05A         	movff	?___almod+3,_descomposicion$2520+3
  1064                           
  1065                           ;main.c: 104: dec_kg = ((readADC() % 1000) % 100) / 10;
  1066  0077B6  0E0A               	movlw	10
  1067  0077B8  6E45               	movwf	___aldiv@divisor,c
  1068  0077BA  0E00               	movlw	0
  1069  0077BC  6E46               	movwf	___aldiv@divisor+1,c
  1070  0077BE  0E00               	movlw	0
  1071  0077C0  6E47               	movwf	___aldiv@divisor+2,c
  1072  0077C2  0E00               	movlw	0
  1073  0077C4  6E48               	movwf	___aldiv@divisor+3,c
  1074  0077C6  0E64               	movlw	100
  1075  0077C8  6E3B               	movwf	___almod@divisor,c
  1076  0077CA  0E00               	movlw	0
  1077  0077CC  6E3C               	movwf	___almod@divisor+1,c
  1078  0077CE  0E00               	movlw	0
  1079  0077D0  6E3D               	movwf	___almod@divisor+2,c
  1080  0077D2  0E00               	movlw	0
  1081  0077D4  6E3E               	movwf	___almod@divisor+3,c
  1082  0077D6  C057  F037         	movff	_descomposicion$2520,___almod@dividend
  1083  0077DA  C058  F038         	movff	_descomposicion$2520+1,___almod@dividend+1
  1084  0077DE  C059  F039         	movff	_descomposicion$2520+2,___almod@dividend+2
  1085  0077E2  C05A  F03A         	movff	_descomposicion$2520+3,___almod@dividend+3
  1086  0077E6  ECB4  F037         	call	___almod	;wreg free
  1087  0077EA  C037  F041         	movff	?___almod,___aldiv@dividend
  1088  0077EE  C038  F042         	movff	?___almod+1,___aldiv@dividend+1
  1089  0077F2  C039  F043         	movff	?___almod+2,___aldiv@dividend+2
  1090  0077F6  C03A  F044         	movff	?___almod+3,___aldiv@dividend+3
  1091  0077FA  EC67  F038         	call	___aldiv	;wreg free
  1092  0077FE  C041  F007         	movff	?___aldiv,___xxtofl@val
  1093  007802  C042  F008         	movff	?___aldiv+1,___xxtofl@val+1
  1094  007806  C043  F009         	movff	?___aldiv+2,___xxtofl@val+2
  1095  00780A  C044  F00A         	movff	?___aldiv+3,___xxtofl@val+3
  1096  00780E  0E01               	movlw	1
  1097  007810  ECCD  F038         	call	___xxtofl
  1098  007814  C007  F070         	movff	?___xxtofl,_dec_kg
  1099  007818  C008  F071         	movff	?___xxtofl+1,_dec_kg+1
  1100  00781C  C009  F072         	movff	?___xxtofl+2,_dec_kg+2
  1101  007820  C00A  F073         	movff	?___xxtofl+3,_dec_kg+3
  1102                           
  1103                           ;main.c: 105: uni_kg = ((readADC() % 1000) % 100) % 10;
  1104  007824  0EE8               	movlw	232
  1105  007826  6E3B               	movwf	___almod@divisor,c
  1106  007828  0E03               	movlw	3
  1107  00782A  6E3C               	movwf	___almod@divisor+1,c
  1108  00782C  0E00               	movlw	0
  1109  00782E  6E3D               	movwf	___almod@divisor+2,c
  1110  007830  0E00               	movlw	0
  1111  007832  6E3E               	movwf	___almod@divisor+3,c
  1112  007834  EC62  F037         	call	_readADC	;wreg free
  1113  007838  C033  F037         	movff	?_readADC,___almod@dividend
  1114  00783C  C034  F038         	movff	?_readADC+1,___almod@dividend+1
  1115  007840  C035  F039         	movff	?_readADC+2,___almod@dividend+2
  1116  007844  C036  F03A         	movff	?_readADC+3,___almod@dividend+3
  1117  007848  ECB4  F037         	call	___almod	;wreg free
  1118  00784C  C037  F057         	movff	?___almod,_descomposicion$2520
  1119  007850  C038  F058         	movff	?___almod+1,_descomposicion$2520+1
  1120  007854  C039  F059         	movff	?___almod+2,_descomposicion$2520+2
  1121  007858  C03A  F05A         	movff	?___almod+3,_descomposicion$2520+3
  1122                           
  1123                           ;main.c: 105: uni_kg = ((readADC() % 1000) % 100) % 10;
  1124  00785C  0E64               	movlw	100
  1125  00785E  6E3B               	movwf	___almod@divisor,c
  1126  007860  0E00               	movlw	0
  1127  007862  6E3C               	movwf	___almod@divisor+1,c
  1128  007864  0E00               	movlw	0
  1129  007866  6E3D               	movwf	___almod@divisor+2,c
  1130  007868  0E00               	movlw	0
  1131  00786A  6E3E               	movwf	___almod@divisor+3,c
  1132  00786C  C057  F037         	movff	_descomposicion$2520,___almod@dividend
  1133  007870  C058  F038         	movff	_descomposicion$2520+1,___almod@dividend+1
  1134  007874  C059  F039         	movff	_descomposicion$2520+2,___almod@dividend+2
  1135  007878  C05A  F03A         	movff	_descomposicion$2520+3,___almod@dividend+3
  1136  00787C  ECB4  F037         	call	___almod	;wreg free
  1137  007880  C037  F053         	movff	?___almod,_descomposicion$2521
  1138  007884  C038  F054         	movff	?___almod+1,_descomposicion$2521+1
  1139  007888  C039  F055         	movff	?___almod+2,_descomposicion$2521+2
  1140  00788C  C03A  F056         	movff	?___almod+3,_descomposicion$2521+3
  1141                           
  1142                           ;main.c: 105: uni_kg = ((readADC() % 1000) % 100) % 10;
  1143  007890  0E0A               	movlw	10
  1144  007892  6E3B               	movwf	___almod@divisor,c
  1145  007894  0E00               	movlw	0
  1146  007896  6E3C               	movwf	___almod@divisor+1,c
  1147  007898  0E00               	movlw	0
  1148  00789A  6E3D               	movwf	___almod@divisor+2,c
  1149  00789C  0E00               	movlw	0
  1150  00789E  6E3E               	movwf	___almod@divisor+3,c
  1151  0078A0  C053  F037         	movff	_descomposicion$2521,___almod@dividend
  1152  0078A4  C054  F038         	movff	_descomposicion$2521+1,___almod@dividend+1
  1153  0078A8  C055  F039         	movff	_descomposicion$2521+2,___almod@dividend+2
  1154  0078AC  C056  F03A         	movff	_descomposicion$2521+3,___almod@dividend+3
  1155  0078B0  ECB4  F037         	call	___almod	;wreg free
  1156  0078B4  C037  F007         	movff	?___almod,___xxtofl@val
  1157  0078B8  C038  F008         	movff	?___almod+1,___xxtofl@val+1
  1158  0078BC  C039  F009         	movff	?___almod+2,___xxtofl@val+2
  1159  0078C0  C03A  F00A         	movff	?___almod+3,___xxtofl@val+3
  1160  0078C4  0E01               	movlw	1
  1161  0078C6  ECCD  F038         	call	___xxtofl
  1162  0078CA  C007  F06C         	movff	?___xxtofl,_uni_kg
  1163  0078CE  C008  F06D         	movff	?___xxtofl+1,_uni_kg+1
  1164  0078D2  C009  F06E         	movff	?___xxtofl+2,_uni_kg+2
  1165  0078D6  C00A  F06F         	movff	?___xxtofl+3,_uni_kg+3
  1166                           
  1167                           ;main.c: 108: char2LCD(cen_kg + 48);
  1168  0078DA  0E00               	movlw	0
  1169  0078DC  6E05               	movwf	___fladd@a,c
  1170  0078DE  0E00               	movlw	0
  1171  0078E0  6E06               	movwf	___fladd@a+1,c
  1172  0078E2  0E40               	movlw	64
  1173  0078E4  6E07               	movwf	___fladd@a+2,c
  1174  0078E6  0E42               	movlw	66
  1175  0078E8  6E08               	movwf	___fladd@a+3,c
  1176  0078EA  C074  F001         	movff	_cen_kg,___fladd@b
  1177  0078EE  C075  F002         	movff	_cen_kg+1,___fladd@b+1
  1178  0078F2  C076  F003         	movff	_cen_kg+2,___fladd@b+2
  1179  0078F6  C077  F004         	movff	_cen_kg+3,___fladd@b+3
  1180  0078FA  ECD1  F03C         	call	___fladd	;wreg free
  1181  0078FE  C001  F011         	movff	?___fladd,___fltol@f1
  1182  007902  C002  F012         	movff	?___fladd+1,___fltol@f1+1
  1183  007906  C003  F013         	movff	?___fladd+2,___fltol@f1+2
  1184  00790A  C004  F014         	movff	?___fladd+3,___fltol@f1+3
  1185  00790E  EC0A  F038         	call	___fltol	;wreg free
  1186  007912  5011               	movf	?___fltol,w,c
  1187  007914  ECAD  F036         	call	_char2LCD
  1188                           
  1189                           ;main.c: 109: char2LCD(dec_kg + 48);
  1190  007918  0E00               	movlw	0
  1191  00791A  6E05               	movwf	___fladd@a,c
  1192  00791C  0E00               	movlw	0
  1193  00791E  6E06               	movwf	___fladd@a+1,c
  1194  007920  0E40               	movlw	64
  1195  007922  6E07               	movwf	___fladd@a+2,c
  1196  007924  0E42               	movlw	66
  1197  007926  6E08               	movwf	___fladd@a+3,c
  1198  007928  C070  F001         	movff	_dec_kg,___fladd@b
  1199  00792C  C071  F002         	movff	_dec_kg+1,___fladd@b+1
  1200  007930  C072  F003         	movff	_dec_kg+2,___fladd@b+2
  1201  007934  C073  F004         	movff	_dec_kg+3,___fladd@b+3
  1202  007938  ECD1  F03C         	call	___fladd	;wreg free
  1203  00793C  C001  F011         	movff	?___fladd,___fltol@f1
  1204  007940  C002  F012         	movff	?___fladd+1,___fltol@f1+1
  1205  007944  C003  F013         	movff	?___fladd+2,___fltol@f1+2
  1206  007948  C004  F014         	movff	?___fladd+3,___fltol@f1+3
  1207  00794C  EC0A  F038         	call	___fltol	;wreg free
  1208  007950  5011               	movf	?___fltol,w,c
  1209  007952  ECAD  F036         	call	_char2LCD
  1210                           
  1211                           ;main.c: 110: char2LCD(uni_kg + 48);
  1212  007956  0E00               	movlw	0
  1213  007958  6E05               	movwf	___fladd@a,c
  1214  00795A  0E00               	movlw	0
  1215  00795C  6E06               	movwf	___fladd@a+1,c
  1216  00795E  0E40               	movlw	64
  1217  007960  6E07               	movwf	___fladd@a+2,c
  1218  007962  0E42               	movlw	66
  1219  007964  6E08               	movwf	___fladd@a+3,c
  1220  007966  C06C  F001         	movff	_uni_kg,___fladd@b
  1221  00796A  C06D  F002         	movff	_uni_kg+1,___fladd@b+1
  1222  00796E  C06E  F003         	movff	_uni_kg+2,___fladd@b+2
  1223  007972  C06F  F004         	movff	_uni_kg+3,___fladd@b+3
  1224  007976  ECD1  F03C         	call	___fladd	;wreg free
  1225  00797A  C001  F011         	movff	?___fladd,___fltol@f1
  1226  00797E  C002  F012         	movff	?___fladd+1,___fltol@f1+1
  1227  007982  C003  F013         	movff	?___fladd+2,___fltol@f1+2
  1228  007986  C004  F014         	movff	?___fladd+3,___fltol@f1+3
  1229  00798A  EC0A  F038         	call	___fltol	;wreg free
  1230  00798E  5011               	movf	?___fltol,w,c
  1231  007990  ECAD  F036         	call	_char2LCD
  1232                           
  1233                           ;main.c: 112: msg2LCD("Kg");
  1234  007994  0E6F               	movlw	low STR_2
  1235  007996  6E03               	movwf	msg2LCD@datos,c
  1236  007998  0E20               	movlw	high STR_2
  1237  00799A  6E04               	movwf	msg2LCD@datos+1,c
  1238  00799C  EC36  F037         	call	_msg2LCD	;wreg free
  1239  0079A0  0012               	return		;funcret
  1240  0079A2                     __end_of_descomposicion:
  1241                           	opt callstack 0
  1242                           
  1243 ;; *************** function _set_CURSOR *****************
  1244 ;; Defined at:
  1245 ;;		line 64 in file "lcd.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  posi            1    wreg     unsigned char 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  posi            1    2[COMRAM] unsigned char 
  1250 ;;  i               4    3[COMRAM] unsigned long 
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1260 ;;      Params:         0       0       0       0       0       0       0       0       0
  1261 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1263 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1264 ;;Total ram usage:        5 bytes
  1265 ;; Hardware stack levels used:    1
  1266 ;; Hardware stack levels required when called:    4
  1267 ;; This function calls:
  1268 ;;		_write_CMD
  1269 ;; This function is called by:
  1270 ;;		_descomposicion
  1271 ;;		_demo_shield2_1
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text3
  1276  006D94                     __ptext3:
  1277                           	opt callstack 0
  1278  006D94                     _set_CURSOR:
  1279                           	opt callstack 25
  1280                           
  1281                           ;incstack = 0
  1282                           ;set_CURSOR@posi stored from wreg
  1283  006D94  6E03               	movwf	set_CURSOR@posi,c
  1284                           
  1285                           ;lcd.c: 65: posi |= 0x80;
  1286  006D96  8E03               	bsf	set_CURSOR@posi,7,c
  1287                           
  1288                           ;lcd.c: 66: write_CMD(posi);
  1289  006D98  5003               	movf	set_CURSOR@posi,w,c
  1290  006D9A  EC24  F036         	call	_write_CMD
  1291                           
  1292                           ;lcd.c: 68: for (unsigned long i = 0; i < 10000; i++);
  1293  006D9E  0E00               	movlw	0
  1294  006DA0  6E04               	movwf	set_CURSOR@i,c
  1295  006DA2  0E00               	movlw	0
  1296  006DA4  6E05               	movwf	set_CURSOR@i+1,c
  1297  006DA6  0E00               	movlw	0
  1298  006DA8  6E06               	movwf	set_CURSOR@i+2,c
  1299  006DAA  0E00               	movlw	0
  1300  006DAC  6E07               	movwf	set_CURSOR@i+3,c
  1301  006DAE                     l3607:
  1302  006DAE  0E01               	movlw	1
  1303  006DB0  2604               	addwf	set_CURSOR@i,f,c
  1304  006DB2  0E00               	movlw	0
  1305  006DB4  2205               	addwfc	set_CURSOR@i+1,f,c
  1306  006DB6  2206               	addwfc	set_CURSOR@i+2,f,c
  1307  006DB8  2207               	addwfc	set_CURSOR@i+3,f,c
  1308  006DBA  5007               	movf	set_CURSOR@i+3,w,c
  1309  006DBC  1006               	iorwf	set_CURSOR@i+2,w,c
  1310  006DBE  E107               	bnz	u3080
  1311  006DC0  0E10               	movlw	16
  1312  006DC2  5C04               	subwf	set_CURSOR@i,w,c
  1313  006DC4  0E27               	movlw	39
  1314  006DC6  5805               	subwfb	set_CURSOR@i+1,w,c
  1315  006DC8  B0D8               	btfsc	status,0,c
  1316  006DCA  0012               	return	
  1317  006DCC  D7F0               	goto	l3607
  1318  006DCE                     u3080:
  1319  006DCE  0012               	return		;funcret
  1320  006DD0                     __end_of_set_CURSOR:
  1321                           	opt callstack 0
  1322                           
  1323 ;; *************** function _readADC *****************
  1324 ;; Defined at:
  1325 ;;		line 91 in file "main.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  4   50[COMRAM] long 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1339 ;;      Params:         4       0       0       0       0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1342 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1343 ;;Total ram usage:        4 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    3
  1346 ;; This function calls:
  1347 ;;		___fldiv
  1348 ;;		___flmul
  1349 ;;		___fltol
  1350 ;;		___xxtofl
  1351 ;;		_obtener_ADC10
  1352 ;; This function is called by:
  1353 ;;		_descomposicion
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text4
  1358  006EC4                     __ptext4:
  1359                           	opt callstack 0
  1360  006EC4                     _readADC:
  1361                           	opt callstack 26
  1362                           
  1363                           ;main.c: 92: guarda_ADC = obtener_ADC10();
  1364                           
  1365                           ;incstack = 0
  1366  006EC4  ECE8  F036         	call	_obtener_ADC10	;wreg free
  1367  006EC8  C001  F007         	movff	?_obtener_ADC10,___xxtofl@val
  1368  006ECC  C002  F008         	movff	?_obtener_ADC10+1,___xxtofl@val+1
  1369  006ED0  6A09               	clrf	___xxtofl@val+2,c
  1370  006ED2  6A0A               	clrf	___xxtofl@val+3,c
  1371  006ED4  0E00               	movlw	0
  1372  006ED6  ECCD  F038         	call	___xxtofl
  1373  006EDA  C007  F080         	movff	?___xxtofl,_guarda_ADC
  1374  006EDE  C008  F081         	movff	?___xxtofl+1,_guarda_ADC+1
  1375  006EE2  C009  F082         	movff	?___xxtofl+2,_guarda_ADC+2
  1376  006EE6  C00A  F083         	movff	?___xxtofl+3,_guarda_ADC+3
  1377                           
  1378                           ;main.c: 93: kilos = (guarda_ADC * 999.9) / 1023;
  1379  006EEA  0E9A               	movlw	154
  1380  006EEC  6E05               	movwf	___flmul@a,c
  1381  006EEE  0EF9               	movlw	249
  1382  006EF0  6E06               	movwf	___flmul@a+1,c
  1383  006EF2  0E79               	movlw	121
  1384  006EF4  6E07               	movwf	___flmul@a+2,c
  1385  006EF6  0E44               	movlw	68
  1386  006EF8  6E08               	movwf	___flmul@a+3,c
  1387  006EFA  C080  F001         	movff	_guarda_ADC,___flmul@b
  1388  006EFE  C081  F002         	movff	_guarda_ADC+1,___flmul@b+1
  1389  006F02  C082  F003         	movff	_guarda_ADC+2,___flmul@b+2
  1390  006F06  C083  F004         	movff	_guarda_ADC+3,___flmul@b+3
  1391  006F0A  EC57  F03E         	call	___flmul	;wreg free
  1392  006F0E  C001  F01A         	movff	?___flmul,___fldiv@b
  1393  006F12  C002  F01B         	movff	?___flmul+1,___fldiv@b+1
  1394  006F16  C003  F01C         	movff	?___flmul+2,___fldiv@b+2
  1395  006F1A  C004  F01D         	movff	?___flmul+3,___fldiv@b+3
  1396  006F1E  0E00               	movlw	0
  1397  006F20  6E1E               	movwf	___fldiv@a,c
  1398  006F22  0EC0               	movlw	192
  1399  006F24  6E1F               	movwf	___fldiv@a+1,c
  1400  006F26  0E7F               	movlw	127
  1401  006F28  6E20               	movwf	___fldiv@a+2,c
  1402  006F2A  0E44               	movlw	68
  1403  006F2C  6E21               	movwf	___fldiv@a+3,c
  1404  006F2E  EC31  F03A         	call	___fldiv	;wreg free
  1405  006F32  C01A  F07C         	movff	?___fldiv,_kilos
  1406  006F36  C01B  F07D         	movff	?___fldiv+1,_kilos+1
  1407  006F3A  C01C  F07E         	movff	?___fldiv+2,_kilos+2
  1408  006F3E  C01D  F07F         	movff	?___fldiv+3,_kilos+3
  1409                           
  1410                           ;main.c: 97: return kilos;
  1411  006F42  C07C  F011         	movff	_kilos,___fltol@f1
  1412  006F46  C07D  F012         	movff	_kilos+1,___fltol@f1+1
  1413  006F4A  C07E  F013         	movff	_kilos+2,___fltol@f1+2
  1414  006F4E  C07F  F014         	movff	_kilos+3,___fltol@f1+3
  1415  006F52  EC0A  F038         	call	___fltol	;wreg free
  1416  006F56  C011  F033         	movff	?___fltol,?_readADC
  1417  006F5A  C012  F034         	movff	?___fltol+1,?_readADC+1
  1418  006F5E  C013  F035         	movff	?___fltol+2,?_readADC+2
  1419  006F62  C014  F036         	movff	?___fltol+3,?_readADC+3
  1420  006F66  0012               	return		;funcret
  1421  006F68                     __end_of_readADC:
  1422                           	opt callstack 0
  1423                           
  1424 ;; *************** function _obtener_ADC10 *****************
  1425 ;; Defined at:
  1426 ;;		line 154 in file "Tecnica1.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  ad_res          2    4[COMRAM] unsigned int 
  1431 ;;  GuardoTrisa     1    3[COMRAM] unsigned char 
  1432 ;;  GuardoPorta     1    2[COMRAM] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  2    0[COMRAM] unsigned int 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         2       0       0       0       0       0       0       0       0
  1443 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1445 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1446 ;;Total ram usage:        6 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    2
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_readADC
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text5
  1457  006DD0                     __ptext5:
  1458                           	opt callstack 0
  1459  006DD0                     _obtener_ADC10:
  1460                           	opt callstack 26
  1461                           
  1462                           ;Tecnica1.c: 155: unsigned char GuardoPorta, GuardoTrisa;;Tecnica1.c: 156: unsigned int 
      +                          ad_res;;Tecnica1.c: 157: GuardoPorta = PORTA;
  1463                           
  1464                           ;incstack = 0
  1465  006DD0  CF80 F003          	movff	3968,obtener_ADC10@GuardoPorta	;volatile
  1466                           
  1467                           ;Tecnica1.c: 158: GuardoTrisa = TRISA;
  1468  006DD4  CF92 F004          	movff	3986,obtener_ADC10@GuardoTrisa	;volatile
  1469                           
  1470                           ;Tecnica1.c: 160: TRISAbits.RA0 = 1;
  1471  006DD8  8092               	bsf	3986,0,c	;volatile
  1472                           
  1473                           ;Tecnica1.c: 161: ADCON1 = 0x0E;
  1474  006DDA  0E0E               	movlw	14
  1475  006DDC  6EC1               	movwf	4033,c	;volatile
  1476                           
  1477                           ;Tecnica1.c: 163: ADCON2 = 0xAD;
  1478  006DDE  0EAD               	movlw	173
  1479  006DE0  6EC0               	movwf	4032,c	;volatile
  1480                           
  1481                           ;Tecnica1.c: 164: ADCON0bits.ADON = 1;
  1482  006DE2  80C2               	bsf	4034,0,c	;volatile
  1483                           
  1484                           ;Tecnica1.c: 165: ADCON0bits.GO = 1;
  1485  006DE4  82C2               	bsf	4034,1,c	;volatile
  1486  006DE6                     l488:
  1487  006DE6  B2C2               	btfsc	4034,1,c	;volatile
  1488  006DE8  D7FE               	goto	l488
  1489                           
  1490                           ;Tecnica1.c: 169: ADCON0bits.ADON = 0;
  1491  006DEA  90C2               	bcf	4034,0,c	;volatile
  1492                           
  1493                           ;Tecnica1.c: 170: ADCON1 = 0x0F;
  1494  006DEC  0E0F               	movlw	15
  1495  006DEE  6EC1               	movwf	4033,c	;volatile
  1496                           
  1497                           ;Tecnica1.c: 171: LATA = GuardoPorta;
  1498  006DF0  C003  FF89         	movff	obtener_ADC10@GuardoPorta,3977	;volatile
  1499                           
  1500                           ;Tecnica1.c: 172: TRISA = GuardoTrisa;
  1501  006DF4  C004  FF92         	movff	obtener_ADC10@GuardoTrisa,3986	;volatile
  1502                           
  1503                           ;Tecnica1.c: 177: ad_res = ADRESH;
  1504  006DF8  CFC4 F005          	movff	4036,obtener_ADC10@ad_res	;volatile
  1505  006DFC  6A06               	clrf	obtener_ADC10@ad_res+1,c
  1506                           
  1507                           ;Tecnica1.c: 178: ad_res <<= 8;
  1508  006DFE  5005               	movf	obtener_ADC10@ad_res,w,c
  1509  006E00  6E06               	movwf	obtener_ADC10@ad_res+1,c
  1510  006E02  6A05               	clrf	obtener_ADC10@ad_res,c
  1511                           
  1512                           ;Tecnica1.c: 179: ad_res += ADRESL;
  1513  006E04  50C3               	movf	4035,w,c	;volatile
  1514  006E06  2605               	addwf	obtener_ADC10@ad_res,f,c
  1515  006E08  0E00               	movlw	0
  1516  006E0A  2206               	addwfc	obtener_ADC10@ad_res+1,f,c
  1517                           
  1518                           ;Tecnica1.c: 180: return ad_res;
  1519  006E0C  C005  F001         	movff	obtener_ADC10@ad_res,?_obtener_ADC10
  1520  006E10  C006  F002         	movff	obtener_ADC10@ad_res+1,?_obtener_ADC10+1
  1521  006E14  0012               	return		;funcret
  1522  006E16                     __end_of_obtener_ADC10:
  1523                           	opt callstack 0
  1524                           
  1525 ;; *************** function ___xxtofl *****************
  1526 ;; Defined at:
  1527 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  sign            1    wreg     unsigned char 
  1530 ;;  val             4    6[COMRAM] long 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  sign            1   14[COMRAM] unsigned char 
  1533 ;;  arg             4   16[COMRAM] unsigned long 
  1534 ;;  exp             1   15[COMRAM] unsigned char 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  4    6[COMRAM] unsigned char 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2, status,0
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1544 ;;      Params:         4       0       0       0       0       0       0       0       0
  1545 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1546 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1547 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1548 ;;Total ram usage:       14 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    2
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_readADC
  1555 ;;		_descomposicion
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text6
  1560  00719A                     __ptext6:
  1561                           	opt callstack 0
  1562  00719A                     ___xxtofl:
  1563                           	opt callstack 26
  1564                           
  1565                           ;incstack = 0
  1566                           ;___xxtofl@sign stored from wreg
  1567  00719A  6E0F               	movwf	___xxtofl@sign,c
  1568  00719C  500F               	movf	___xxtofl@sign,w,c
  1569  00719E  A4D8               	btfss	status,2,c
  1570  0071A0  AE0A               	btfss	___xxtofl@val+3,7,c
  1571  0071A2  D01A               	goto	l1387
  1572  0071A4  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  1573  0071A8  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  1574  0071AC  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  1575  0071B0  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  1576  0071B4  1E0B               	comf	??___xxtofl,f,c
  1577  0071B6  1E0C               	comf	??___xxtofl+1,f,c
  1578  0071B8  1E0D               	comf	??___xxtofl+2,f,c
  1579  0071BA  1E0E               	comf	??___xxtofl+3,f,c
  1580  0071BC  2A0B               	incf	??___xxtofl,f,c
  1581  0071BE  0E00               	movlw	0
  1582  0071C0  220C               	addwfc	??___xxtofl+1,f,c
  1583  0071C2  220D               	addwfc	??___xxtofl+2,f,c
  1584  0071C4  220E               	addwfc	??___xxtofl+3,f,c
  1585  0071C6  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  1586  0071CA  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  1587  0071CE  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  1588  0071D2  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  1589  0071D6  D008               	goto	l3549
  1590  0071D8                     l1387:
  1591  0071D8  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  1592  0071DC  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1593  0071E0  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1594  0071E4  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1595  0071E8                     l3549:
  1596  0071E8  5007               	movf	___xxtofl@val,w,c
  1597  0071EA  1008               	iorwf	___xxtofl@val+1,w,c
  1598  0071EC  1009               	iorwf	___xxtofl@val+2,w,c
  1599  0071EE  100A               	iorwf	___xxtofl@val+3,w,c
  1600  0071F0  A4D8               	btfss	status,2,c
  1601  0071F2  D009               	goto	l3555
  1602  0071F4  0E00               	movlw	0
  1603  0071F6  6E07               	movwf	?___xxtofl,c
  1604  0071F8  0E00               	movlw	0
  1605  0071FA  6E08               	movwf	?___xxtofl+1,c
  1606  0071FC  0E00               	movlw	0
  1607  0071FE  6E09               	movwf	?___xxtofl+2,c
  1608  007200  0E00               	movlw	0
  1609  007202  6E0A               	movwf	?___xxtofl+3,c
  1610  007204  0012               	return	
  1611  007206                     l3555:
  1612  007206  0E96               	movlw	150
  1613  007208  6E10               	movwf	___xxtofl@exp,c
  1614  00720A  D006               	goto	l3559
  1615  00720C                     l3557:
  1616  00720C  2A10               	incf	___xxtofl@exp,f,c
  1617  00720E  90D8               	bcf	status,0,c
  1618  007210  3214               	rrcf	___xxtofl@arg+3,f,c
  1619  007212  3213               	rrcf	___xxtofl@arg+2,f,c
  1620  007214  3212               	rrcf	___xxtofl@arg+1,f,c
  1621  007216  3211               	rrcf	___xxtofl@arg,f,c
  1622  007218                     l3559:
  1623  007218  0E00               	movlw	0
  1624  00721A  1411               	andwf	___xxtofl@arg,w,c
  1625  00721C  6E0B               	movwf	??___xxtofl& (0+255),c
  1626  00721E  0E00               	movlw	0
  1627  007220  1412               	andwf	___xxtofl@arg+1,w,c
  1628  007222  6E0C               	movwf	(??___xxtofl+1)& (0+255),c
  1629  007224  0E00               	movlw	0
  1630  007226  1413               	andwf	___xxtofl@arg+2,w,c
  1631  007228  6E0D               	movwf	(??___xxtofl+2)& (0+255),c
  1632  00722A  0EFE               	movlw	254
  1633  00722C  1414               	andwf	___xxtofl@arg+3,w,c
  1634  00722E  6E0E               	movwf	(??___xxtofl+3)& (0+255),c
  1635  007230  500B               	movf	??___xxtofl,w,c
  1636  007232  100C               	iorwf	??___xxtofl+1,w,c
  1637  007234  100D               	iorwf	??___xxtofl+2,w,c
  1638  007236  100E               	iorwf	??___xxtofl+3,w,c
  1639  007238  B4D8               	btfsc	status,2,c
  1640  00723A  D00D               	goto	l1394
  1641  00723C  D7E7               	goto	l3557
  1642  00723E                     l3561:
  1643  00723E  2A10               	incf	___xxtofl@exp,f,c
  1644  007240  0E01               	movlw	1
  1645  007242  2611               	addwf	___xxtofl@arg,f,c
  1646  007244  0E00               	movlw	0
  1647  007246  2212               	addwfc	___xxtofl@arg+1,f,c
  1648  007248  2213               	addwfc	___xxtofl@arg+2,f,c
  1649  00724A  2214               	addwfc	___xxtofl@arg+3,f,c
  1650  00724C  90D8               	bcf	status,0,c
  1651  00724E  3214               	rrcf	___xxtofl@arg+3,f,c
  1652  007250  3213               	rrcf	___xxtofl@arg+2,f,c
  1653  007252  3212               	rrcf	___xxtofl@arg+1,f,c
  1654  007254  3211               	rrcf	___xxtofl@arg,f,c
  1655  007256                     l1394:
  1656  007256  0E00               	movlw	0
  1657  007258  1411               	andwf	___xxtofl@arg,w,c
  1658  00725A  6E0B               	movwf	??___xxtofl& (0+255),c
  1659  00725C  0E00               	movlw	0
  1660  00725E  1412               	andwf	___xxtofl@arg+1,w,c
  1661  007260  6E0C               	movwf	(??___xxtofl+1)& (0+255),c
  1662  007262  0E00               	movlw	0
  1663  007264  1413               	andwf	___xxtofl@arg+2,w,c
  1664  007266  6E0D               	movwf	(??___xxtofl+2)& (0+255),c
  1665  007268  0EFF               	movlw	255
  1666  00726A  1414               	andwf	___xxtofl@arg+3,w,c
  1667  00726C  6E0E               	movwf	(??___xxtofl+3)& (0+255),c
  1668  00726E  500B               	movf	??___xxtofl,w,c
  1669  007270  100C               	iorwf	??___xxtofl+1,w,c
  1670  007272  100D               	iorwf	??___xxtofl+2,w,c
  1671  007274  100E               	iorwf	??___xxtofl+3,w,c
  1672  007276  B4D8               	btfsc	status,2,c
  1673  007278  D007               	goto	l3569
  1674  00727A  D7E1               	goto	l3561
  1675  00727C                     l3567:
  1676  00727C  0610               	decf	___xxtofl@exp,f,c
  1677  00727E  90D8               	bcf	status,0,c
  1678  007280  3611               	rlcf	___xxtofl@arg,f,c
  1679  007282  3612               	rlcf	___xxtofl@arg+1,f,c
  1680  007284  3613               	rlcf	___xxtofl@arg+2,f,c
  1681  007286  3614               	rlcf	___xxtofl@arg+3,f,c
  1682  007288                     l3569:
  1683  007288  BE13               	btfsc	___xxtofl@arg+2,7,c
  1684  00728A  D003               	goto	u3040
  1685  00728C  0E02               	movlw	2
  1686  00728E  6010               	cpfslt	___xxtofl@exp,c
  1687  007290  D7F5               	goto	l3567
  1688  007292                     u3040:
  1689  007292  A010               	btfss	___xxtofl@exp,0,c
  1690  007294  9E13               	bcf	___xxtofl@arg+2,7,c
  1691  007296  90D8               	bcf	status,0,c
  1692  007298  3210               	rrcf	___xxtofl@exp,f,c
  1693  00729A  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  1694  00729E  6A0C               	clrf	(??___xxtofl+1)& (0+255),c
  1695  0072A0  6A0D               	clrf	(??___xxtofl+2)& (0+255),c
  1696  0072A2  6A0E               	clrf	(??___xxtofl+3)& (0+255),c
  1697  0072A4  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  1698  0072A8  6A0D               	clrf	??___xxtofl+2,c
  1699  0072AA  6A0C               	clrf	??___xxtofl+1,c
  1700  0072AC  6A0B               	clrf	??___xxtofl,c
  1701  0072AE  500B               	movf	??___xxtofl,w,c
  1702  0072B0  1211               	iorwf	___xxtofl@arg,f,c
  1703  0072B2  500C               	movf	??___xxtofl+1,w,c
  1704  0072B4  1212               	iorwf	___xxtofl@arg+1,f,c
  1705  0072B6  500D               	movf	??___xxtofl+2,w,c
  1706  0072B8  1213               	iorwf	___xxtofl@arg+2,f,c
  1707  0072BA  500E               	movf	??___xxtofl+3,w,c
  1708  0072BC  1214               	iorwf	___xxtofl@arg+3,f,c
  1709  0072BE  500F               	movf	___xxtofl@sign,w,c
  1710  0072C0  A4D8               	btfss	status,2,c
  1711  0072C2  AE0A               	btfss	___xxtofl@val+3,7,c
  1712  0072C4  D001               	goto	l3585
  1713  0072C6  8E14               	bsf	___xxtofl@arg+3,7,c
  1714  0072C8                     l3585:
  1715  0072C8  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  1716  0072CC  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  1717  0072D0  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  1718  0072D4  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  1719  0072D8  0012               	return		;funcret
  1720  0072DA                     __end_of___xxtofl:
  1721                           	opt callstack 0
  1722                           
  1723 ;; *************** function ___fltol *****************
  1724 ;; Defined at:
  1725 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  f1              4   16[COMRAM] unsigned char 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  exp1            1   25[COMRAM] unsigned char 
  1730 ;;  sign1           1   24[COMRAM] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  4   16[COMRAM] long 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1740 ;;      Params:         4       0       0       0       0       0       0       0       0
  1741 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1742 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1743 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1744 ;;Total ram usage:       10 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    2
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_readADC
  1751 ;;		_descomposicion
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text7
  1756  007014                     __ptext7:
  1757                           	opt callstack 0
  1758  007014                     ___fltol:
  1759                           	opt callstack 26
  1760                           
  1761                           ;incstack = 0
  1762  007014  3413               	rlcf	___fltol@f1+2,w,c
  1763  007016  3414               	rlcf	___fltol@f1+3,w,c
  1764  007018  6E1A               	movwf	___fltol@exp1,c
  1765  00701A  501A               	movf	___fltol@exp1,w,c
  1766  00701C  A4D8               	btfss	status,2,c
  1767  00701E  D009               	goto	l3505
  1768  007020                     u2910:
  1769  007020  0E00               	movlw	0
  1770  007022  6E11               	movwf	?___fltol,c
  1771  007024  0E00               	movlw	0
  1772  007026  6E12               	movwf	?___fltol+1,c
  1773  007028  0E00               	movlw	0
  1774  00702A  6E13               	movwf	?___fltol+2,c
  1775  00702C  0E00               	movlw	0
  1776  00702E  6E14               	movwf	?___fltol+3,c
  1777  007030  0012               	return	
  1778  007032                     l3505:
  1779  007032  C011  F015         	movff	___fltol@f1,??___fltol
  1780  007036  C012  F016         	movff	___fltol@f1+1,??___fltol+1
  1781  00703A  C013  F017         	movff	___fltol@f1+2,??___fltol+2
  1782  00703E  C014  F018         	movff	___fltol@f1+3,??___fltol+3
  1783  007042  0E20               	movlw	32
  1784  007044  D005               	goto	u2920
  1785  007046                     u2925:
  1786  007046  90D8               	bcf	status,0,c
  1787  007048  3218               	rrcf	??___fltol+3,f,c
  1788  00704A  3217               	rrcf	??___fltol+2,f,c
  1789  00704C  3216               	rrcf	??___fltol+1,f,c
  1790  00704E  3215               	rrcf	??___fltol,f,c
  1791  007050                     u2920:
  1792  007050  2EE8               	decfsz	wreg,f,c
  1793  007052  D7F9               	goto	u2925
  1794  007054  5015               	movf	??___fltol,w,c
  1795  007056  6E19               	movwf	___fltol@sign1,c
  1796  007058  8E13               	bsf	___fltol@f1+2,7,c
  1797  00705A  0EFF               	movlw	255
  1798  00705C  1611               	andwf	___fltol@f1,f,c
  1799  00705E  0EFF               	movlw	255
  1800  007060  1612               	andwf	___fltol@f1+1,f,c
  1801  007062  0EFF               	movlw	255
  1802  007064  1613               	andwf	___fltol@f1+2,f,c
  1803  007066  0E00               	movlw	0
  1804  007068  1614               	andwf	___fltol@f1+3,f,c
  1805  00706A  0E96               	movlw	150
  1806  00706C  5E1A               	subwf	___fltol@exp1,f,c
  1807  00706E  AE1A               	btfss	___fltol@exp1,7,c
  1808  007070  D00D               	goto	l3525
  1809  007072  501A               	movf	___fltol@exp1,w,c
  1810  007074  0A80               	xorlw	128
  1811  007076  0F97               	addlw	151
  1812  007078  A0D8               	btfss	status,0,c
  1813  00707A  D7D2               	goto	u2910
  1814  00707C                     l3521:
  1815  00707C  90D8               	bcf	status,0,c
  1816  00707E  3214               	rrcf	___fltol@f1+3,f,c
  1817  007080  3213               	rrcf	___fltol@f1+2,f,c
  1818  007082  3212               	rrcf	___fltol@f1+1,f,c
  1819  007084  3211               	rrcf	___fltol@f1,f,c
  1820  007086  3E1A               	incfsz	___fltol@exp1,f,c
  1821  007088  D7F9               	goto	l3521
  1822  00708A  D00D               	goto	u2960
  1823  00708C                     l3525:
  1824  00708C  0E1F               	movlw	31
  1825  00708E  641A               	cpfsgt	___fltol@exp1,c
  1826  007090  D007               	goto	l3533
  1827  007092  D7C6               	goto	u2910
  1828  007094                     l3531:
  1829  007094  90D8               	bcf	status,0,c
  1830  007096  3611               	rlcf	___fltol@f1,f,c
  1831  007098  3612               	rlcf	___fltol@f1+1,f,c
  1832  00709A  3613               	rlcf	___fltol@f1+2,f,c
  1833  00709C  3614               	rlcf	___fltol@f1+3,f,c
  1834  00709E  061A               	decf	___fltol@exp1,f,c
  1835  0070A0                     l3533:
  1836  0070A0  501A               	movf	___fltol@exp1,w,c
  1837  0070A2  A4D8               	btfss	status,2,c
  1838  0070A4  D7F7               	goto	l3531
  1839  0070A6                     u2960:
  1840  0070A6  5019               	movf	___fltol@sign1,w,c
  1841  0070A8  B4D8               	btfsc	status,2,c
  1842  0070AA  D008               	goto	l3539
  1843  0070AC  1E14               	comf	___fltol@f1+3,f,c
  1844  0070AE  1E13               	comf	___fltol@f1+2,f,c
  1845  0070B0  1E12               	comf	___fltol@f1+1,f,c
  1846  0070B2  6C11               	negf	___fltol@f1,c
  1847  0070B4  0E00               	movlw	0
  1848  0070B6  2212               	addwfc	___fltol@f1+1,f,c
  1849  0070B8  2213               	addwfc	___fltol@f1+2,f,c
  1850  0070BA  2214               	addwfc	___fltol@f1+3,f,c
  1851  0070BC                     l3539:
  1852  0070BC  C011  F011         	movff	___fltol@f1,?___fltol
  1853  0070C0  C012  F012         	movff	___fltol@f1+1,?___fltol+1
  1854  0070C4  C013  F013         	movff	___fltol@f1+2,?___fltol+2
  1855  0070C8  C014  F014         	movff	___fltol@f1+3,?___fltol+3
  1856  0070CC  0012               	return		;funcret
  1857  0070CE                     __end_of___fltol:
  1858                           	opt callstack 0
  1859                           
  1860 ;; *************** function ___flmul *****************
  1861 ;; Defined at:
  1862 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  b               4    0[COMRAM] long 
  1865 ;;  a               4    4[COMRAM] long 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  prod            4   19[COMRAM] struct .
  1868 ;;  grs             4   13[COMRAM] unsigned long 
  1869 ;;  temp            2   23[COMRAM] struct .
  1870 ;;  bexp            1   18[COMRAM] unsigned char 
  1871 ;;  aexp            1   17[COMRAM] unsigned char 
  1872 ;;  sign            1   12[COMRAM] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  4    0[COMRAM] unsigned char 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0, prodl, prodh
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1882 ;;      Params:         8       0       0       0       0       0       0       0       0
  1883 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1884 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1885 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1886 ;;Total ram usage:       25 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    2
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_readADC
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text8
  1897  007CAE                     __ptext8:
  1898                           	opt callstack 0
  1899  007CAE                     ___flmul:
  1900                           	opt callstack 26
  1901                           
  1902                           ;incstack = 0
  1903  007CAE  5004               	movf	___flmul@b+3,w,c
  1904  007CB0  0B80               	andlw	128
  1905  007CB2  6E0D               	movwf	___flmul@sign,c
  1906  007CB4  5004               	movf	___flmul@b+3,w,c
  1907  007CB6  2404               	addwf	___flmul@b+3,w,c
  1908  007CB8  6E13               	movwf	___flmul@bexp,c
  1909  007CBA  BE03               	btfsc	___flmul@b+2,7,c
  1910  007CBC  8013               	bsf	___flmul@bexp,0,c
  1911  007CBE  5013               	movf	___flmul@bexp,w,c
  1912  007CC0  B4D8               	btfsc	status,2,c
  1913  007CC2  D00D               	goto	l3383
  1914  007CC4  2813               	incf	___flmul@bexp,w,c
  1915  007CC6  A4D8               	btfss	status,2,c
  1916  007CC8  D008               	goto	l3381
  1917  007CCA  0E00               	movlw	0
  1918  007CCC  6E01               	movwf	___flmul@b,c
  1919  007CCE  0E00               	movlw	0
  1920  007CD0  6E02               	movwf	___flmul@b+1,c
  1921  007CD2  0E00               	movlw	0
  1922  007CD4  6E03               	movwf	___flmul@b+2,c
  1923  007CD6  0E00               	movlw	0
  1924  007CD8  6E04               	movwf	___flmul@b+3,c
  1925  007CDA                     l3381:
  1926  007CDA  8E03               	bsf	___flmul@b+2,7,c
  1927  007CDC  D008               	goto	l3385
  1928  007CDE                     l3383:
  1929  007CDE  0E00               	movlw	0
  1930  007CE0  6E01               	movwf	___flmul@b,c
  1931  007CE2  0E00               	movlw	0
  1932  007CE4  6E02               	movwf	___flmul@b+1,c
  1933  007CE6  0E00               	movlw	0
  1934  007CE8  6E03               	movwf	___flmul@b+2,c
  1935  007CEA  0E00               	movlw	0
  1936  007CEC  6E04               	movwf	___flmul@b+3,c
  1937  007CEE                     l3385:
  1938  007CEE  5008               	movf	___flmul@a+3,w,c
  1939  007CF0  0B80               	andlw	128
  1940  007CF2  1A0D               	xorwf	___flmul@sign,f,c
  1941  007CF4  5008               	movf	___flmul@a+3,w,c
  1942  007CF6  2408               	addwf	___flmul@a+3,w,c
  1943  007CF8  6E12               	movwf	___flmul@aexp,c
  1944  007CFA  BE07               	btfsc	___flmul@a+2,7,c
  1945  007CFC  8012               	bsf	___flmul@aexp,0,c
  1946  007CFE  5012               	movf	___flmul@aexp,w,c
  1947  007D00  B4D8               	btfsc	status,2,c
  1948  007D02  D00D               	goto	l3401
  1949  007D04  2812               	incf	___flmul@aexp,w,c
  1950  007D06  A4D8               	btfss	status,2,c
  1951  007D08  D008               	goto	l3399
  1952  007D0A  0E00               	movlw	0
  1953  007D0C  6E05               	movwf	___flmul@a,c
  1954  007D0E  0E00               	movlw	0
  1955  007D10  6E06               	movwf	___flmul@a+1,c
  1956  007D12  0E00               	movlw	0
  1957  007D14  6E07               	movwf	___flmul@a+2,c
  1958  007D16  0E00               	movlw	0
  1959  007D18  6E08               	movwf	___flmul@a+3,c
  1960  007D1A                     l3399:
  1961  007D1A  8E07               	bsf	___flmul@a+2,7,c
  1962  007D1C  D008               	goto	l1346
  1963  007D1E                     l3401:
  1964  007D1E  0E00               	movlw	0
  1965  007D20  6E05               	movwf	___flmul@a,c
  1966  007D22  0E00               	movlw	0
  1967  007D24  6E06               	movwf	___flmul@a+1,c
  1968  007D26  0E00               	movlw	0
  1969  007D28  6E07               	movwf	___flmul@a+2,c
  1970  007D2A  0E00               	movlw	0
  1971  007D2C  6E08               	movwf	___flmul@a+3,c
  1972  007D2E                     l1346:
  1973  007D2E  5012               	movf	___flmul@aexp,w,c
  1974  007D30  B4D8               	btfsc	status,2,c
  1975  007D32  D003               	goto	u2790
  1976  007D34  5013               	movf	___flmul@bexp,w,c
  1977  007D36  A4D8               	btfss	status,2,c
  1978  007D38  D009               	goto	l3409
  1979  007D3A                     u2790:
  1980  007D3A  0E00               	movlw	0
  1981  007D3C  6E01               	movwf	?___flmul,c
  1982  007D3E  0E00               	movlw	0
  1983  007D40  6E02               	movwf	?___flmul+1,c
  1984  007D42  0E00               	movlw	0
  1985  007D44  6E03               	movwf	?___flmul+2,c
  1986  007D46  0E00               	movlw	0
  1987  007D48  6E04               	movwf	?___flmul+3,c
  1988  007D4A  0012               	return	
  1989  007D4C                     l3409:
  1990  007D4C  5007               	movf	___flmul@a+2,w,c
  1991  007D4E  0201               	mulwf	___flmul@b,c
  1992  007D50  CFF3 F018          	movff	prodl,___flmul@temp
  1993  007D54  CFF4 F019          	movff	prodh,___flmul@temp+1
  1994  007D58  5018               	movf	___flmul@temp,w,c
  1995  007D5A  6E0E               	movwf	___flmul@grs,c
  1996  007D5C  6A0F               	clrf	___flmul@grs+1,c
  1997  007D5E  6A10               	clrf	___flmul@grs+2,c
  1998  007D60  6A11               	clrf	___flmul@grs+3,c
  1999  007D62  5019               	movf	___flmul@temp+1,w,c
  2000  007D64  6E14               	movwf	___flmul@prod,c
  2001  007D66  6A15               	clrf	___flmul@prod+1,c
  2002  007D68  6A16               	clrf	___flmul@prod+2,c
  2003  007D6A  6A17               	clrf	___flmul@prod+3,c
  2004  007D6C  5006               	movf	___flmul@a+1,w,c
  2005  007D6E  0202               	mulwf	___flmul@b+1,c
  2006  007D70  CFF3 F018          	movff	prodl,___flmul@temp
  2007  007D74  CFF4 F019          	movff	prodh,___flmul@temp+1
  2008  007D78  5018               	movf	___flmul@temp,w,c
  2009  007D7A  260E               	addwf	___flmul@grs,f,c
  2010  007D7C  0E00               	movlw	0
  2011  007D7E  220F               	addwfc	___flmul@grs+1,f,c
  2012  007D80  2210               	addwfc	___flmul@grs+2,f,c
  2013  007D82  2211               	addwfc	___flmul@grs+3,f,c
  2014  007D84  5019               	movf	___flmul@temp+1,w,c
  2015  007D86  2614               	addwf	___flmul@prod,f,c
  2016  007D88  0E00               	movlw	0
  2017  007D8A  2215               	addwfc	___flmul@prod+1,f,c
  2018  007D8C  2216               	addwfc	___flmul@prod+2,f,c
  2019  007D8E  2217               	addwfc	___flmul@prod+3,f,c
  2020  007D90  5005               	movf	___flmul@a,w,c
  2021  007D92  0203               	mulwf	___flmul@b+2,c
  2022  007D94  CFF3 F018          	movff	prodl,___flmul@temp
  2023  007D98  CFF4 F019          	movff	prodh,___flmul@temp+1
  2024  007D9C  5018               	movf	___flmul@temp,w,c
  2025  007D9E  260E               	addwf	___flmul@grs,f,c
  2026  007DA0  0E00               	movlw	0
  2027  007DA2  220F               	addwfc	___flmul@grs+1,f,c
  2028  007DA4  2210               	addwfc	___flmul@grs+2,f,c
  2029  007DA6  2211               	addwfc	___flmul@grs+3,f,c
  2030  007DA8  5019               	movf	___flmul@temp+1,w,c
  2031  007DAA  2614               	addwf	___flmul@prod,f,c
  2032  007DAC  0E00               	movlw	0
  2033  007DAE  2215               	addwfc	___flmul@prod+1,f,c
  2034  007DB0  2216               	addwfc	___flmul@prod+2,f,c
  2035  007DB2  2217               	addwfc	___flmul@prod+3,f,c
  2036  007DB4  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  2037  007DB8  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  2038  007DBC  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  2039  007DC0  6A0E               	clrf	___flmul@grs,c
  2040  007DC2  5005               	movf	___flmul@a,w,c
  2041  007DC4  0202               	mulwf	___flmul@b+1,c
  2042  007DC6  CFF3 F018          	movff	prodl,___flmul@temp
  2043  007DCA  CFF4 F019          	movff	prodh,___flmul@temp+1
  2044  007DCE  5018               	movf	___flmul@temp,w,c
  2045  007DD0  260E               	addwf	___flmul@grs,f,c
  2046  007DD2  5019               	movf	___flmul@temp+1,w,c
  2047  007DD4  220F               	addwfc	___flmul@grs+1,f,c
  2048  007DD6  0E00               	movlw	0
  2049  007DD8  2210               	addwfc	___flmul@grs+2,f,c
  2050  007DDA  0E00               	movlw	0
  2051  007DDC  2211               	addwfc	___flmul@grs+3,f,c
  2052  007DDE  5006               	movf	___flmul@a+1,w,c
  2053  007DE0  0201               	mulwf	___flmul@b,c
  2054  007DE2  CFF3 F018          	movff	prodl,___flmul@temp
  2055  007DE6  CFF4 F019          	movff	prodh,___flmul@temp+1
  2056  007DEA  5018               	movf	___flmul@temp,w,c
  2057  007DEC  260E               	addwf	___flmul@grs,f,c
  2058  007DEE  5019               	movf	___flmul@temp+1,w,c
  2059  007DF0  220F               	addwfc	___flmul@grs+1,f,c
  2060  007DF2  0E00               	movlw	0
  2061  007DF4  2210               	addwfc	___flmul@grs+2,f,c
  2062  007DF6  0E00               	movlw	0
  2063  007DF8  2211               	addwfc	___flmul@grs+3,f,c
  2064  007DFA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  2065  007DFE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  2066  007E02  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  2067  007E06  6A0E               	clrf	___flmul@grs,c
  2068  007E08  5005               	movf	___flmul@a,w,c
  2069  007E0A  0201               	mulwf	___flmul@b,c
  2070  007E0C  CFF3 F018          	movff	prodl,___flmul@temp
  2071  007E10  CFF4 F019          	movff	prodh,___flmul@temp+1
  2072  007E14  5018               	movf	___flmul@temp,w,c
  2073  007E16  260E               	addwf	___flmul@grs,f,c
  2074  007E18  5019               	movf	___flmul@temp+1,w,c
  2075  007E1A  220F               	addwfc	___flmul@grs+1,f,c
  2076  007E1C  0E00               	movlw	0
  2077  007E1E  2210               	addwfc	___flmul@grs+2,f,c
  2078  007E20  0E00               	movlw	0
  2079  007E22  2211               	addwfc	___flmul@grs+3,f,c
  2080  007E24  5007               	movf	___flmul@a+2,w,c
  2081  007E26  0202               	mulwf	___flmul@b+1,c
  2082  007E28  CFF3 F018          	movff	prodl,___flmul@temp
  2083  007E2C  CFF4 F019          	movff	prodh,___flmul@temp+1
  2084  007E30  5018               	movf	___flmul@temp,w,c
  2085  007E32  2614               	addwf	___flmul@prod,f,c
  2086  007E34  5019               	movf	___flmul@temp+1,w,c
  2087  007E36  2215               	addwfc	___flmul@prod+1,f,c
  2088  007E38  0E00               	movlw	0
  2089  007E3A  2216               	addwfc	___flmul@prod+2,f,c
  2090  007E3C  0E00               	movlw	0
  2091  007E3E  2217               	addwfc	___flmul@prod+3,f,c
  2092  007E40  5006               	movf	___flmul@a+1,w,c
  2093  007E42  0203               	mulwf	___flmul@b+2,c
  2094  007E44  CFF3 F018          	movff	prodl,___flmul@temp
  2095  007E48  CFF4 F019          	movff	prodh,___flmul@temp+1
  2096  007E4C  5018               	movf	___flmul@temp,w,c
  2097  007E4E  2614               	addwf	___flmul@prod,f,c
  2098  007E50  5019               	movf	___flmul@temp+1,w,c
  2099  007E52  2215               	addwfc	___flmul@prod+1,f,c
  2100  007E54  0E00               	movlw	0
  2101  007E56  2216               	addwfc	___flmul@prod+2,f,c
  2102  007E58  0E00               	movlw	0
  2103  007E5A  2217               	addwfc	___flmul@prod+3,f,c
  2104  007E5C  5007               	movf	___flmul@a+2,w,c
  2105  007E5E  0203               	mulwf	___flmul@b+2,c
  2106  007E60  CFF3 F018          	movff	prodl,___flmul@temp
  2107  007E64  CFF4 F019          	movff	prodh,___flmul@temp+1
  2108  007E68  5018               	movf	___flmul@temp,w,c
  2109  007E6A  6E09               	movwf	??___flmul& (0+255),c
  2110  007E6C  5019               	movf	___flmul@temp+1,w,c
  2111  007E6E  6E0A               	movwf	(??___flmul+1)& (0+255),c
  2112  007E70  6A0B               	clrf	(??___flmul+2)& (0+255),c
  2113  007E72  6A0C               	clrf	(??___flmul+3)& (0+255),c
  2114  007E74  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  2115  007E78  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  2116  007E7C  C009  F00A         	movff	??___flmul,??___flmul+1
  2117  007E80  6A09               	clrf	??___flmul,c
  2118  007E82  5009               	movf	??___flmul,w,c
  2119  007E84  2614               	addwf	___flmul@prod,f,c
  2120  007E86  500A               	movf	??___flmul+1,w,c
  2121  007E88  2215               	addwfc	___flmul@prod+1,f,c
  2122  007E8A  500B               	movf	??___flmul+2,w,c
  2123  007E8C  2216               	addwfc	___flmul@prod+2,f,c
  2124  007E8E  500C               	movf	??___flmul+3,w,c
  2125  007E90  2217               	addwfc	___flmul@prod+3,f,c
  2126  007E92  C00E  F009         	movff	___flmul@grs,??___flmul
  2127  007E96  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  2128  007E9A  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  2129  007E9E  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  2130  007EA2  0E19               	movlw	25
  2131  007EA4  D005               	goto	u2800
  2132  007EA6                     u2805:
  2133  007EA6  90D8               	bcf	status,0,c
  2134  007EA8  320C               	rrcf	??___flmul+3,f,c
  2135  007EAA  320B               	rrcf	??___flmul+2,f,c
  2136  007EAC  320A               	rrcf	??___flmul+1,f,c
  2137  007EAE  3209               	rrcf	??___flmul,f,c
  2138  007EB0                     u2800:
  2139  007EB0  2EE8               	decfsz	wreg,f,c
  2140  007EB2  D7F9               	goto	u2805
  2141  007EB4  5009               	movf	??___flmul,w,c
  2142  007EB6  2614               	addwf	___flmul@prod,f,c
  2143  007EB8  500A               	movf	??___flmul+1,w,c
  2144  007EBA  2215               	addwfc	___flmul@prod+1,f,c
  2145  007EBC  500B               	movf	??___flmul+2,w,c
  2146  007EBE  2216               	addwfc	___flmul@prod+2,f,c
  2147  007EC0  500C               	movf	??___flmul+3,w,c
  2148  007EC2  2217               	addwfc	___flmul@prod+3,f,c
  2149  007EC4  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  2150  007EC8  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  2151  007ECC  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  2152  007ED0  6A0E               	clrf	___flmul@grs,c
  2153  007ED2  5012               	movf	___flmul@aexp,w,c
  2154  007ED4  C013  F009         	movff	___flmul@bexp,??___flmul
  2155  007ED8  6A0A               	clrf	(??___flmul+1)& (0+255),c
  2156  007EDA  2609               	addwf	??___flmul,f,c
  2157  007EDC  0E00               	movlw	0
  2158  007EDE  220A               	addwfc	??___flmul+1,f,c
  2159  007EE0  0E82               	movlw	130
  2160  007EE2  2409               	addwf	??___flmul,w,c
  2161  007EE4  6E18               	movwf	___flmul@temp,c
  2162  007EE6  0EFF               	movlw	255
  2163  007EE8  200A               	addwfc	??___flmul+1,w,c
  2164  007EEA  6E19               	movwf	___flmul@temp+1,c
  2165  007EEC  D00F               	goto	l3457
  2166  007EEE                     l3451:
  2167  007EEE  90D8               	bcf	status,0,c
  2168  007EF0  3614               	rlcf	___flmul@prod,f,c
  2169  007EF2  3615               	rlcf	___flmul@prod+1,f,c
  2170  007EF4  3616               	rlcf	___flmul@prod+2,f,c
  2171  007EF6  3617               	rlcf	___flmul@prod+3,f,c
  2172  007EF8  BE11               	btfsc	___flmul@grs+3,7,c
  2173  007EFA  8014               	bsf	___flmul@prod,0,c
  2174  007EFC  90D8               	bcf	status,0,c
  2175  007EFE  360E               	rlcf	___flmul@grs,f,c
  2176  007F00  360F               	rlcf	___flmul@grs+1,f,c
  2177  007F02  3610               	rlcf	___flmul@grs+2,f,c
  2178  007F04  3611               	rlcf	___flmul@grs+3,f,c
  2179  007F06  0618               	decf	___flmul@temp,f,c
  2180  007F08  A0D8               	btfss	status,0,c
  2181  007F0A  0619               	decf	___flmul@temp+1,f,c
  2182  007F0C                     l3457:
  2183  007F0C  AE16               	btfss	___flmul@prod+2,7,c
  2184  007F0E  D7EF               	goto	l3451
  2185  007F10  0E00               	movlw	0
  2186  007F12  6E12               	movwf	___flmul@aexp,c
  2187  007F14  AE11               	btfss	___flmul@grs+3,7,c
  2188  007F16  D017               	goto	l1355
  2189  007F18  0EFF               	movlw	255
  2190  007F1A  140E               	andwf	___flmul@grs,w,c
  2191  007F1C  6E09               	movwf	??___flmul& (0+255),c
  2192  007F1E  0EFF               	movlw	255
  2193  007F20  140F               	andwf	___flmul@grs+1,w,c
  2194  007F22  6E0A               	movwf	(??___flmul+1)& (0+255),c
  2195  007F24  0EFF               	movlw	255
  2196  007F26  1410               	andwf	___flmul@grs+2,w,c
  2197  007F28  6E0B               	movwf	(??___flmul+2)& (0+255),c
  2198  007F2A  0E7F               	movlw	127
  2199  007F2C  1411               	andwf	___flmul@grs+3,w,c
  2200  007F2E  6E0C               	movwf	(??___flmul+3)& (0+255),c
  2201  007F30  5009               	movf	??___flmul,w,c
  2202  007F32  100A               	iorwf	??___flmul+1,w,c
  2203  007F34  100B               	iorwf	??___flmul+2,w,c
  2204  007F36  100C               	iorwf	??___flmul+3,w,c
  2205  007F38  B4D8               	btfsc	status,2,c
  2206  007F3A  D003               	goto	l1356
  2207  007F3C                     u2840:
  2208  007F3C  0E01               	movlw	1
  2209  007F3E  6E12               	movwf	___flmul@aexp,c
  2210  007F40  D002               	goto	l1355
  2211  007F42                     l1356:
  2212  007F42  B014               	btfsc	___flmul@prod,0,c
  2213  007F44  D7FB               	goto	u2840
  2214  007F46                     l1355:
  2215  007F46  5012               	movf	___flmul@aexp,w,c
  2216  007F48  B4D8               	btfsc	status,2,c
  2217  007F4A  D01F               	goto	l3477
  2218  007F4C  0E01               	movlw	1
  2219  007F4E  2614               	addwf	___flmul@prod,f,c
  2220  007F50  0E00               	movlw	0
  2221  007F52  2215               	addwfc	___flmul@prod+1,f,c
  2222  007F54  2216               	addwfc	___flmul@prod+2,f,c
  2223  007F56  2217               	addwfc	___flmul@prod+3,f,c
  2224  007F58  A017               	btfss	___flmul@prod+3,0,c
  2225  007F5A  D017               	goto	l3477
  2226  007F5C  C014  F009         	movff	___flmul@prod,??___flmul
  2227  007F60  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  2228  007F64  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  2229  007F68  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  2230  007F6C  340C               	rlcf	??___flmul+3,w,c
  2231  007F6E  320C               	rrcf	??___flmul+3,f,c
  2232  007F70  320B               	rrcf	??___flmul+2,f,c
  2233  007F72  320A               	rrcf	??___flmul+1,f,c
  2234  007F74  3209               	rrcf	??___flmul,f,c
  2235  007F76  C009  F014         	movff	??___flmul,___flmul@prod
  2236  007F7A  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  2237  007F7E  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  2238  007F82  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  2239  007F86  4A18               	infsnz	___flmul@temp,f,c
  2240  007F88  2A19               	incf	___flmul@temp+1,f,c
  2241  007F8A                     l3477:
  2242  007F8A  BE19               	btfsc	___flmul@temp+1,7,c
  2243  007F8C  D00D               	goto	l3481
  2244  007F8E  5019               	movf	___flmul@temp+1,w,c
  2245  007F90  E103               	bnz	u2880
  2246  007F92  2818               	incf	___flmul@temp,w,c
  2247  007F94  A0D8               	btfss	status,0,c
  2248  007F96  D008               	goto	l3481
  2249  007F98                     u2880:
  2250  007F98  0E00               	movlw	0
  2251  007F9A  6E14               	movwf	___flmul@prod,c
  2252  007F9C  0E00               	movlw	0
  2253  007F9E  6E15               	movwf	___flmul@prod+1,c
  2254  007FA0  0E80               	movlw	128
  2255  007FA2  6E16               	movwf	___flmul@prod+2,c
  2256  007FA4  0E7F               	movlw	127
  2257  007FA6  D020               	goto	L1
  2258  007FA8                     l3481:
  2259  007FA8  BE19               	btfsc	___flmul@temp+1,7,c
  2260  007FAA  D005               	goto	u2890
  2261  007FAC  5019               	movf	___flmul@temp+1,w,c
  2262  007FAE  E10E               	bnz	l1363
  2263  007FB0  0418               	decf	___flmul@temp,w,c
  2264  007FB2  B0D8               	btfsc	status,0,c
  2265  007FB4  D00B               	goto	l1363
  2266  007FB6                     u2890:
  2267  007FB6  0E00               	movlw	0
  2268  007FB8  6E14               	movwf	___flmul@prod,c
  2269  007FBA  0E00               	movlw	0
  2270  007FBC  6E15               	movwf	___flmul@prod+1,c
  2271  007FBE  0E00               	movlw	0
  2272  007FC0  6E16               	movwf	___flmul@prod+2,c
  2273  007FC2  0E00               	movlw	0
  2274  007FC4  6E17               	movwf	___flmul@prod+3,c
  2275  007FC6  0E00               	movlw	0
  2276  007FC8  6E0D               	movwf	___flmul@sign,c
  2277  007FCA  D00F               	goto	l3493
  2278  007FCC                     l1363:
  2279  007FCC  C018  F013         	movff	___flmul@temp,___flmul@bexp
  2280  007FD0  0EFF               	movlw	255
  2281  007FD2  1614               	andwf	___flmul@prod,f,c
  2282  007FD4  0EFF               	movlw	255
  2283  007FD6  1615               	andwf	___flmul@prod+1,f,c
  2284  007FD8  0E7F               	movlw	127
  2285  007FDA  1616               	andwf	___flmul@prod+2,f,c
  2286  007FDC  0E00               	movlw	0
  2287  007FDE  1617               	andwf	___flmul@prod+3,f,c
  2288  007FE0  B013               	btfsc	___flmul@bexp,0,c
  2289  007FE2  8E16               	bsf	___flmul@prod+2,7,c
  2290  007FE4  90D8               	bcf	status,0,c
  2291  007FE6  3013               	rrcf	___flmul@bexp,w,c
  2292  007FE8                     L1:
  2293  007FE8  6E17               	movwf	___flmul@prod+3,c
  2294  007FEA                     l3493:
  2295  007FEA  500D               	movf	___flmul@sign,w,c
  2296  007FEC  1217               	iorwf	___flmul@prod+3,f,c
  2297  007FEE  C014  F001         	movff	___flmul@prod,?___flmul
  2298  007FF2  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  2299  007FF6  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  2300  007FFA  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  2301  007FFE  0012               	return		;funcret
  2302  008000                     __end_of___flmul:
  2303                           	opt callstack 0
  2304                           
  2305 ;; *************** function ___fldiv *****************
  2306 ;; Defined at:
  2307 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  b               4   25[COMRAM] unsigned char 
  2310 ;;  a               4   29[COMRAM] unsigned char 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  grs             4   44[COMRAM] unsigned long 
  2313 ;;  rem             4   37[COMRAM] unsigned long 
  2314 ;;  new_exp         2   42[COMRAM] int 
  2315 ;;  aexp            1   49[COMRAM] unsigned char 
  2316 ;;  bexp            1   48[COMRAM] unsigned char 
  2317 ;;  sign            1   41[COMRAM] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  4   25[COMRAM] unsigned char 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2327 ;;      Params:         8       0       0       0       0       0       0       0       0
  2328 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2329 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2330 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2331 ;;Total ram usage:       25 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    2
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_readADC
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text9
  2342  007462                     __ptext9:
  2343                           	opt callstack 0
  2344  007462                     ___fldiv:
  2345                           	opt callstack 26
  2346                           
  2347                           ;incstack = 0
  2348  007462  501D               	movf	___fldiv@b+3,w,c
  2349  007464  0B80               	andlw	128
  2350  007466  6E2A               	movwf	___fldiv@sign,c
  2351  007468  501D               	movf	___fldiv@b+3,w,c
  2352  00746A  241D               	addwf	___fldiv@b+3,w,c
  2353  00746C  6E31               	movwf	___fldiv@bexp,c
  2354  00746E  BE1C               	btfsc	___fldiv@b+2,7,c
  2355  007470  8031               	bsf	___fldiv@bexp,0,c
  2356  007472  5031               	movf	___fldiv@bexp,w,c
  2357  007474  B4D8               	btfsc	status,2,c
  2358  007476  D00D               	goto	l3247
  2359  007478  2831               	incf	___fldiv@bexp,w,c
  2360  00747A  A4D8               	btfss	status,2,c
  2361  00747C  D008               	goto	l3243
  2362  00747E  0E00               	movlw	0
  2363  007480  6E1A               	movwf	___fldiv@b,c
  2364  007482  0E00               	movlw	0
  2365  007484  6E1B               	movwf	___fldiv@b+1,c
  2366  007486  0E00               	movlw	0
  2367  007488  6E1C               	movwf	___fldiv@b+2,c
  2368  00748A  0E00               	movlw	0
  2369  00748C  6E1D               	movwf	___fldiv@b+3,c
  2370  00748E                     l3243:
  2371  00748E  8E1C               	bsf	___fldiv@b+2,7,c
  2372  007490  D006               	goto	L2
  2373  007492                     l3247:
  2374  007492  0E00               	movlw	0
  2375  007494  6E1A               	movwf	___fldiv@b,c
  2376  007496  0E00               	movlw	0
  2377  007498  6E1B               	movwf	___fldiv@b+1,c
  2378  00749A  0E00               	movlw	0
  2379  00749C  6E1C               	movwf	___fldiv@b+2,c
  2380  00749E                     L2:
  2381  00749E  0E00               	movlw	0
  2382  0074A0  6E1D               	movwf	___fldiv@b+3,c
  2383  0074A2  5021               	movf	___fldiv@a+3,w,c
  2384  0074A4  0B80               	andlw	128
  2385  0074A6  1A2A               	xorwf	___fldiv@sign,f,c
  2386  0074A8  5021               	movf	___fldiv@a+3,w,c
  2387  0074AA  2421               	addwf	___fldiv@a+3,w,c
  2388  0074AC  6E32               	movwf	___fldiv@aexp,c
  2389  0074AE  BE20               	btfsc	___fldiv@a+2,7,c
  2390  0074B0  8032               	bsf	___fldiv@aexp,0,c
  2391  0074B2  5032               	movf	___fldiv@aexp,w,c
  2392  0074B4  B4D8               	btfsc	status,2,c
  2393  0074B6  D00D               	goto	l3267
  2394  0074B8  2832               	incf	___fldiv@aexp,w,c
  2395  0074BA  A4D8               	btfss	status,2,c
  2396  0074BC  D008               	goto	l3263
  2397  0074BE  0E00               	movlw	0
  2398  0074C0  6E1E               	movwf	___fldiv@a,c
  2399  0074C2  0E00               	movlw	0
  2400  0074C4  6E1F               	movwf	___fldiv@a+1,c
  2401  0074C6  0E00               	movlw	0
  2402  0074C8  6E20               	movwf	___fldiv@a+2,c
  2403  0074CA  0E00               	movlw	0
  2404  0074CC  6E21               	movwf	___fldiv@a+3,c
  2405  0074CE                     l3263:
  2406  0074CE  8E20               	bsf	___fldiv@a+2,7,c
  2407  0074D0  D006               	goto	L3
  2408  0074D2                     l3267:
  2409  0074D2  0E00               	movlw	0
  2410  0074D4  6E1E               	movwf	___fldiv@a,c
  2411  0074D6  0E00               	movlw	0
  2412  0074D8  6E1F               	movwf	___fldiv@a+1,c
  2413  0074DA  0E00               	movlw	0
  2414  0074DC  6E20               	movwf	___fldiv@a+2,c
  2415  0074DE                     L3:
  2416  0074DE  0E00               	movlw	0
  2417  0074E0  6E21               	movwf	___fldiv@a+3,c
  2418  0074E2  501E               	movf	___fldiv@a,w,c
  2419  0074E4  101F               	iorwf	___fldiv@a+1,w,c
  2420  0074E6  1020               	iorwf	___fldiv@a+2,w,c
  2421  0074E8  1021               	iorwf	___fldiv@a+3,w,c
  2422  0074EA  A4D8               	btfss	status,2,c
  2423  0074EC  D017               	goto	l3281
  2424  0074EE  0E00               	movlw	0
  2425  0074F0  6E1A               	movwf	___fldiv@b,c
  2426  0074F2  0E00               	movlw	0
  2427  0074F4  6E1B               	movwf	___fldiv@b+1,c
  2428  0074F6  0E00               	movlw	0
  2429  0074F8  6E1C               	movwf	___fldiv@b+2,c
  2430  0074FA  0E00               	movlw	0
  2431  0074FC  6E1D               	movwf	___fldiv@b+3,c
  2432  0074FE  0E80               	movlw	128
  2433  007500  121C               	iorwf	___fldiv@b+2,f,c
  2434  007502  0E7F               	movlw	127
  2435  007504  121D               	iorwf	___fldiv@b+3,f,c
  2436  007506                     l3275:
  2437  007506  502A               	movf	___fldiv@sign,w,c
  2438  007508  121D               	iorwf	___fldiv@b+3,f,c
  2439  00750A  C01A  F01A         	movff	___fldiv@b,?___fldiv
  2440  00750E  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
  2441  007512  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
  2442  007516  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
  2443  00751A  0012               	return	
  2444  00751C                     l3281:
  2445  00751C  5031               	movf	___fldiv@bexp,w,c
  2446  00751E  A4D8               	btfss	status,2,c
  2447  007520  D009               	goto	l3289
  2448  007522  0E00               	movlw	0
  2449  007524  6E1A               	movwf	?___fldiv,c
  2450  007526  0E00               	movlw	0
  2451  007528  6E1B               	movwf	?___fldiv+1,c
  2452  00752A  0E00               	movlw	0
  2453  00752C  6E1C               	movwf	?___fldiv+2,c
  2454  00752E  0E00               	movlw	0
  2455  007530  6E1D               	movwf	?___fldiv+3,c
  2456  007532  0012               	return	
  2457  007534                     l3289:
  2458  007534  5032               	movf	___fldiv@aexp,w,c
  2459  007536  C031  F022         	movff	___fldiv@bexp,??___fldiv
  2460  00753A  6A23               	clrf	(??___fldiv+1)& (0+255),c
  2461  00753C  5E22               	subwf	??___fldiv,f,c
  2462  00753E  0E00               	movlw	0
  2463  007540  5A23               	subwfb	??___fldiv+1,f,c
  2464  007542  0E7F               	movlw	127
  2465  007544  2422               	addwf	??___fldiv,w,c
  2466  007546  6E2B               	movwf	___fldiv@new_exp,c
  2467  007548  0E00               	movlw	0
  2468  00754A  2023               	addwfc	??___fldiv+1,w,c
  2469  00754C  6E2C               	movwf	___fldiv@new_exp+1,c
  2470  00754E  C01A  F026         	movff	___fldiv@b,___fldiv@rem
  2471  007552  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
  2472  007556  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
  2473  00755A  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
  2474  00755E  0E00               	movlw	0
  2475  007560  6E1A               	movwf	___fldiv@b,c
  2476  007562  0E00               	movlw	0
  2477  007564  6E1B               	movwf	___fldiv@b+1,c
  2478  007566  0E00               	movlw	0
  2479  007568  6E1C               	movwf	___fldiv@b+2,c
  2480  00756A  0E00               	movlw	0
  2481  00756C  6E1D               	movwf	___fldiv@b+3,c
  2482  00756E  0E00               	movlw	0
  2483  007570  6E2D               	movwf	___fldiv@grs,c
  2484  007572  0E00               	movlw	0
  2485  007574  6E2E               	movwf	___fldiv@grs+1,c
  2486  007576  0E00               	movlw	0
  2487  007578  6E2F               	movwf	___fldiv@grs+2,c
  2488  00757A  0E00               	movlw	0
  2489  00757C  6E30               	movwf	___fldiv@grs+3,c
  2490  00757E  0E00               	movlw	0
  2491  007580  6E32               	movwf	___fldiv@aexp,c
  2492  007582  D028               	goto	l1316
  2493  007584                     l3299:
  2494  007584  5032               	movf	___fldiv@aexp,w,c
  2495  007586  B4D8               	btfsc	status,2,c
  2496  007588  D011               	goto	l3307
  2497  00758A  90D8               	bcf	status,0,c
  2498  00758C  3626               	rlcf	___fldiv@rem,f,c
  2499  00758E  3627               	rlcf	___fldiv@rem+1,f,c
  2500  007590  3628               	rlcf	___fldiv@rem+2,f,c
  2501  007592  3629               	rlcf	___fldiv@rem+3,f,c
  2502  007594  90D8               	bcf	status,0,c
  2503  007596  361A               	rlcf	___fldiv@b,f,c
  2504  007598  361B               	rlcf	___fldiv@b+1,f,c
  2505  00759A  361C               	rlcf	___fldiv@b+2,f,c
  2506  00759C  361D               	rlcf	___fldiv@b+3,f,c
  2507  00759E  BE30               	btfsc	___fldiv@grs+3,7,c
  2508  0075A0  801A               	bsf	___fldiv@b,0,c
  2509  0075A2  90D8               	bcf	status,0,c
  2510  0075A4  362D               	rlcf	___fldiv@grs,f,c
  2511  0075A6  362E               	rlcf	___fldiv@grs+1,f,c
  2512  0075A8  362F               	rlcf	___fldiv@grs+2,f,c
  2513  0075AA  3630               	rlcf	___fldiv@grs+3,f,c
  2514  0075AC                     l3307:
  2515  0075AC  501E               	movf	___fldiv@a,w,c
  2516  0075AE  5C26               	subwf	___fldiv@rem,w,c
  2517  0075B0  501F               	movf	___fldiv@a+1,w,c
  2518  0075B2  5827               	subwfb	___fldiv@rem+1,w,c
  2519  0075B4  5020               	movf	___fldiv@a+2,w,c
  2520  0075B6  5828               	subwfb	___fldiv@rem+2,w,c
  2521  0075B8  5021               	movf	___fldiv@a+3,w,c
  2522  0075BA  5829               	subwfb	___fldiv@rem+3,w,c
  2523  0075BC  A0D8               	btfss	status,0,c
  2524  0075BE  D009               	goto	l3313
  2525  0075C0  8C30               	bsf	___fldiv@grs+3,6,c
  2526  0075C2  501E               	movf	___fldiv@a,w,c
  2527  0075C4  5E26               	subwf	___fldiv@rem,f,c
  2528  0075C6  501F               	movf	___fldiv@a+1,w,c
  2529  0075C8  5A27               	subwfb	___fldiv@rem+1,f,c
  2530  0075CA  5020               	movf	___fldiv@a+2,w,c
  2531  0075CC  5A28               	subwfb	___fldiv@rem+2,f,c
  2532  0075CE  5021               	movf	___fldiv@a+3,w,c
  2533  0075D0  5A29               	subwfb	___fldiv@rem+3,f,c
  2534  0075D2                     l3313:
  2535  0075D2  2A32               	incf	___fldiv@aexp,f,c
  2536  0075D4                     l1316:
  2537  0075D4  0E19               	movlw	25
  2538  0075D6  6432               	cpfsgt	___fldiv@aexp,c
  2539  0075D8  D7D5               	goto	l3299
  2540  0075DA  5026               	movf	___fldiv@rem,w,c
  2541  0075DC  1027               	iorwf	___fldiv@rem+1,w,c
  2542  0075DE  1028               	iorwf	___fldiv@rem+2,w,c
  2543  0075E0  1029               	iorwf	___fldiv@rem+3,w,c
  2544  0075E2  B4D8               	btfsc	status,2,c
  2545  0075E4  D011               	goto	l3325
  2546  0075E6  802D               	bsf	___fldiv@grs,0,c
  2547  0075E8  D00F               	goto	l3325
  2548  0075EA                     l3319:
  2549  0075EA  90D8               	bcf	status,0,c
  2550  0075EC  361A               	rlcf	___fldiv@b,f,c
  2551  0075EE  361B               	rlcf	___fldiv@b+1,f,c
  2552  0075F0  361C               	rlcf	___fldiv@b+2,f,c
  2553  0075F2  361D               	rlcf	___fldiv@b+3,f,c
  2554  0075F4  BE30               	btfsc	___fldiv@grs+3,7,c
  2555  0075F6  801A               	bsf	___fldiv@b,0,c
  2556  0075F8  90D8               	bcf	status,0,c
  2557  0075FA  362D               	rlcf	___fldiv@grs,f,c
  2558  0075FC  362E               	rlcf	___fldiv@grs+1,f,c
  2559  0075FE  362F               	rlcf	___fldiv@grs+2,f,c
  2560  007600  3630               	rlcf	___fldiv@grs+3,f,c
  2561  007602  062B               	decf	___fldiv@new_exp,f,c
  2562  007604  A0D8               	btfss	status,0,c
  2563  007606  062C               	decf	___fldiv@new_exp+1,f,c
  2564  007608                     l3325:
  2565  007608  AE1C               	btfss	___fldiv@b+2,7,c
  2566  00760A  D7EF               	goto	l3319
  2567  00760C  0E00               	movlw	0
  2568  00760E  6E32               	movwf	___fldiv@aexp,c
  2569  007610  AE30               	btfss	___fldiv@grs+3,7,c
  2570  007612  D017               	goto	l1327
  2571  007614  0EFF               	movlw	255
  2572  007616  142D               	andwf	___fldiv@grs,w,c
  2573  007618  6E22               	movwf	??___fldiv& (0+255),c
  2574  00761A  0EFF               	movlw	255
  2575  00761C  142E               	andwf	___fldiv@grs+1,w,c
  2576  00761E  6E23               	movwf	(??___fldiv+1)& (0+255),c
  2577  007620  0EFF               	movlw	255
  2578  007622  142F               	andwf	___fldiv@grs+2,w,c
  2579  007624  6E24               	movwf	(??___fldiv+2)& (0+255),c
  2580  007626  0E7F               	movlw	127
  2581  007628  1430               	andwf	___fldiv@grs+3,w,c
  2582  00762A  6E25               	movwf	(??___fldiv+3)& (0+255),c
  2583  00762C  5022               	movf	??___fldiv,w,c
  2584  00762E  1023               	iorwf	??___fldiv+1,w,c
  2585  007630  1024               	iorwf	??___fldiv+2,w,c
  2586  007632  1025               	iorwf	??___fldiv+3,w,c
  2587  007634  B4D8               	btfsc	status,2,c
  2588  007636  D003               	goto	l1328
  2589  007638                     u2650:
  2590  007638  0E01               	movlw	1
  2591  00763A  6E32               	movwf	___fldiv@aexp,c
  2592  00763C  D002               	goto	l1327
  2593  00763E                     l1328:
  2594  00763E  B01A               	btfsc	___fldiv@b,0,c
  2595  007640  D7FB               	goto	u2650
  2596  007642                     l1327:
  2597  007642  5032               	movf	___fldiv@aexp,w,c
  2598  007644  B4D8               	btfsc	status,2,c
  2599  007646  D01F               	goto	l3345
  2600  007648  0E01               	movlw	1
  2601  00764A  261A               	addwf	___fldiv@b,f,c
  2602  00764C  0E00               	movlw	0
  2603  00764E  221B               	addwfc	___fldiv@b+1,f,c
  2604  007650  221C               	addwfc	___fldiv@b+2,f,c
  2605  007652  221D               	addwfc	___fldiv@b+3,f,c
  2606  007654  A01D               	btfss	___fldiv@b+3,0,c
  2607  007656  D017               	goto	l3345
  2608  007658  C01A  F022         	movff	___fldiv@b,??___fldiv
  2609  00765C  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
  2610  007660  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
  2611  007664  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
  2612  007668  3425               	rlcf	??___fldiv+3,w,c
  2613  00766A  3225               	rrcf	??___fldiv+3,f,c
  2614  00766C  3224               	rrcf	??___fldiv+2,f,c
  2615  00766E  3223               	rrcf	??___fldiv+1,f,c
  2616  007670  3222               	rrcf	??___fldiv,f,c
  2617  007672  C022  F01A         	movff	??___fldiv,___fldiv@b
  2618  007676  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
  2619  00767A  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
  2620  00767E  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
  2621  007682  4A2B               	infsnz	___fldiv@new_exp,f,c
  2622  007684  2A2C               	incf	___fldiv@new_exp+1,f,c
  2623  007686                     l3345:
  2624  007686  BE2C               	btfsc	___fldiv@new_exp+1,7,c
  2625  007688  D010               	goto	l3349
  2626  00768A  502C               	movf	___fldiv@new_exp+1,w,c
  2627  00768C  E103               	bnz	u2690
  2628  00768E  282B               	incf	___fldiv@new_exp,w,c
  2629  007690  A0D8               	btfss	status,0,c
  2630  007692  D00B               	goto	l3349
  2631  007694                     u2690:
  2632  007694  0E00               	movlw	0
  2633  007696  6E2C               	movwf	___fldiv@new_exp+1,c
  2634  007698  682B               	setf	___fldiv@new_exp,c
  2635  00769A  0E00               	movlw	0
  2636  00769C  6E1A               	movwf	___fldiv@b,c
  2637  00769E  0E00               	movlw	0
  2638  0076A0  6E1B               	movwf	___fldiv@b+1,c
  2639  0076A2  0E00               	movlw	0
  2640  0076A4  6E1C               	movwf	___fldiv@b+2,c
  2641  0076A6  0E00               	movlw	0
  2642  0076A8  6E1D               	movwf	___fldiv@b+3,c
  2643  0076AA                     l3349:
  2644  0076AA  BE2C               	btfsc	___fldiv@new_exp+1,7,c
  2645  0076AC  D005               	goto	u2700
  2646  0076AE  502C               	movf	___fldiv@new_exp+1,w,c
  2647  0076B0  E111               	bnz	l3353
  2648  0076B2  042B               	decf	___fldiv@new_exp,w,c
  2649  0076B4  B0D8               	btfsc	status,0,c
  2650  0076B6  D00E               	goto	l3353
  2651  0076B8                     u2700:
  2652  0076B8  0E00               	movlw	0
  2653  0076BA  6E2C               	movwf	___fldiv@new_exp+1,c
  2654  0076BC  0E00               	movlw	0
  2655  0076BE  6E2B               	movwf	___fldiv@new_exp,c
  2656  0076C0  0E00               	movlw	0
  2657  0076C2  6E1A               	movwf	___fldiv@b,c
  2658  0076C4  0E00               	movlw	0
  2659  0076C6  6E1B               	movwf	___fldiv@b+1,c
  2660  0076C8  0E00               	movlw	0
  2661  0076CA  6E1C               	movwf	___fldiv@b+2,c
  2662  0076CC  0E00               	movlw	0
  2663  0076CE  6E1D               	movwf	___fldiv@b+3,c
  2664  0076D0  0E00               	movlw	0
  2665  0076D2  6E2A               	movwf	___fldiv@sign,c
  2666  0076D4                     l3353:
  2667  0076D4  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
  2668  0076D8  A031               	btfss	___fldiv@bexp,0,c
  2669  0076DA  D002               	goto	l3359
  2670  0076DC  8E1C               	bsf	___fldiv@b+2,7,c
  2671  0076DE  D001               	goto	l3361
  2672  0076E0                     l3359:
  2673  0076E0  9E1C               	bcf	___fldiv@b+2,7,c
  2674  0076E2                     l3361:
  2675  0076E2  90D8               	bcf	status,0,c
  2676  0076E4  3031               	rrcf	___fldiv@bexp,w,c
  2677  0076E6  6E1D               	movwf	___fldiv@b+3,c
  2678  0076E8  D70E               	goto	l3275
  2679  0076EA                     __end_of___fldiv:
  2680                           	opt callstack 0
  2681                           
  2682 ;; *************** function _msg2LCD *****************
  2683 ;; Defined at:
  2684 ;;		line 27 in file "lcd.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  datos           2    2[COMRAM] PTR const unsigned char 
  2687 ;;		 -> STR_10(28), STR_9(5), STR_8(5), STR_7(5), 
  2688 ;;		 -> STR_4(5), STR_3(13), STR_2(3), STR_1(7), 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  i               4    4[COMRAM] unsigned long 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2700 ;;      Params:         2       0       0       0       0       0       0       0       0
  2701 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2703 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2704 ;;Total ram usage:        6 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    4
  2707 ;; This function calls:
  2708 ;;		_write_DATA
  2709 ;; This function is called by:
  2710 ;;		_descomposicion
  2711 ;;		_demo_shield2_1_INI
  2712 ;;		_demo_shield2_1
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text10
  2717  006E6C                     __ptext10:
  2718                           	opt callstack 0
  2719  006E6C                     _msg2LCD:
  2720                           	opt callstack 25
  2721                           
  2722                           ;lcd.c: 29: while (*datos != 0) {
  2723                           
  2724                           ;incstack = 0
  2725  006E6C  D021               	goto	l3623
  2726  006E6E                     l3611:
  2727                           
  2728                           ;lcd.c: 30: write_DATA(*datos);
  2729  006E6E  C003  FFF6         	movff	msg2LCD@datos,tblptrl
  2730  006E72  C004  FFF7         	movff	msg2LCD@datos+1,tblptrh
  2731  006E76                     	if	0	;tblptru may be non-zero
  2732  006E76                     	endif
  2733  006E76                     	if	0	;tblptru may be non-zero
  2734  006E76                     	endif
  2735  006E76  0008               	tblrd		*
  2736  006E78  50F5               	movf	tablat,w,c
  2737  006E7A  EC04  F010         	call	_write_DATA
  2738                           
  2739                           ;lcd.c: 32: for (unsigned long i = 0; i < 1000; i++);
  2740  006E7E  0E00               	movlw	0
  2741  006E80  6E05               	movwf	msg2LCD@i,c
  2742  006E82  0E00               	movlw	0
  2743  006E84  6E06               	movwf	msg2LCD@i+1,c
  2744  006E86  0E00               	movlw	0
  2745  006E88  6E07               	movwf	msg2LCD@i+2,c
  2746  006E8A  0E00               	movlw	0
  2747  006E8C  6E08               	movwf	msg2LCD@i+3,c
  2748  006E8E                     l3619:
  2749  006E8E  0E01               	movlw	1
  2750  006E90  2605               	addwf	msg2LCD@i,f,c
  2751  006E92  0E00               	movlw	0
  2752  006E94  2206               	addwfc	msg2LCD@i+1,f,c
  2753  006E96  2207               	addwfc	msg2LCD@i+2,f,c
  2754  006E98  2208               	addwfc	msg2LCD@i+3,f,c
  2755  006E9A  5008               	movf	msg2LCD@i+3,w,c
  2756  006E9C  1007               	iorwf	msg2LCD@i+2,w,c
  2757  006E9E  E106               	bnz	u3090
  2758  006EA0  0EE8               	movlw	232
  2759  006EA2  5C05               	subwf	msg2LCD@i,w,c
  2760  006EA4  0E03               	movlw	3
  2761  006EA6  5806               	subwfb	msg2LCD@i+1,w,c
  2762  006EA8  A0D8               	btfss	status,0,c
  2763  006EAA  D7F1               	goto	l3619
  2764  006EAC                     u3090:
  2765                           
  2766                           ;lcd.c: 33: datos++;
  2767  006EAC  4A03               	infsnz	msg2LCD@datos,f,c
  2768  006EAE  2A04               	incf	msg2LCD@datos+1,f,c
  2769  006EB0                     l3623:
  2770  006EB0  C003  FFF6         	movff	msg2LCD@datos,tblptrl
  2771  006EB4  C004  FFF7         	movff	msg2LCD@datos+1,tblptrh
  2772  006EB8                     	if	0	;tblptru may be non-zero
  2773  006EB8                     	endif
  2774  006EB8                     	if	0	;tblptru may be non-zero
  2775  006EB8                     	endif
  2776  006EB8  0008               	tblrd		*
  2777  006EBA  50F5               	movf	tablat,w,c
  2778  006EBC  0900               	iorlw	0
  2779  006EBE  B4D8               	btfsc	status,2,c
  2780  006EC0  0012               	return	
  2781  006EC2  D7D5               	goto	l3611
  2782  006EC4                     __end_of_msg2LCD:
  2783                           	opt callstack 0
  2784                           
  2785 ;; *************** function _char2LCD *****************
  2786 ;; Defined at:
  2787 ;;		line 39 in file "lcd.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  dato            1    wreg     unsigned char 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  dato            1    2[COMRAM] unsigned char 
  2792 ;;  i               4    3[COMRAM] unsigned long 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0
  2803 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2805 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2806 ;;Total ram usage:        5 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    4
  2809 ;; This function calls:
  2810 ;;		_write_DATA
  2811 ;; This function is called by:
  2812 ;;		_descomposicion
  2813 ;;		_demo_shield2_1
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text11
  2818  006D5A                     __ptext11:
  2819                           	opt callstack 0
  2820  006D5A                     _char2LCD:
  2821                           	opt callstack 25
  2822                           
  2823                           ;incstack = 0
  2824                           ;char2LCD@dato stored from wreg
  2825  006D5A  6E03               	movwf	char2LCD@dato,c
  2826                           
  2827                           ;lcd.c: 41: write_DATA(dato);
  2828  006D5C  5003               	movf	char2LCD@dato,w,c
  2829  006D5E  EC04  F010         	call	_write_DATA
  2830                           
  2831                           ;lcd.c: 43: for (unsigned long i = 0; i < 1000; i++);
  2832  006D62  0E00               	movlw	0
  2833  006D64  6E04               	movwf	char2LCD@i,c
  2834  006D66  0E00               	movlw	0
  2835  006D68  6E05               	movwf	char2LCD@i+1,c
  2836  006D6A  0E00               	movlw	0
  2837  006D6C  6E06               	movwf	char2LCD@i+2,c
  2838  006D6E  0E00               	movlw	0
  2839  006D70  6E07               	movwf	char2LCD@i+3,c
  2840  006D72                     l3633:
  2841  006D72  0E01               	movlw	1
  2842  006D74  2604               	addwf	char2LCD@i,f,c
  2843  006D76  0E00               	movlw	0
  2844  006D78  2205               	addwfc	char2LCD@i+1,f,c
  2845  006D7A  2206               	addwfc	char2LCD@i+2,f,c
  2846  006D7C  2207               	addwfc	char2LCD@i+3,f,c
  2847  006D7E  5007               	movf	char2LCD@i+3,w,c
  2848  006D80  1006               	iorwf	char2LCD@i+2,w,c
  2849  006D82  E107               	bnz	u3110
  2850  006D84  0EE8               	movlw	232
  2851  006D86  5C04               	subwf	char2LCD@i,w,c
  2852  006D88  0E03               	movlw	3
  2853  006D8A  5805               	subwfb	char2LCD@i+1,w,c
  2854  006D8C  B0D8               	btfsc	status,0,c
  2855  006D8E  0012               	return	
  2856  006D90  D7F0               	goto	l3633
  2857  006D92                     u3110:
  2858  006D92  0012               	return		;funcret
  2859  006D94                     __end_of_char2LCD:
  2860                           	opt callstack 0
  2861                           
  2862 ;; *************** function _write_DATA *****************
  2863 ;; Defined at:
  2864 ;;		line 120 in file "lcd.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  dato            1    wreg     unsigned char 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  dato            1    1[COMRAM] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2878 ;;      Params:         0       0       0       0       0       0       0       0       0
  2879 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2881 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2882 ;;Total ram usage:        1 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    3
  2885 ;; This function calls:
  2886 ;;		_write_LCD
  2887 ;; This function is called by:
  2888 ;;		_msg2LCD
  2889 ;;		_char2LCD
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text12
  2894  002008                     __ptext12:
  2895                           	opt callstack 0
  2896  002008                     _write_DATA:
  2897                           	opt callstack 25
  2898                           
  2899                           ;incstack = 0
  2900                           ;write_DATA@dato stored from wreg
  2901  002008  6E02               	movwf	write_DATA@dato,c
  2902                           
  2903                           ;lcd.c: 122: PORTEbits.RE1 = 0x1;
  2904  00200A  8284               	bsf	3972,1,c	;volatile
  2905                           
  2906                           ;lcd.c: 123: PORTEbits.RE0 = 0x0;
  2907  00200C  9084               	bcf	3972,0,c	;volatile
  2908                           
  2909                           ;lcd.c: 124: write_LCD(dato);
  2910  00200E  5002               	movf	write_DATA@dato,w,c
  2911  002010  EC4C  F036         	call	_write_LCD
  2912  002014  0012               	return		;funcret
  2913  002016                     __end_of_write_DATA:
  2914                           	opt callstack 0
  2915                           
  2916 ;; *************** function ___fladd *****************
  2917 ;; Defined at:
  2918 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  b               4    0[COMRAM] void 
  2921 ;;  a               4    4[COMRAM] void 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  grs             1   15[COMRAM] unsigned char 
  2924 ;;  bexp            1   14[COMRAM] unsigned char 
  2925 ;;  aexp            1   13[COMRAM] unsigned char 
  2926 ;;  signs           1   12[COMRAM] unsigned char 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  4    0[COMRAM] unsigned char 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2936 ;;      Params:         8       0       0       0       0       0       0       0       0
  2937 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2938 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2939 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2940 ;;Total ram usage:       16 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    2
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_descomposicion
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text13
  2951  0079A2                     __ptext13:
  2952                           	opt callstack 0
  2953  0079A2                     ___fladd:
  2954                           	opt callstack 27
  2955                           
  2956                           ;incstack = 0
  2957  0079A2  5004               	movf	___fladd@b+3,w,c
  2958  0079A4  0B80               	andlw	128
  2959  0079A6  6E0D               	movwf	___fladd@signs,c
  2960  0079A8  5004               	movf	___fladd@b+3,w,c
  2961  0079AA  2404               	addwf	___fladd@b+3,w,c
  2962  0079AC  6E0F               	movwf	___fladd@bexp,c
  2963  0079AE  BE03               	btfsc	___fladd@b+2,7,c
  2964  0079B0  800F               	bsf	___fladd@bexp,0,c
  2965  0079B2  500F               	movf	___fladd@bexp,w,c
  2966  0079B4  B4D8               	btfsc	status,2,c
  2967  0079B6  D00D               	goto	l3799
  2968  0079B8  280F               	incf	___fladd@bexp,w,c
  2969  0079BA  A4D8               	btfss	status,2,c
  2970  0079BC  D008               	goto	l3795
  2971  0079BE  0E00               	movlw	0
  2972  0079C0  6E01               	movwf	___fladd@b,c
  2973  0079C2  0E00               	movlw	0
  2974  0079C4  6E02               	movwf	___fladd@b+1,c
  2975  0079C6  0E00               	movlw	0
  2976  0079C8  6E03               	movwf	___fladd@b+2,c
  2977  0079CA  0E00               	movlw	0
  2978  0079CC  6E04               	movwf	___fladd@b+3,c
  2979  0079CE                     l3795:
  2980  0079CE  8E03               	bsf	___fladd@b+2,7,c
  2981  0079D0  D006               	goto	L4
  2982  0079D2                     l3799:
  2983  0079D2  0E00               	movlw	0
  2984  0079D4  6E01               	movwf	___fladd@b,c
  2985  0079D6  0E00               	movlw	0
  2986  0079D8  6E02               	movwf	___fladd@b+1,c
  2987  0079DA  0E00               	movlw	0
  2988  0079DC  6E03               	movwf	___fladd@b+2,c
  2989  0079DE                     L4:
  2990  0079DE  0E00               	movlw	0
  2991  0079E0  6E04               	movwf	___fladd@b+3,c
  2992  0079E2  5008               	movf	___fladd@a+3,w,c
  2993  0079E4  0B80               	andlw	128
  2994  0079E6  6E0E               	movwf	___fladd@aexp,c
  2995  0079E8  500D               	movf	___fladd@signs,w,c
  2996  0079EA  180E               	xorwf	___fladd@aexp,w,c
  2997  0079EC  A4D8               	btfss	status,2,c
  2998  0079EE  8C0D               	bsf	___fladd@signs,6,c
  2999  0079F0  5008               	movf	___fladd@a+3,w,c
  3000  0079F2  2408               	addwf	___fladd@a+3,w,c
  3001  0079F4  6E0E               	movwf	___fladd@aexp,c
  3002  0079F6  BE07               	btfsc	___fladd@a+2,7,c
  3003  0079F8  800E               	bsf	___fladd@aexp,0,c
  3004  0079FA  500E               	movf	___fladd@aexp,w,c
  3005  0079FC  B4D8               	btfsc	status,2,c
  3006  0079FE  D00D               	goto	l3823
  3007  007A00  280E               	incf	___fladd@aexp,w,c
  3008  007A02  A4D8               	btfss	status,2,c
  3009  007A04  D008               	goto	l3819
  3010  007A06  0E00               	movlw	0
  3011  007A08  6E05               	movwf	___fladd@a,c
  3012  007A0A  0E00               	movlw	0
  3013  007A0C  6E06               	movwf	___fladd@a+1,c
  3014  007A0E  0E00               	movlw	0
  3015  007A10  6E07               	movwf	___fladd@a+2,c
  3016  007A12  0E00               	movlw	0
  3017  007A14  6E08               	movwf	___fladd@a+3,c
  3018  007A16                     l3819:
  3019  007A16  8E07               	bsf	___fladd@a+2,7,c
  3020  007A18  D006               	goto	L5
  3021  007A1A                     l3823:
  3022  007A1A  0E00               	movlw	0
  3023  007A1C  6E05               	movwf	___fladd@a,c
  3024  007A1E  0E00               	movlw	0
  3025  007A20  6E06               	movwf	___fladd@a+1,c
  3026  007A22  0E00               	movlw	0
  3027  007A24  6E07               	movwf	___fladd@a+2,c
  3028  007A26                     L5:
  3029  007A26  0E00               	movlw	0
  3030  007A28  6E08               	movwf	___fladd@a+3,c
  3031  007A2A  500F               	movf	___fladd@bexp,w,c
  3032  007A2C  5C0E               	subwf	___fladd@aexp,w,c
  3033  007A2E  B0D8               	btfsc	status,0,c
  3034  007A30  D022               	goto	l3861
  3035  007A32  AC0D               	btfss	___fladd@signs,6,c
  3036  007A34  D002               	goto	l3831
  3037  007A36  0E80               	movlw	128
  3038  007A38  1A0D               	xorwf	___fladd@signs,f,c
  3039  007A3A                     l3831:
  3040  007A3A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3041  007A3E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3042  007A42  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3043  007A46  C001  F010         	movff	___fladd@b,___fladd@grs
  3044  007A4A  C005  F001         	movff	___fladd@a,___fladd@b
  3045  007A4E  C010  F005         	movff	___fladd@grs,___fladd@a
  3046  007A52  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3047  007A56  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3048  007A5A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3049  007A5E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3050  007A62  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3051  007A66  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3052  007A6A  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3053  007A6E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3054  007A72  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3055  007A76                     l3861:
  3056  007A76  0E00               	movlw	0
  3057  007A78  6E10               	movwf	___fladd@grs,c
  3058  007A7A  500F               	movf	___fladd@bexp,w,c
  3059  007A7C  C00E  F009         	movff	___fladd@aexp,??___fladd
  3060  007A80  6A0A               	clrf	(??___fladd+1)& (0+255),c
  3061  007A82  5E09               	subwf	??___fladd,f,c
  3062  007A84  0E00               	movlw	0
  3063  007A86  5A0A               	subwfb	??___fladd+1,f,c
  3064  007A88  BE0A               	btfsc	??___fladd+1,7,c
  3065  007A8A  D02C               	goto	l1261
  3066  007A8C  500A               	movf	??___fladd+1,w,c
  3067  007A8E  E104               	bnz	u3420
  3068  007A90  0E1A               	movlw	26
  3069  007A92  5C09               	subwf	??___fladd,w,c
  3070  007A94  A0D8               	btfss	status,0,c
  3071  007A96  D026               	goto	l1261
  3072  007A98                     u3420:
  3073  007A98  5001               	movf	___fladd@b,w,c
  3074  007A9A  1002               	iorwf	___fladd@b+1,w,c
  3075  007A9C  1003               	iorwf	___fladd@b+2,w,c
  3076  007A9E  1004               	iorwf	___fladd@b+3,w,c
  3077  007AA0  B4D8               	btfsc	status,2,c
  3078  007AA2  D002               	goto	u3430
  3079  007AA4  0E01               	movlw	1
  3080  007AA6  D001               	goto	u3440
  3081  007AA8                     u3430:
  3082  007AA8  0E00               	movlw	0
  3083  007AAA                     u3440:
  3084  007AAA  6E10               	movwf	___fladd@grs,c
  3085  007AAC  0E00               	movlw	0
  3086  007AAE  6E01               	movwf	___fladd@b,c
  3087  007AB0  0E00               	movlw	0
  3088  007AB2  6E02               	movwf	___fladd@b+1,c
  3089  007AB4  0E00               	movlw	0
  3090  007AB6  6E03               	movwf	___fladd@b+2,c
  3091  007AB8  0E00               	movlw	0
  3092  007ABA  6E04               	movwf	___fladd@b+3,c
  3093  007ABC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3094  007AC0  D015               	goto	u3470
  3095  007AC2                     l1262:
  3096  007AC2  A010               	btfss	___fladd@grs,0,c
  3097  007AC4  D005               	goto	l3873
  3098  007AC6  90D8               	bcf	status,0,c
  3099  007AC8  3010               	rrcf	___fladd@grs,w,c
  3100  007ACA  0901               	iorlw	1
  3101  007ACC  6E10               	movwf	___fladd@grs,c
  3102  007ACE  D002               	goto	l3875
  3103  007AD0                     l3873:
  3104  007AD0  90D8               	bcf	status,0,c
  3105  007AD2  3210               	rrcf	___fladd@grs,f,c
  3106  007AD4                     l3875:
  3107  007AD4  B001               	btfsc	___fladd@b,0,c
  3108  007AD6  8E10               	bsf	___fladd@grs,7,c
  3109  007AD8  3404               	rlcf	___fladd@b+3,w,c
  3110  007ADA  3204               	rrcf	___fladd@b+3,f,c
  3111  007ADC  3203               	rrcf	___fladd@b+2,f,c
  3112  007ADE  3202               	rrcf	___fladd@b+1,f,c
  3113  007AE0  3201               	rrcf	___fladd@b,f,c
  3114  007AE2  2A0F               	incf	___fladd@bexp,f,c
  3115  007AE4                     l1261:
  3116  007AE4  500E               	movf	___fladd@aexp,w,c
  3117  007AE6  5C0F               	subwf	___fladd@bexp,w,c
  3118  007AE8  A0D8               	btfss	status,0,c
  3119  007AEA  D7EB               	goto	l1262
  3120  007AEC                     u3470:
  3121  007AEC  BC0D               	btfsc	___fladd@signs,6,c
  3122  007AEE  D028               	goto	l3907
  3123  007AF0  500F               	movf	___fladd@bexp,w,c
  3124  007AF2  A4D8               	btfss	status,2,c
  3125  007AF4  D009               	goto	l3889
  3126  007AF6  0E00               	movlw	0
  3127  007AF8  6E01               	movwf	?___fladd,c
  3128  007AFA  0E00               	movlw	0
  3129  007AFC  6E02               	movwf	?___fladd+1,c
  3130  007AFE  0E00               	movlw	0
  3131  007B00  6E03               	movwf	?___fladd+2,c
  3132  007B02  0E00               	movlw	0
  3133  007B04  6E04               	movwf	?___fladd+3,c
  3134  007B06  0012               	return	
  3135  007B08                     l3889:
  3136  007B08  5005               	movf	___fladd@a,w,c
  3137  007B0A  2601               	addwf	___fladd@b,f,c
  3138  007B0C  5006               	movf	___fladd@a+1,w,c
  3139  007B0E  2202               	addwfc	___fladd@b+1,f,c
  3140  007B10  5007               	movf	___fladd@a+2,w,c
  3141  007B12  2203               	addwfc	___fladd@b+2,f,c
  3142  007B14  5008               	movf	___fladd@a+3,w,c
  3143  007B16  2204               	addwfc	___fladd@b+3,f,c
  3144  007B18  A004               	btfss	___fladd@b+3,0,c
  3145  007B1A  D071               	goto	u3600
  3146  007B1C  A010               	btfss	___fladd@grs,0,c
  3147  007B1E  D005               	goto	l3897
  3148  007B20  90D8               	bcf	status,0,c
  3149  007B22  3010               	rrcf	___fladd@grs,w,c
  3150  007B24  0901               	iorlw	1
  3151  007B26  6E10               	movwf	___fladd@grs,c
  3152  007B28  D002               	goto	l3899
  3153  007B2A                     l3897:
  3154  007B2A  90D8               	bcf	status,0,c
  3155  007B2C  3210               	rrcf	___fladd@grs,f,c
  3156  007B2E                     l3899:
  3157  007B2E  B001               	btfsc	___fladd@b,0,c
  3158  007B30  8E10               	bsf	___fladd@grs,7,c
  3159  007B32  3404               	rlcf	___fladd@b+3,w,c
  3160  007B34  3204               	rrcf	___fladd@b+3,f,c
  3161  007B36  3203               	rrcf	___fladd@b+2,f,c
  3162  007B38  3202               	rrcf	___fladd@b+1,f,c
  3163  007B3A  3201               	rrcf	___fladd@b,f,c
  3164  007B3C  2A0F               	incf	___fladd@bexp,f,c
  3165  007B3E  D05F               	goto	u3600
  3166  007B40                     l3907:
  3167  007B40  5005               	movf	___fladd@a,w,c
  3168  007B42  5C01               	subwf	___fladd@b,w,c
  3169  007B44  5006               	movf	___fladd@a+1,w,c
  3170  007B46  5802               	subwfb	___fladd@b+1,w,c
  3171  007B48  5007               	movf	___fladd@a+2,w,c
  3172  007B4A  5803               	subwfb	___fladd@b+2,w,c
  3173  007B4C  5004               	movf	___fladd@b+3,w,c
  3174  007B4E  0A80               	xorlw	128
  3175  007B50  6E09               	movwf	??___fladd& (0+255),c
  3176  007B52  5008               	movf	___fladd@a+3,w,c
  3177  007B54  0A80               	xorlw	128
  3178  007B56  5809               	subwfb	??___fladd& (0+255),w,c
  3179  007B58  B0D8               	btfsc	status,0,c
  3180  007B5A  D025               	goto	l3917
  3181  007B5C  5001               	movf	___fladd@b,w,c
  3182  007B5E  5C05               	subwf	___fladd@a,w,c
  3183  007B60  6E09               	movwf	??___fladd& (0+255),c
  3184  007B62  5002               	movf	___fladd@b+1,w,c
  3185  007B64  5806               	subwfb	___fladd@a+1,w,c
  3186  007B66  6E0A               	movwf	(??___fladd+1)& (0+255),c
  3187  007B68  5003               	movf	___fladd@b+2,w,c
  3188  007B6A  5807               	subwfb	___fladd@a+2,w,c
  3189  007B6C  6E0B               	movwf	(??___fladd+2)& (0+255),c
  3190  007B6E  5004               	movf	___fladd@b+3,w,c
  3191  007B70  5808               	subwfb	___fladd@a+3,w,c
  3192  007B72  6E0C               	movwf	(??___fladd+3)& (0+255),c
  3193  007B74  0EFF               	movlw	255
  3194  007B76  2409               	addwf	??___fladd,w,c
  3195  007B78  6E01               	movwf	___fladd@b,c
  3196  007B7A  0EFF               	movlw	255
  3197  007B7C  200A               	addwfc	??___fladd+1,w,c
  3198  007B7E  6E02               	movwf	___fladd@b+1,c
  3199  007B80  0EFF               	movlw	255
  3200  007B82  200B               	addwfc	??___fladd+2,w,c
  3201  007B84  6E03               	movwf	___fladd@b+2,c
  3202  007B86  0EFF               	movlw	255
  3203  007B88  200C               	addwfc	??___fladd+3,w,c
  3204  007B8A  6E04               	movwf	___fladd@b+3,c
  3205  007B8C  0E80               	movlw	128
  3206  007B8E  1A0D               	xorwf	___fladd@signs,f,c
  3207  007B90  6C10               	negf	___fladd@grs,c
  3208  007B92  5010               	movf	___fladd@grs,w,c
  3209  007B94  A4D8               	btfss	status,2,c
  3210  007B96  D00F               	goto	l1277
  3211  007B98  0E01               	movlw	1
  3212  007B9A  2601               	addwf	___fladd@b,f,c
  3213  007B9C  0E00               	movlw	0
  3214  007B9E  2202               	addwfc	___fladd@b+1,f,c
  3215  007BA0  2203               	addwfc	___fladd@b+2,f,c
  3216  007BA2  2204               	addwfc	___fladd@b+3,f,c
  3217  007BA4  D008               	goto	l1277
  3218  007BA6                     l3917:
  3219  007BA6  5005               	movf	___fladd@a,w,c
  3220  007BA8  5E01               	subwf	___fladd@b,f,c
  3221  007BAA  5006               	movf	___fladd@a+1,w,c
  3222  007BAC  5A02               	subwfb	___fladd@b+1,f,c
  3223  007BAE  5007               	movf	___fladd@a+2,w,c
  3224  007BB0  5A03               	subwfb	___fladd@b+2,f,c
  3225  007BB2  5008               	movf	___fladd@a+3,w,c
  3226  007BB4  5A04               	subwfb	___fladd@b+3,f,c
  3227  007BB6                     l1277:
  3228  007BB6  5001               	movf	___fladd@b,w,c
  3229  007BB8  1002               	iorwf	___fladd@b+1,w,c
  3230  007BBA  1003               	iorwf	___fladd@b+2,w,c
  3231  007BBC  1004               	iorwf	___fladd@b+3,w,c
  3232  007BBE  A4D8               	btfss	status,2,c
  3233  007BC0  D01C               	goto	l3941
  3234  007BC2  5010               	movf	___fladd@grs,w,c
  3235  007BC4  A4D8               	btfss	status,2,c
  3236  007BC6  D019               	goto	l3941
  3237  007BC8  0E00               	movlw	0
  3238  007BCA  6E01               	movwf	?___fladd,c
  3239  007BCC  0E00               	movlw	0
  3240  007BCE  6E02               	movwf	?___fladd+1,c
  3241  007BD0  0E00               	movlw	0
  3242  007BD2  6E03               	movwf	?___fladd+2,c
  3243  007BD4  0E00               	movlw	0
  3244  007BD6  6E04               	movwf	?___fladd+3,c
  3245  007BD8  0012               	return	
  3246  007BDA                     l3925:
  3247  007BDA  90D8               	bcf	status,0,c
  3248  007BDC  3601               	rlcf	___fladd@b,f,c
  3249  007BDE  3602               	rlcf	___fladd@b+1,f,c
  3250  007BE0  3603               	rlcf	___fladd@b+2,f,c
  3251  007BE2  3604               	rlcf	___fladd@b+3,f,c
  3252  007BE4  BE10               	btfsc	___fladd@grs,7,c
  3253  007BE6  8001               	bsf	___fladd@b,0,c
  3254  007BE8  A010               	btfss	___fladd@grs,0,c
  3255  007BEA  D002               	goto	l3935
  3256  007BEC  80D8               	bsf	status,0,c
  3257  007BEE  D001               	goto	L6
  3258  007BF0                     l3935:
  3259  007BF0  90D8               	bcf	status,0,c
  3260  007BF2                     L6:
  3261  007BF2  3610               	rlcf	___fladd@grs,f,c
  3262  007BF4  500F               	movf	___fladd@bexp,w,c
  3263  007BF6  A4D8               	btfss	status,2,c
  3264  007BF8  060F               	decf	___fladd@bexp,f,c
  3265  007BFA                     l3941:
  3266  007BFA  AE03               	btfss	___fladd@b+2,7,c
  3267  007BFC  D7EE               	goto	l3925
  3268  007BFE                     u3600:
  3269  007BFE  0E00               	movlw	0
  3270  007C00  6E0E               	movwf	___fladd@aexp,c
  3271  007C02  AE10               	btfss	___fladd@grs,7,c
  3272  007C04  D00B               	goto	l1286
  3273  007C06  C010  F009         	movff	___fladd@grs,??___fladd
  3274  007C0A  0E7F               	movlw	127
  3275  007C0C  1609               	andwf	??___fladd,f,c
  3276  007C0E  B4D8               	btfsc	status,2,c
  3277  007C10  D003               	goto	l1287
  3278  007C12                     u3620:
  3279  007C12  0E01               	movlw	1
  3280  007C14  6E0E               	movwf	___fladd@aexp,c
  3281  007C16  D002               	goto	l1286
  3282  007C18                     l1287:
  3283  007C18  B001               	btfsc	___fladd@b,0,c
  3284  007C1A  D7FB               	goto	u3620
  3285  007C1C                     l1286:
  3286  007C1C  500E               	movf	___fladd@aexp,w,c
  3287  007C1E  B4D8               	btfsc	status,2,c
  3288  007C20  D020               	goto	l3961
  3289  007C22  0E01               	movlw	1
  3290  007C24  2601               	addwf	___fladd@b,f,c
  3291  007C26  0E00               	movlw	0
  3292  007C28  2202               	addwfc	___fladd@b+1,f,c
  3293  007C2A  2203               	addwfc	___fladd@b+2,f,c
  3294  007C2C  2204               	addwfc	___fladd@b+3,f,c
  3295  007C2E  A004               	btfss	___fladd@b+3,0,c
  3296  007C30  D018               	goto	l3961
  3297  007C32  C001  F009         	movff	___fladd@b,??___fladd
  3298  007C36  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3299  007C3A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3300  007C3E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3301  007C42  340C               	rlcf	??___fladd+3,w,c
  3302  007C44  320C               	rrcf	??___fladd+3,f,c
  3303  007C46  320B               	rrcf	??___fladd+2,f,c
  3304  007C48  320A               	rrcf	??___fladd+1,f,c
  3305  007C4A  3209               	rrcf	??___fladd,f,c
  3306  007C4C  C009  F001         	movff	??___fladd,___fladd@b
  3307  007C50  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3308  007C54  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3309  007C58  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3310  007C5C  280F               	incf	___fladd@bexp,w,c
  3311  007C5E  A4D8               	btfss	status,2,c
  3312  007C60  2A0F               	incf	___fladd@bexp,f,c
  3313  007C62                     l3961:
  3314  007C62  280F               	incf	___fladd@bexp,w,c
  3315  007C64  B4D8               	btfsc	status,2,c
  3316  007C66  D003               	goto	u3680
  3317  007C68  500F               	movf	___fladd@bexp,w,c
  3318  007C6A  A4D8               	btfss	status,2,c
  3319  007C6C  D00D               	goto	l3969
  3320  007C6E                     u3680:
  3321  007C6E  0E00               	movlw	0
  3322  007C70  6E01               	movwf	___fladd@b,c
  3323  007C72  0E00               	movlw	0
  3324  007C74  6E02               	movwf	___fladd@b+1,c
  3325  007C76  0E00               	movlw	0
  3326  007C78  6E03               	movwf	___fladd@b+2,c
  3327  007C7A  0E00               	movlw	0
  3328  007C7C  6E04               	movwf	___fladd@b+3,c
  3329  007C7E  500F               	movf	___fladd@bexp,w,c
  3330  007C80  A4D8               	btfss	status,2,c
  3331  007C82  D002               	goto	l3969
  3332  007C84  0E00               	movlw	0
  3333  007C86  6E0D               	movwf	___fladd@signs,c
  3334  007C88                     l3969:
  3335  007C88  A00F               	btfss	___fladd@bexp,0,c
  3336  007C8A  D002               	goto	l3973
  3337  007C8C  8E03               	bsf	___fladd@b+2,7,c
  3338  007C8E  D001               	goto	l3975
  3339  007C90                     l3973:
  3340  007C90  9E03               	bcf	___fladd@b+2,7,c
  3341  007C92                     l3975:
  3342  007C92  90D8               	bcf	status,0,c
  3343  007C94  300F               	rrcf	___fladd@bexp,w,c
  3344  007C96  6E04               	movwf	___fladd@b+3,c
  3345  007C98  BE0D               	btfsc	___fladd@signs,7,c
  3346  007C9A  8E04               	bsf	___fladd@b+3,7,c
  3347  007C9C  C001  F001         	movff	___fladd@b,?___fladd
  3348  007CA0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3349  007CA4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3350  007CA8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3351  007CAC  0012               	return		;funcret
  3352  007CAE                     __end_of___fladd:
  3353                           	opt callstack 0
  3354                           
  3355 ;; *************** function ___almod *****************
  3356 ;; Defined at:
  3357 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\almod.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  dividend        4   54[COMRAM] long 
  3360 ;;  divisor         4   58[COMRAM] long 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  sign            1   63[COMRAM] unsigned char 
  3363 ;;  counter         1   62[COMRAM] unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  4   54[COMRAM] long 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3373 ;;      Params:         8       0       0       0       0       0       0       0       0
  3374 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3375 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3376 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3377 ;;Total ram usage:       10 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:    2
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_descomposicion
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text14
  3388  006F68                     __ptext14:
  3389                           	opt callstack 0
  3390  006F68                     ___almod:
  3391                           	opt callstack 27
  3392                           
  3393                           ;incstack = 0
  3394  006F68  0E00               	movlw	0
  3395  006F6A  6E40               	movwf	___almod@sign,c
  3396  006F6C  AE3A               	btfss	___almod@dividend+3,7,c
  3397  006F6E  D00A               	goto	l3755
  3398  006F70  1E3A               	comf	___almod@dividend+3,f,c
  3399  006F72  1E39               	comf	___almod@dividend+2,f,c
  3400  006F74  1E38               	comf	___almod@dividend+1,f,c
  3401  006F76  6C37               	negf	___almod@dividend,c
  3402  006F78  0E00               	movlw	0
  3403  006F7A  2238               	addwfc	___almod@dividend+1,f,c
  3404  006F7C  2239               	addwfc	___almod@dividend+2,f,c
  3405  006F7E  223A               	addwfc	___almod@dividend+3,f,c
  3406  006F80  0E01               	movlw	1
  3407  006F82  6E40               	movwf	___almod@sign,c
  3408  006F84                     l3755:
  3409  006F84  AE3E               	btfss	___almod@divisor+3,7,c
  3410  006F86  D008               	goto	l3759
  3411  006F88  1E3E               	comf	___almod@divisor+3,f,c
  3412  006F8A  1E3D               	comf	___almod@divisor+2,f,c
  3413  006F8C  1E3C               	comf	___almod@divisor+1,f,c
  3414  006F8E  6C3B               	negf	___almod@divisor,c
  3415  006F90  0E00               	movlw	0
  3416  006F92  223C               	addwfc	___almod@divisor+1,f,c
  3417  006F94  223D               	addwfc	___almod@divisor+2,f,c
  3418  006F96  223E               	addwfc	___almod@divisor+3,f,c
  3419  006F98                     l3759:
  3420  006F98  503B               	movf	___almod@divisor,w,c
  3421  006F9A  103C               	iorwf	___almod@divisor+1,w,c
  3422  006F9C  103D               	iorwf	___almod@divisor+2,w,c
  3423  006F9E  103E               	iorwf	___almod@divisor+3,w,c
  3424  006FA0  B4D8               	btfsc	status,2,c
  3425  006FA2  D024               	goto	l3775
  3426  006FA4  0E01               	movlw	1
  3427  006FA6  6E3F               	movwf	___almod@counter,c
  3428  006FA8  D006               	goto	l3765
  3429  006FAA                     l3763:
  3430  006FAA  90D8               	bcf	status,0,c
  3431  006FAC  363B               	rlcf	___almod@divisor,f,c
  3432  006FAE  363C               	rlcf	___almod@divisor+1,f,c
  3433  006FB0  363D               	rlcf	___almod@divisor+2,f,c
  3434  006FB2  363E               	rlcf	___almod@divisor+3,f,c
  3435  006FB4  2A3F               	incf	___almod@counter,f,c
  3436  006FB6                     l3765:
  3437  006FB6  AE3E               	btfss	___almod@divisor+3,7,c
  3438  006FB8  D7F8               	goto	l3763
  3439  006FBA                     u3300:
  3440  006FBA  503B               	movf	___almod@divisor,w,c
  3441  006FBC  5C37               	subwf	___almod@dividend,w,c
  3442  006FBE  503C               	movf	___almod@divisor+1,w,c
  3443  006FC0  5838               	subwfb	___almod@dividend+1,w,c
  3444  006FC2  503D               	movf	___almod@divisor+2,w,c
  3445  006FC4  5839               	subwfb	___almod@dividend+2,w,c
  3446  006FC6  503E               	movf	___almod@divisor+3,w,c
  3447  006FC8  583A               	subwfb	___almod@dividend+3,w,c
  3448  006FCA  A0D8               	btfss	status,0,c
  3449  006FCC  D008               	goto	l3771
  3450  006FCE  503B               	movf	___almod@divisor,w,c
  3451  006FD0  5E37               	subwf	___almod@dividend,f,c
  3452  006FD2  503C               	movf	___almod@divisor+1,w,c
  3453  006FD4  5A38               	subwfb	___almod@dividend+1,f,c
  3454  006FD6  503D               	movf	___almod@divisor+2,w,c
  3455  006FD8  5A39               	subwfb	___almod@dividend+2,f,c
  3456  006FDA  503E               	movf	___almod@divisor+3,w,c
  3457  006FDC  5A3A               	subwfb	___almod@dividend+3,f,c
  3458  006FDE                     l3771:
  3459  006FDE  90D8               	bcf	status,0,c
  3460  006FE0  323E               	rrcf	___almod@divisor+3,f,c
  3461  006FE2  323D               	rrcf	___almod@divisor+2,f,c
  3462  006FE4  323C               	rrcf	___almod@divisor+1,f,c
  3463  006FE6  323B               	rrcf	___almod@divisor,f,c
  3464  006FE8  2E3F               	decfsz	___almod@counter,f,c
  3465  006FEA  D7E7               	goto	u3300
  3466  006FEC                     l3775:
  3467  006FEC  5040               	movf	___almod@sign,w,c
  3468  006FEE  B4D8               	btfsc	status,2,c
  3469  006FF0  D008               	goto	l3779
  3470  006FF2  1E3A               	comf	___almod@dividend+3,f,c
  3471  006FF4  1E39               	comf	___almod@dividend+2,f,c
  3472  006FF6  1E38               	comf	___almod@dividend+1,f,c
  3473  006FF8  6C37               	negf	___almod@dividend,c
  3474  006FFA  0E00               	movlw	0
  3475  006FFC  2238               	addwfc	___almod@dividend+1,f,c
  3476  006FFE  2239               	addwfc	___almod@dividend+2,f,c
  3477  007000  223A               	addwfc	___almod@dividend+3,f,c
  3478  007002                     l3779:
  3479  007002  C037  F037         	movff	___almod@dividend,?___almod
  3480  007006  C038  F038         	movff	___almod@dividend+1,?___almod+1
  3481  00700A  C039  F039         	movff	___almod@dividend+2,?___almod+2
  3482  00700E  C03A  F03A         	movff	___almod@dividend+3,?___almod+3
  3483  007012  0012               	return		;funcret
  3484  007014                     __end_of___almod:
  3485                           	opt callstack 0
  3486                           
  3487 ;; *************** function ___aldiv *****************
  3488 ;; Defined at:
  3489 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  dividend        4   64[COMRAM] long 
  3492 ;;  divisor         4   68[COMRAM] long 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;  quotient        4   74[COMRAM] long 
  3495 ;;  sign            1   73[COMRAM] unsigned char 
  3496 ;;  counter         1   72[COMRAM] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  4   64[COMRAM] long 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3506 ;;      Params:         8       0       0       0       0       0       0       0       0
  3507 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3509 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3510 ;;Total ram usage:       14 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    2
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_descomposicion
  3517 ;;		_CalculoDeFrecuencia
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text15
  3522  0070CE                     __ptext15:
  3523                           	opt callstack 0
  3524  0070CE                     ___aldiv:
  3525                           	opt callstack 27
  3526                           
  3527                           ;incstack = 0
  3528  0070CE  0E00               	movlw	0
  3529  0070D0  6E4A               	movwf	___aldiv@sign,c
  3530  0070D2  AE48               	btfss	___aldiv@divisor+3,7,c
  3531  0070D4  D00A               	goto	l3711
  3532  0070D6  1E48               	comf	___aldiv@divisor+3,f,c
  3533  0070D8  1E47               	comf	___aldiv@divisor+2,f,c
  3534  0070DA  1E46               	comf	___aldiv@divisor+1,f,c
  3535  0070DC  6C45               	negf	___aldiv@divisor,c
  3536  0070DE  0E00               	movlw	0
  3537  0070E0  2246               	addwfc	___aldiv@divisor+1,f,c
  3538  0070E2  2247               	addwfc	___aldiv@divisor+2,f,c
  3539  0070E4  2248               	addwfc	___aldiv@divisor+3,f,c
  3540  0070E6  0E01               	movlw	1
  3541  0070E8  6E4A               	movwf	___aldiv@sign,c
  3542  0070EA                     l3711:
  3543  0070EA  AE44               	btfss	___aldiv@dividend+3,7,c
  3544  0070EC  D00A               	goto	l3717
  3545  0070EE  1E44               	comf	___aldiv@dividend+3,f,c
  3546  0070F0  1E43               	comf	___aldiv@dividend+2,f,c
  3547  0070F2  1E42               	comf	___aldiv@dividend+1,f,c
  3548  0070F4  6C41               	negf	___aldiv@dividend,c
  3549  0070F6  0E00               	movlw	0
  3550  0070F8  2242               	addwfc	___aldiv@dividend+1,f,c
  3551  0070FA  2243               	addwfc	___aldiv@dividend+2,f,c
  3552  0070FC  2244               	addwfc	___aldiv@dividend+3,f,c
  3553  0070FE  0E01               	movlw	1
  3554  007100  1A4A               	xorwf	___aldiv@sign,f,c
  3555  007102                     l3717:
  3556  007102  0E00               	movlw	0
  3557  007104  6E4B               	movwf	___aldiv@quotient,c
  3558  007106  0E00               	movlw	0
  3559  007108  6E4C               	movwf	___aldiv@quotient+1,c
  3560  00710A  0E00               	movlw	0
  3561  00710C  6E4D               	movwf	___aldiv@quotient+2,c
  3562  00710E  0E00               	movlw	0
  3563  007110  6E4E               	movwf	___aldiv@quotient+3,c
  3564  007112  5045               	movf	___aldiv@divisor,w,c
  3565  007114  1046               	iorwf	___aldiv@divisor+1,w,c
  3566  007116  1047               	iorwf	___aldiv@divisor+2,w,c
  3567  007118  1048               	iorwf	___aldiv@divisor+3,w,c
  3568  00711A  B4D8               	btfsc	status,2,c
  3569  00711C  D02A               	goto	l3739
  3570  00711E  0E01               	movlw	1
  3571  007120  6E49               	movwf	___aldiv@counter,c
  3572  007122  D006               	goto	l3725
  3573  007124                     l3723:
  3574  007124  90D8               	bcf	status,0,c
  3575  007126  3645               	rlcf	___aldiv@divisor,f,c
  3576  007128  3646               	rlcf	___aldiv@divisor+1,f,c
  3577  00712A  3647               	rlcf	___aldiv@divisor+2,f,c
  3578  00712C  3648               	rlcf	___aldiv@divisor+3,f,c
  3579  00712E  2A49               	incf	___aldiv@counter,f,c
  3580  007130                     l3725:
  3581  007130  AE48               	btfss	___aldiv@divisor+3,7,c
  3582  007132  D7F8               	goto	l3723
  3583  007134                     u3240:
  3584  007134  90D8               	bcf	status,0,c
  3585  007136  364B               	rlcf	___aldiv@quotient,f,c
  3586  007138  364C               	rlcf	___aldiv@quotient+1,f,c
  3587  00713A  364D               	rlcf	___aldiv@quotient+2,f,c
  3588  00713C  364E               	rlcf	___aldiv@quotient+3,f,c
  3589  00713E  5045               	movf	___aldiv@divisor,w,c
  3590  007140  5C41               	subwf	___aldiv@dividend,w,c
  3591  007142  5046               	movf	___aldiv@divisor+1,w,c
  3592  007144  5842               	subwfb	___aldiv@dividend+1,w,c
  3593  007146  5047               	movf	___aldiv@divisor+2,w,c
  3594  007148  5843               	subwfb	___aldiv@dividend+2,w,c
  3595  00714A  5048               	movf	___aldiv@divisor+3,w,c
  3596  00714C  5844               	subwfb	___aldiv@dividend+3,w,c
  3597  00714E  A0D8               	btfss	status,0,c
  3598  007150  D009               	goto	l3735
  3599  007152  5045               	movf	___aldiv@divisor,w,c
  3600  007154  5E41               	subwf	___aldiv@dividend,f,c
  3601  007156  5046               	movf	___aldiv@divisor+1,w,c
  3602  007158  5A42               	subwfb	___aldiv@dividend+1,f,c
  3603  00715A  5047               	movf	___aldiv@divisor+2,w,c
  3604  00715C  5A43               	subwfb	___aldiv@dividend+2,f,c
  3605  00715E  5048               	movf	___aldiv@divisor+3,w,c
  3606  007160  5A44               	subwfb	___aldiv@dividend+3,f,c
  3607  007162  804B               	bsf	___aldiv@quotient,0,c
  3608  007164                     l3735:
  3609  007164  90D8               	bcf	status,0,c
  3610  007166  3248               	rrcf	___aldiv@divisor+3,f,c
  3611  007168  3247               	rrcf	___aldiv@divisor+2,f,c
  3612  00716A  3246               	rrcf	___aldiv@divisor+1,f,c
  3613  00716C  3245               	rrcf	___aldiv@divisor,f,c
  3614  00716E  2E49               	decfsz	___aldiv@counter,f,c
  3615  007170  D7E1               	goto	u3240
  3616  007172                     l3739:
  3617  007172  504A               	movf	___aldiv@sign,w,c
  3618  007174  B4D8               	btfsc	status,2,c
  3619  007176  D008               	goto	l3743
  3620  007178  1E4E               	comf	___aldiv@quotient+3,f,c
  3621  00717A  1E4D               	comf	___aldiv@quotient+2,f,c
  3622  00717C  1E4C               	comf	___aldiv@quotient+1,f,c
  3623  00717E  6C4B               	negf	___aldiv@quotient,c
  3624  007180  0E00               	movlw	0
  3625  007182  224C               	addwfc	___aldiv@quotient+1,f,c
  3626  007184  224D               	addwfc	___aldiv@quotient+2,f,c
  3627  007186  224E               	addwfc	___aldiv@quotient+3,f,c
  3628  007188                     l3743:
  3629  007188  C04B  F041         	movff	___aldiv@quotient,?___aldiv
  3630  00718C  C04C  F042         	movff	___aldiv@quotient+1,?___aldiv+1
  3631  007190  C04D  F043         	movff	___aldiv@quotient+2,?___aldiv+2
  3632  007194  C04E  F044         	movff	___aldiv@quotient+3,?___aldiv+3
  3633  007198  0012               	return		;funcret
  3634  00719A                     __end_of___aldiv:
  3635                           	opt callstack 0
  3636                           
  3637 ;; *************** function _TIMER1_INI *****************
  3638 ;; Defined at:
  3639 ;;		line 26 in file "Tecnica1.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3653 ;;      Params:         0       0       0       0       0       0       0       0       0
  3654 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3655 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3656 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3657 ;;Total ram usage:        0 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    2
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_main
  3664 ;;		_demo_shield2_1_INI
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text16
  3669  006CB8                     __ptext16:
  3670                           	opt callstack 0
  3671  006CB8                     _TIMER1_INI:
  3672                           	opt callstack 28
  3673                           
  3674                           ;Tecnica1.c: 27: T1CONbits.TMR1ON = 0;
  3675                           
  3676                           ;incstack = 0
  3677  006CB8  90CD               	bcf	4045,0,c	;volatile
  3678                           
  3679                           ;Tecnica1.c: 28: T1CONbits.TMR1CS = 0;
  3680  006CBA  92CD               	bcf	4045,1,c	;volatile
  3681                           
  3682                           ;Tecnica1.c: 29: T1CONbits.nT1SYNC = 1;
  3683  006CBC  84CD               	bsf	4045,2,c	;volatile
  3684                           
  3685                           ;Tecnica1.c: 30: T1CONbits.T1OSCEN = 0;
  3686  006CBE  96CD               	bcf	4045,3,c	;volatile
  3687                           
  3688                           ;Tecnica1.c: 31: T1CONbits.T1CKPS = 0;
  3689  006CC0  0ECF               	movlw	-49
  3690  006CC2  16CD               	andwf	4045,f,c	;volatile
  3691                           
  3692                           ;Tecnica1.c: 32: T1CONbits.RD16 = 0;
  3693  006CC4  9ECD               	bcf	4045,7,c	;volatile
  3694                           
  3695                           ;Tecnica1.c: 33: T1CONbits.T1RUN = 0;
  3696  006CC6  9CCD               	bcf	4045,6,c	;volatile
  3697                           
  3698                           ;Tecnica1.c: 34: TMR1L = 0x1B;
  3699  006CC8  0E1B               	movlw	27
  3700  006CCA  6ECE               	movwf	4046,c	;volatile
  3701                           
  3702                           ;Tecnica1.c: 35: TMR1H = 0xD1;
  3703  006CCC  0ED1               	movlw	209
  3704  006CCE  6ECF               	movwf	4047,c	;volatile
  3705                           
  3706                           ;Tecnica1.c: 36: PIR1bits.TMR1IF = 0;
  3707  006CD0  909E               	bcf	3998,0,c	;volatile
  3708                           
  3709                           ;Tecnica1.c: 37: PIE1bits.TMR1IE = 1;
  3710  006CD2  809D               	bsf	3997,0,c	;volatile
  3711                           
  3712                           ;Tecnica1.c: 38: INTCONbits.PEIE = 1;
  3713  006CD4  8CF2               	bsf	4082,6,c	;volatile
  3714  006CD6  0012               	return		;funcret
  3715  006CD8                     __end_of_TIMER1_INI:
  3716                           	opt callstack 0
  3717                           
  3718 ;; *************** function _TIMER0_INI *****************
  3719 ;; Defined at:
  3720 ;;		line 13 in file "Tecnica1.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;		None
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg, status,2
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3734 ;;      Params:         0       0       0       0       0       0       0       0       0
  3735 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3737 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3738 ;;Total ram usage:        0 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    2
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_main
  3745 ;;		_demo_shield2_1_INI
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text17
  3750  006C7E                     __ptext17:
  3751                           	opt callstack 0
  3752  006C7E                     _TIMER0_INI:
  3753                           	opt callstack 28
  3754                           
  3755                           ;Tecnica1.c: 14: T0CONbits.TMR0ON = 0;
  3756                           
  3757                           ;incstack = 0
  3758  006C7E  9ED5               	bcf	4053,7,c	;volatile
  3759                           
  3760                           ;Tecnica1.c: 15: T0CONbits.T08BIT = 0;
  3761  006C80  9CD5               	bcf	4053,6,c	;volatile
  3762                           
  3763                           ;Tecnica1.c: 16: T0CONbits.T0CS = 0;
  3764  006C82  9AD5               	bcf	4053,5,c	;volatile
  3765                           
  3766                           ;Tecnica1.c: 17: T0CONbits.PSA = 0;
  3767  006C84  96D5               	bcf	4053,3,c	;volatile
  3768                           
  3769                           ;Tecnica1.c: 18: T0CONbits.T0PS0 = 1;
  3770  006C86  80D5               	bsf	4053,0,c	;volatile
  3771                           
  3772                           ;Tecnica1.c: 19: T0CONbits.T0PS1 = 1;
  3773  006C88  82D5               	bsf	4053,1,c	;volatile
  3774                           
  3775                           ;Tecnica1.c: 20: T0CONbits.T0PS2 = 1;
  3776  006C8A  84D5               	bsf	4053,2,c	;volatile
  3777                           
  3778                           ;Tecnica1.c: 21: TMR0L = 0xD2;
  3779  006C8C  0ED2               	movlw	210
  3780  006C8E  6ED6               	movwf	4054,c	;volatile
  3781                           
  3782                           ;Tecnica1.c: 22: TMR0H = 0x48;
  3783  006C90  0E48               	movlw	72
  3784  006C92  6ED7               	movwf	4055,c	;volatile
  3785                           
  3786                           ;Tecnica1.c: 23: INTCONbits.TMR0IE = 1;
  3787  006C94  8AF2               	bsf	4082,5,c	;volatile
  3788  006C96  0012               	return		;funcret
  3789  006C98                     __end_of_TIMER0_INI:
  3790                           	opt callstack 0
  3791                           
  3792 ;; *************** function _PicIni21 *****************
  3793 ;; Defined at:
  3794 ;;		line 3 in file "ConfShield2_1.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0
  3809 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3811 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3812 ;;Total ram usage:        0 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    2
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_main
  3819 ;;		_demo_shield2_1_INI
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text18
  3824  006CFC                     __ptext18:
  3825                           	opt callstack 0
  3826  006CFC                     _PicIni21:
  3827                           	opt callstack 28
  3828                           
  3829                           ;ConfShield2_1.c: 7: LATA = 0x00;
  3830                           
  3831                           ;incstack = 0
  3832  006CFC  0E00               	movlw	0
  3833  006CFE  6E89               	movwf	3977,c	;volatile
  3834                           
  3835                           ;ConfShield2_1.c: 8: LATB = 0x00;
  3836  006D00  0E00               	movlw	0
  3837  006D02  6E8A               	movwf	3978,c	;volatile
  3838                           
  3839                           ;ConfShield2_1.c: 9: LATC = 0x00;
  3840  006D04  0E00               	movlw	0
  3841  006D06  6E8B               	movwf	3979,c	;volatile
  3842                           
  3843                           ;ConfShield2_1.c: 10: LATD = 0x00;
  3844  006D08  0E00               	movlw	0
  3845  006D0A  6E8C               	movwf	3980,c	;volatile
  3846                           
  3847                           ;ConfShield2_1.c: 11: LATE = 0x00;
  3848  006D0C  0E00               	movlw	0
  3849  006D0E  6E8D               	movwf	3981,c	;volatile
  3850                           
  3851                           ;ConfShield2_1.c: 15: TRISA = 0xFF;
  3852  006D10  6892               	setf	3986,c	;volatile
  3853                           
  3854                           ;ConfShield2_1.c: 17: TRISB = 0xFF;
  3855  006D12  6893               	setf	3987,c	;volatile
  3856                           
  3857                           ;ConfShield2_1.c: 18: TRISC = 0xFF;
  3858  006D14  6894               	setf	3988,c	;volatile
  3859                           
  3860                           ;ConfShield2_1.c: 22: TRISD = 0x0C;
  3861  006D16  0E0C               	movlw	12
  3862  006D18  6E95               	movwf	3989,c	;volatile
  3863                           
  3864                           ;ConfShield2_1.c: 24: TRISE = 0x00;
  3865  006D1A  0E00               	movlw	0
  3866  006D1C  6E96               	movwf	3990,c	;volatile
  3867                           
  3868                           ;ConfShield2_1.c: 27: CMCON = 0x07;
  3869  006D1E  0E07               	movlw	7
  3870  006D20  6EB4               	movwf	4020,c	;volatile
  3871                           
  3872                           ;ConfShield2_1.c: 28: ADCON1 = 0x0F;
  3873  006D22  0E0F               	movlw	15
  3874  006D24  6EC1               	movwf	4033,c	;volatile
  3875  006D26  0012               	return		;funcret
  3876  006D28                     __end_of_PicIni21:
  3877                           	opt callstack 0
  3878                           
  3879 ;; *************** function _LCD_init *****************
  3880 ;; Defined at:
  3881 ;;		line 79 in file "lcd.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;		None
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  i               4   22[COMRAM] unsigned long 
  3886 ;;  i               4   18[COMRAM] unsigned long 
  3887 ;;  i               4   14[COMRAM] unsigned long 
  3888 ;;  i               4   10[COMRAM] unsigned long 
  3889 ;;  i               4    6[COMRAM] unsigned long 
  3890 ;;  i               4    2[COMRAM] unsigned long 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      void 
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3900 ;;      Params:         0       0       0       0       0       0       0       0       0
  3901 ;;      Locals:        24       0       0       0       0       0       0       0       0
  3902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3903 ;;      Totals:        24       0       0       0       0       0       0       0       0
  3904 ;;Total ram usage:       24 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    4
  3907 ;; This function calls:
  3908 ;;		_write_CMD
  3909 ;; This function is called by:
  3910 ;;		_main
  3911 ;;		_demo_shield2_1_INI
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text19
  3916  0072DA                     __ptext19:
  3917                           	opt callstack 0
  3918  0072DA                     _LCD_init:
  3919                           	opt callstack 26
  3920                           
  3921                           ;lcd.c: 80: TRISD &= 0x0F;
  3922                           
  3923                           ;incstack = 0
  3924  0072DA  0E0F               	movlw	15
  3925  0072DC  1695               	andwf	3989,f,c	;volatile
  3926                           
  3927                           ;lcd.c: 81: TRISEbits.RE1 = 0;
  3928  0072DE  9296               	bcf	3990,1,c	;volatile
  3929                           
  3930                           ;lcd.c: 82: TRISEbits.RE0 = 0;
  3931  0072E0  9096               	bcf	3990,0,c	;volatile
  3932                           
  3933                           ;lcd.c: 83: TRISEbits.RE2 = 0;
  3934  0072E2  9496               	bcf	3990,2,c	;volatile
  3935                           
  3936                           ;lcd.c: 86: LCD_tout = 30;
  3937  0072E4  0E00               	movlw	0
  3938  0072E6  0100               	movlb	0	; () banked
  3939  0072E8  6FB1               	movwf	(_LCD_tout+1)& (0+255),b
  3940  0072EA  0E1E               	movlw	30
  3941  0072EC  6FB0               	movwf	_LCD_tout& (0+255),b
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;lcd.c: 88: for (unsigned long i = 0; i < 100000; i++);
  3945  0072EE  0E00               	movlw	0
  3946  0072F0  6E03               	movwf	LCD_init@i,c
  3947  0072F2  0E00               	movlw	0
  3948  0072F4  6E04               	movwf	LCD_init@i+1,c
  3949  0072F6  0E00               	movlw	0
  3950  0072F8  6E05               	movwf	LCD_init@i+2,c
  3951  0072FA  0E00               	movlw	0
  3952  0072FC  6E06               	movwf	LCD_init@i+3,c
  3953  0072FE                     l3999:
  3954  0072FE  0E01               	movlw	1
  3955  007300  2603               	addwf	LCD_init@i,f,c
  3956  007302  0E00               	movlw	0
  3957  007304  2204               	addwfc	LCD_init@i+1,f,c
  3958  007306  2205               	addwfc	LCD_init@i+2,f,c
  3959  007308  2206               	addwfc	LCD_init@i+3,f,c
  3960  00730A  5006               	movf	LCD_init@i+3,w,c
  3961  00730C  E108               	bnz	u3720
  3962  00730E  0EA0               	movlw	160
  3963  007310  5C03               	subwf	LCD_init@i,w,c
  3964  007312  0E86               	movlw	134
  3965  007314  5804               	subwfb	LCD_init@i+1,w,c
  3966  007316  0E01               	movlw	1
  3967  007318  5805               	subwfb	LCD_init@i+2,w,c
  3968  00731A  A0D8               	btfss	status,0,c
  3969  00731C  D7F0               	goto	l3999
  3970  00731E                     u3720:
  3971                           
  3972                           ;lcd.c: 90: write_CMD(0x02);
  3973  00731E  0E02               	movlw	2
  3974  007320  EC24  F036         	call	_write_CMD
  3975                           
  3976                           ;lcd.c: 91: LCD_tout = 1;
  3977  007324  0E00               	movlw	0
  3978  007326  0100               	movlb	0	; () banked
  3979  007328  6FB1               	movwf	(_LCD_tout+1)& (0+255),b
  3980  00732A  0E01               	movlw	1
  3981  00732C  6FB0               	movwf	_LCD_tout& (0+255),b
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;lcd.c: 93: for (unsigned long i = 0; i < 100000; i++);
  3985  00732E  0E00               	movlw	0
  3986  007330  6E07               	movwf	LCD_init@i_395,c
  3987  007332  0E00               	movlw	0
  3988  007334  6E08               	movwf	LCD_init@i_395+1,c
  3989  007336  0E00               	movlw	0
  3990  007338  6E09               	movwf	LCD_init@i_395+2,c
  3991  00733A  0E00               	movlw	0
  3992  00733C  6E0A               	movwf	LCD_init@i_395+3,c
  3993  00733E                     l4011:
  3994  00733E  0E01               	movlw	1
  3995  007340  2607               	addwf	LCD_init@i_395,f,c
  3996  007342  0E00               	movlw	0
  3997  007344  2208               	addwfc	LCD_init@i_395+1,f,c
  3998  007346  2209               	addwfc	LCD_init@i_395+2,f,c
  3999  007348  220A               	addwfc	LCD_init@i_395+3,f,c
  4000  00734A  500A               	movf	LCD_init@i_395+3,w,c
  4001  00734C  E108               	bnz	u3730
  4002  00734E  0EA0               	movlw	160
  4003  007350  5C07               	subwf	LCD_init@i_395,w,c
  4004  007352  0E86               	movlw	134
  4005  007354  5808               	subwfb	LCD_init@i_395+1,w,c
  4006  007356  0E01               	movlw	1
  4007  007358  5809               	subwfb	LCD_init@i_395+2,w,c
  4008  00735A  A0D8               	btfss	status,0,c
  4009  00735C  D7F0               	goto	l4011
  4010  00735E                     u3730:
  4011                           
  4012                           ;lcd.c: 95: write_CMD(0x28);
  4013  00735E  0E28               	movlw	40
  4014  007360  EC24  F036         	call	_write_CMD
  4015                           
  4016                           ;lcd.c: 96: LCD_tout = 1;
  4017  007364  0E00               	movlw	0
  4018  007366  0100               	movlb	0	; () banked
  4019  007368  6FB1               	movwf	(_LCD_tout+1)& (0+255),b
  4020  00736A  0E01               	movlw	1
  4021  00736C  6FB0               	movwf	_LCD_tout& (0+255),b
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;lcd.c: 98: for (unsigned long i = 0; i < 100000; i++);
  4025  00736E  0E00               	movlw	0
  4026  007370  6E0B               	movwf	LCD_init@i_396,c
  4027  007372  0E00               	movlw	0
  4028  007374  6E0C               	movwf	LCD_init@i_396+1,c
  4029  007376  0E00               	movlw	0
  4030  007378  6E0D               	movwf	LCD_init@i_396+2,c
  4031  00737A  0E00               	movlw	0
  4032  00737C  6E0E               	movwf	LCD_init@i_396+3,c
  4033  00737E                     l4023:
  4034  00737E  0E01               	movlw	1
  4035  007380  260B               	addwf	LCD_init@i_396,f,c
  4036  007382  0E00               	movlw	0
  4037  007384  220C               	addwfc	LCD_init@i_396+1,f,c
  4038  007386  220D               	addwfc	LCD_init@i_396+2,f,c
  4039  007388  220E               	addwfc	LCD_init@i_396+3,f,c
  4040  00738A  500E               	movf	LCD_init@i_396+3,w,c
  4041  00738C  E108               	bnz	u3740
  4042  00738E  0EA0               	movlw	160
  4043  007390  5C0B               	subwf	LCD_init@i_396,w,c
  4044  007392  0E86               	movlw	134
  4045  007394  580C               	subwfb	LCD_init@i_396+1,w,c
  4046  007396  0E01               	movlw	1
  4047  007398  580D               	subwfb	LCD_init@i_396+2,w,c
  4048  00739A  A0D8               	btfss	status,0,c
  4049  00739C  D7F0               	goto	l4023
  4050  00739E                     u3740:
  4051                           
  4052                           ;lcd.c: 100: write_CMD(0x0C);
  4053  00739E  0E0C               	movlw	12
  4054  0073A0  EC24  F036         	call	_write_CMD
  4055                           
  4056                           ;lcd.c: 101: LCD_tout = 1;
  4057  0073A4  0E00               	movlw	0
  4058  0073A6  0100               	movlb	0	; () banked
  4059  0073A8  6FB1               	movwf	(_LCD_tout+1)& (0+255),b
  4060  0073AA  0E01               	movlw	1
  4061  0073AC  6FB0               	movwf	_LCD_tout& (0+255),b
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;lcd.c: 103: for (unsigned long i = 0; i < 100000; i++);
  4065  0073AE  0E00               	movlw	0
  4066  0073B0  6E0F               	movwf	LCD_init@i_397,c
  4067  0073B2  0E00               	movlw	0
  4068  0073B4  6E10               	movwf	LCD_init@i_397+1,c
  4069  0073B6  0E00               	movlw	0
  4070  0073B8  6E11               	movwf	LCD_init@i_397+2,c
  4071  0073BA  0E00               	movlw	0
  4072  0073BC  6E12               	movwf	LCD_init@i_397+3,c
  4073  0073BE                     l4035:
  4074  0073BE  0E01               	movlw	1
  4075  0073C0  260F               	addwf	LCD_init@i_397,f,c
  4076  0073C2  0E00               	movlw	0
  4077  0073C4  2210               	addwfc	LCD_init@i_397+1,f,c
  4078  0073C6  2211               	addwfc	LCD_init@i_397+2,f,c
  4079  0073C8  2212               	addwfc	LCD_init@i_397+3,f,c
  4080  0073CA  5012               	movf	LCD_init@i_397+3,w,c
  4081  0073CC  E108               	bnz	u3750
  4082  0073CE  0EA0               	movlw	160
  4083  0073D0  5C0F               	subwf	LCD_init@i_397,w,c
  4084  0073D2  0E86               	movlw	134
  4085  0073D4  5810               	subwfb	LCD_init@i_397+1,w,c
  4086  0073D6  0E01               	movlw	1
  4087  0073D8  5811               	subwfb	LCD_init@i_397+2,w,c
  4088  0073DA  A0D8               	btfss	status,0,c
  4089  0073DC  D7F0               	goto	l4035
  4090  0073DE                     u3750:
  4091                           
  4092                           ;lcd.c: 105: write_CMD(0x01);
  4093  0073DE  0E01               	movlw	1
  4094  0073E0  EC24  F036         	call	_write_CMD
  4095                           
  4096                           ;lcd.c: 106: LCD_tout = 1;
  4097  0073E4  0E00               	movlw	0
  4098  0073E6  0100               	movlb	0	; () banked
  4099  0073E8  6FB1               	movwf	(_LCD_tout+1)& (0+255),b
  4100  0073EA  0E01               	movlw	1
  4101  0073EC  6FB0               	movwf	_LCD_tout& (0+255),b
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;lcd.c: 108: for (unsigned long i = 0; i < 100000; i++);
  4105  0073EE  0E00               	movlw	0
  4106  0073F0  6E13               	movwf	LCD_init@i_398,c
  4107  0073F2  0E00               	movlw	0
  4108  0073F4  6E14               	movwf	LCD_init@i_398+1,c
  4109  0073F6  0E00               	movlw	0
  4110  0073F8  6E15               	movwf	LCD_init@i_398+2,c
  4111  0073FA  0E00               	movlw	0
  4112  0073FC  6E16               	movwf	LCD_init@i_398+3,c
  4113  0073FE                     l4047:
  4114  0073FE  0E01               	movlw	1
  4115  007400  2613               	addwf	LCD_init@i_398,f,c
  4116  007402  0E00               	movlw	0
  4117  007404  2214               	addwfc	LCD_init@i_398+1,f,c
  4118  007406  2215               	addwfc	LCD_init@i_398+2,f,c
  4119  007408  2216               	addwfc	LCD_init@i_398+3,f,c
  4120  00740A  5016               	movf	LCD_init@i_398+3,w,c
  4121  00740C  E108               	bnz	u3760
  4122  00740E  0EA0               	movlw	160
  4123  007410  5C13               	subwf	LCD_init@i_398,w,c
  4124  007412  0E86               	movlw	134
  4125  007414  5814               	subwfb	LCD_init@i_398+1,w,c
  4126  007416  0E01               	movlw	1
  4127  007418  5815               	subwfb	LCD_init@i_398+2,w,c
  4128  00741A  A0D8               	btfss	status,0,c
  4129  00741C  D7F0               	goto	l4047
  4130  00741E                     u3760:
  4131                           
  4132                           ;lcd.c: 110: write_CMD(0x06);
  4133  00741E  0E06               	movlw	6
  4134  007420  EC24  F036         	call	_write_CMD
  4135                           
  4136                           ;lcd.c: 111: LCD_tout = 1;
  4137  007424  0E00               	movlw	0
  4138  007426  0100               	movlb	0	; () banked
  4139  007428  6FB1               	movwf	(_LCD_tout+1)& (0+255),b
  4140  00742A  0E01               	movlw	1
  4141  00742C  6FB0               	movwf	_LCD_tout& (0+255),b
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;lcd.c: 113: for (unsigned long i = 0; i < 100000; i++);
  4145  00742E  0E00               	movlw	0
  4146  007430  6E17               	movwf	LCD_init@i_399,c
  4147  007432  0E00               	movlw	0
  4148  007434  6E18               	movwf	LCD_init@i_399+1,c
  4149  007436  0E00               	movlw	0
  4150  007438  6E19               	movwf	LCD_init@i_399+2,c
  4151  00743A  0E00               	movlw	0
  4152  00743C  6E1A               	movwf	LCD_init@i_399+3,c
  4153  00743E                     l4059:
  4154  00743E  0E01               	movlw	1
  4155  007440  2617               	addwf	LCD_init@i_399,f,c
  4156  007442  0E00               	movlw	0
  4157  007444  2218               	addwfc	LCD_init@i_399+1,f,c
  4158  007446  2219               	addwfc	LCD_init@i_399+2,f,c
  4159  007448  221A               	addwfc	LCD_init@i_399+3,f,c
  4160  00744A  501A               	movf	LCD_init@i_399+3,w,c
  4161  00744C  E109               	bnz	u3770
  4162  00744E  0EA0               	movlw	160
  4163  007450  5C17               	subwf	LCD_init@i_399,w,c
  4164  007452  0E86               	movlw	134
  4165  007454  5818               	subwfb	LCD_init@i_399+1,w,c
  4166  007456  0E01               	movlw	1
  4167  007458  5819               	subwfb	LCD_init@i_399+2,w,c
  4168  00745A  B0D8               	btfsc	status,0,c
  4169  00745C  0012               	return	
  4170  00745E  D7EF               	goto	l4059
  4171  007460                     u3770:
  4172  007460  0012               	return		;funcret
  4173  007462                     __end_of_LCD_init:
  4174                           	opt callstack 0
  4175                           
  4176 ;; *************** function _write_CMD *****************
  4177 ;; Defined at:
  4178 ;;		line 130 in file "lcd.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  dato            1    wreg     unsigned char 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  dato            1    1[COMRAM] unsigned char 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4192 ;;      Params:         0       0       0       0       0       0       0       0       0
  4193 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4195 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4196 ;;Total ram usage:        1 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    3
  4199 ;; This function calls:
  4200 ;;		_write_LCD
  4201 ;; This function is called by:
  4202 ;;		_set_CURSOR
  4203 ;;		_LCD_init
  4204 ;;		_clear_LCD
  4205 ;;		_ret_HOME
  4206 ;;		_DesplazarIzquierda
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text20
  4211  006C48                     __ptext20:
  4212                           	opt callstack 0
  4213  006C48                     _write_CMD:
  4214                           	opt callstack 25
  4215                           
  4216                           ;incstack = 0
  4217                           ;write_CMD@dato stored from wreg
  4218  006C48  6E02               	movwf	write_CMD@dato,c
  4219                           
  4220                           ;lcd.c: 132: PORTEbits.RE1 = 0x0;
  4221  006C4A  9284               	bcf	3972,1,c	;volatile
  4222                           
  4223                           ;lcd.c: 133: PORTEbits.RE0 = 0x0;
  4224  006C4C  9084               	bcf	3972,0,c	;volatile
  4225                           
  4226                           ;lcd.c: 134: write_LCD(dato);
  4227  006C4E  5002               	movf	write_CMD@dato,w,c
  4228  006C50  EC4C  F036         	call	_write_LCD
  4229  006C54  0012               	return		;funcret
  4230  006C56                     __end_of_write_CMD:
  4231                           	opt callstack 0
  4232                           
  4233 ;; *************** function _write_LCD *****************
  4234 ;; Defined at:
  4235 ;;		line 140 in file "lcd.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  dato            1    wreg     unsigned char 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  dato            1    0[COMRAM] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      void 
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4249 ;;      Params:         0       0       0       0       0       0       0       0       0
  4250 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4251 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4252 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4253 ;;Total ram usage:        1 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:    2
  4256 ;; This function calls:
  4257 ;;		Nothing
  4258 ;; This function is called by:
  4259 ;;		_write_DATA
  4260 ;;		_write_CMD
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text21
  4265  006C98                     __ptext21:
  4266                           	opt callstack 0
  4267  006C98                     _write_LCD:
  4268                           	opt callstack 25
  4269                           
  4270                           ;incstack = 0
  4271                           ;write_LCD@dato stored from wreg
  4272  006C98  6E01               	movwf	write_LCD@dato,c
  4273                           
  4274                           ;lcd.c: 142: LATD &= 0x0F;
  4275  006C9A  0E0F               	movlw	15
  4276  006C9C  168C               	andwf	3980,f,c	;volatile
  4277                           
  4278                           ;lcd.c: 143: PORTEbits.RE2 = 0x1;
  4279  006C9E  8484               	bsf	3972,2,c	;volatile
  4280                           
  4281                           ;lcd.c: 146: LATD |= (dato & 0xF0);
  4282  006CA0  5001               	movf	write_LCD@dato,w,c
  4283  006CA2  0BF0               	andlw	240
  4284  006CA4  128C               	iorwf	3980,f,c	;volatile
  4285                           
  4286                           ;lcd.c: 148: PORTEbits.RE2 = 0x0;
  4287  006CA6  9484               	bcf	3972,2,c	;volatile
  4288                           
  4289                           ;lcd.c: 150: LATD &= 0x0F;
  4290  006CA8  0E0F               	movlw	15
  4291  006CAA  168C               	andwf	3980,f,c	;volatile
  4292                           
  4293                           ;lcd.c: 151: PORTEbits.RE2 = 0x1;
  4294  006CAC  8484               	bsf	3972,2,c	;volatile
  4295                           
  4296                           ;lcd.c: 154: LATD |= (dato << 4);
  4297  006CAE  3801               	swapf	write_LCD@dato,w,c
  4298  006CB0  0BF0               	andlw	240
  4299  006CB2  128C               	iorwf	3980,f,c	;volatile
  4300                           
  4301                           ;lcd.c: 156: PORTEbits.RE2 = 0x0;
  4302  006CB4  9484               	bcf	3972,2,c	;volatile
  4303  006CB6  0012               	return		;funcret
  4304  006CB8                     __end_of_write_LCD:
  4305                           	opt callstack 0
  4306                           
  4307 ;; *************** function _myISR *****************
  4308 ;; Defined at:
  4309 ;;		line 59 in file "main.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4323 ;;      Params:         0       0       0       0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4326 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4327 ;;Total ram usage:        0 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    1
  4330 ;; This function calls:
  4331 ;;		_marca_tecla
  4332 ;;		_tic_LCD
  4333 ;;		_tic_teclado
  4334 ;; This function is called by:
  4335 ;;		Interrupt level 2
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	intcode
  4340  000008                     __pintcode:
  4341                           	opt callstack 0
  4342  000008                     _myISR:
  4343                           	opt callstack 25
  4344                           
  4345                           ;incstack = 0
  4346  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4347  00000A  ED94  F036         	call	int_func,f	;refresh shadow registers
  4348                           
  4349                           	psect	intcode_body
  4350  006D28                     __pintcode_body:
  4351                           	opt callstack 25
  4352  006D28                     int_func:
  4353                           	opt callstack 25
  4354  006D28  0006               	pop		; remove dummy address from shadow register refresh
  4355                           
  4356                           ;main.c: 62: if (TMR0IF == 1) {
  4357  006D2A  A4F2               	btfss	4082,2,c	;volatile
  4358  006D2C  D005               	goto	i2l4217
  4359                           
  4360                           ;main.c: 63: TMR0IF = 0;
  4361  006D2E  94F2               	bcf	4082,2,c	;volatile
  4362                           
  4363                           ;main.c: 64: TMR0L = 0xD2;
  4364  006D30  0ED2               	movlw	210
  4365  006D32  6ED6               	movwf	4054,c	;volatile
  4366                           
  4367                           ;main.c: 65: TMR0H = 0x48;
  4368  006D34  0E48               	movlw	72
  4369  006D36  6ED7               	movwf	4055,c	;volatile
  4370  006D38                     i2l4217:
  4371                           
  4372                           ;main.c: 72: };main.c: 74: if (TMR1IF == 1) {
  4373  006D38  A09E               	btfss	3998,0,c	;volatile
  4374  006D3A  D00D               	goto	i2l92
  4375                           
  4376                           ;main.c: 75: TMR1IF = 0;
  4377  006D3C  909E               	bcf	3998,0,c	;volatile
  4378                           
  4379                           ;main.c: 76: TMR1L = 0x1B;
  4380  006D3E  0E1B               	movlw	27
  4381  006D40  6ECE               	movwf	4046,c	;volatile
  4382                           
  4383                           ;main.c: 77: TMR1H = 0xD1;
  4384  006D42  0ED1               	movlw	209
  4385  006D44  6ECF               	movwf	4047,c	;volatile
  4386                           
  4387                           ;main.c: 78: tic_teclado();
  4388  006D46  EC12  F036         	call	_tic_teclado	;wreg free
  4389                           
  4390                           ;main.c: 79: tic_LCD();
  4391  006D4A  EC2B  F036         	call	_tic_LCD	;wreg free
  4392                           
  4393                           ;main.c: 80: if (RBIF == 1) {
  4394  006D4E  B0F2               	btfsc	4082,0,c	;volatile
  4395                           
  4396                           ;main.c: 81: marca_tecla();
  4397  006D50  EC1D  F036         	call	_marca_tecla	;wreg free
  4398                           
  4399                           ;main.c: 82: };main.c: 83: RBIF = 0;
  4400  006D54  90F2               	bcf	4082,0,c	;volatile
  4401  006D56                     i2l92:
  4402  006D56  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4403  006D58  0011               	retfie		f
  4404  006D5A                     __end_of_myISR:
  4405                           	opt callstack 0
  4406                           
  4407 ;; *************** function _tic_teclado *****************
  4408 ;; Defined at:
  4409 ;;		line 214 in file "teclado.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg, status,2, status,0
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4423 ;;      Params:         0       0       0       0       0       0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4426 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_myISR
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           	psect	text23
  4437  006C24                     __ptext23:
  4438                           	opt callstack 0
  4439  006C24                     _tic_teclado:
  4440                           	opt callstack 25
  4441                           
  4442                           ;teclado.c: 216: if (delay_kb) delay_kb--;
  4443                           
  4444                           ;incstack = 0
  4445  006C24  505B               	movf	_delay_kb,w,c	;volatile
  4446  006C26  B4D8               	btfsc	status,2,c
  4447  006C28  0012               	return	
  4448  006C2A  065B               	decf	_delay_kb,f,c	;volatile
  4449  006C2C  0012               	return		;funcret
  4450  006C2E                     __end_of_tic_teclado:
  4451                           	opt callstack 0
  4452                           
  4453 ;; *************** function _tic_LCD *****************
  4454 ;; Defined at:
  4455 ;;		line 182 in file "lcd.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4469 ;;      Params:         0       0       0       0       0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4472 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4473 ;;Total ram usage:        0 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_myISR
  4479 ;;		_tic_demo_shield2_1
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text24
  4484  006C56                     __ptext24:
  4485                           	opt callstack 0
  4486  006C56                     _tic_LCD:
  4487                           	opt callstack 25
  4488                           
  4489                           ;lcd.c: 183: if (LCD_tout) LCD_tout--;
  4490                           
  4491                           ;incstack = 0
  4492  006C56  0100               	movlb	0	; () banked
  4493  006C58  51B0               	movf	_LCD_tout& (0+255),w,b
  4494  006C5A  11B1               	iorwf	(_LCD_tout+1)& (0+255),w,b
  4495  006C5C  B4D8               	btfsc	status,2,c
  4496  006C5E  0012               	return	
  4497                           
  4498                           ; BSR set to: 0
  4499  006C60  07B0               	decf	_LCD_tout& (0+255),f,b
  4500  006C62  A0D8               	btfss	status,0,c
  4501  006C64  07B1               	decf	(_LCD_tout+1)& (0+255),f,b
  4502                           
  4503                           ; BSR set to: 0
  4504  006C66  0012               	return		;funcret
  4505  006C68                     __end_of_tic_LCD:
  4506                           	opt callstack 0
  4507                           
  4508 ;; *************** function _marca_tecla *****************
  4509 ;; Defined at:
  4510 ;;		line 207 in file "teclado.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4524 ;;      Params:         0       0       0       0       0       0       0       0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4527 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4528 ;;Total ram usage:        0 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; This function calls:
  4531 ;;		Nothing
  4532 ;; This function is called by:
  4533 ;;		_myISR
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text25
  4538  006C3A                     __ptext25:
  4539                           	opt callstack 0
  4540  006C3A                     _marca_tecla:
  4541                           	opt callstack 25
  4542                           
  4543                           ;teclado.c: 208: (void) PORTB;
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;incstack = 0
  4547  006C3A  5081               	movf	3969,w,c	;volatile
  4548  006C3C  F000               	nop		;# 
  4549                           
  4550                           ;teclado.c: 210: flag_kb = 1;
  4551  006C3E  0E01               	movlw	1
  4552  006C40  0100               	movlb	0	; () banked
  4553  006C42  6F8B               	movwf	_flag_kb& (0+255),b	;volatile
  4554  006C44  F000               	nop		;# 
  4555  006C46  0012               	return		;funcret
  4556  006C48                     __end_of_marca_tecla:
  4557                           	opt callstack 0
  4558                           
  4559                           	psect	rparam
  4560  0000                     
  4561                           	psect	temp
  4562  00005F                     btemp:
  4563                           	opt callstack 0
  4564  00005F                     	ds	1
  4565  0000                     int$flags	set	btemp
  4566  0000                     wtemp8	set	btemp+1
  4567  0000                     ttemp5	set	btemp+1
  4568  0000                     ttemp6	set	btemp+4
  4569  0000                     ttemp7	set	btemp+8
  4570                           tosu	equ	0xFFF
  4571                           tosh	equ	0xFFE
  4572                           tosl	equ	0xFFD
  4573                           stkptr	equ	0xFFC
  4574                           pclatu	equ	0xFFB
  4575                           pclath	equ	0xFFA
  4576                           pcl	equ	0xFF9
  4577                           tblptru	equ	0xFF8
  4578                           tblptrh	equ	0xFF7
  4579                           tblptrl	equ	0xFF6
  4580                           tablat	equ	0xFF5
  4581                           prodh	equ	0xFF4
  4582                           prodl	equ	0xFF3
  4583                           indf0	equ	0xFEF
  4584                           postinc0	equ	0xFEE
  4585                           postdec0	equ	0xFED
  4586                           preinc0	equ	0xFEC
  4587                           plusw0	equ	0xFEB
  4588                           fsr0h	equ	0xFEA
  4589                           fsr0l	equ	0xFE9
  4590                           wreg	equ	0xFE8
  4591                           indf1	equ	0xFE7
  4592                           postinc1	equ	0xFE6
  4593                           postdec1	equ	0xFE5
  4594                           preinc1	equ	0xFE4
  4595                           plusw1	equ	0xFE3
  4596                           fsr1h	equ	0xFE2
  4597                           fsr1l	equ	0xFE1
  4598                           bsr	equ	0xFE0
  4599                           indf2	equ	0xFDF
  4600                           postinc2	equ	0xFDE
  4601                           postdec2	equ	0xFDD
  4602                           preinc2	equ	0xFDC
  4603                           plusw2	equ	0xFDB
  4604                           fsr2h	equ	0xFDA
  4605                           fsr2l	equ	0xFD9
  4606                           status	equ	0xFD8


Data Sizes:
    Strings     77
    Constant    12
    Data        14
    BSS         70
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160      0      82
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    msg2LCD@datos	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_10(CODE[28]), STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[13]), STR_2(CODE[3]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_descomposicion
    _descomposicion->___aldiv
    _set_CURSOR->_write_CMD
    _readADC->___fldiv
    ___xxtofl->_obtener_ADC10
    ___fltol->___fladd
    ___fldiv->___flmul
    _msg2LCD->_write_DATA
    _char2LCD->_write_DATA
    _write_DATA->_write_LCD
    ___almod->_readADC
    ___aldiv->___almod
    _LCD_init->_write_CMD
    _write_CMD->_write_LCD

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12264
                           _LCD_init
                           _PicIni21
                         _TIMER0_INI
                         _TIMER1_INI
                     _descomposicion
                       _tecladoIni13
 ---------------------------------------------------------------------------------
 (1) _tecladoIni13                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _descomposicion                                      12    12      0   11922
                                             78 COMRAM    12    12      0
                            ___aldiv
                            ___almod
                            ___fladd
                            ___fltol
                           ___xxtofl
                           _char2LCD
                            _msg2LCD
                            _readADC
                         _set_CURSOR
 ---------------------------------------------------------------------------------
 (2) _set_CURSOR                                           5     5      0     135
                                              2 COMRAM     5     5      0
                          _write_CMD
 ---------------------------------------------------------------------------------
 (2) _readADC                                              4     0      4    4373
                                             50 COMRAM     4     0      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                      _obtener_ADC10
 ---------------------------------------------------------------------------------
 (3) _obtener_ADC10                                        6     4      2      71
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              6 COMRAM    14    10      4
                      _obtener_ADC10 (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     533
                                             16 COMRAM    10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1399
                                             25 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _msg2LCD                                              6     4      2     765
                                              2 COMRAM     6     4      2
                         _write_DATA
 ---------------------------------------------------------------------------------
 (2) _char2LCD                                             5     5      0     134
                                              2 COMRAM     5     5      0
                         _write_DATA
 ---------------------------------------------------------------------------------
 (3) _write_DATA                                           1     1      0      66
                                              1 COMRAM     1     1      0
                          _write_LCD
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2692
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8    1208
                                             54 COMRAM    10     2      8
                           ___xxtofl (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1364
                                             64 COMRAM    14     6      8
                            ___almod (ARG)
                           ___xxtofl (ARG)
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (1) _TIMER1_INI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TIMER0_INI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PicIni21                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                            24    24      0     342
                                              2 COMRAM    24    24      0
                          _write_CMD
 ---------------------------------------------------------------------------------
 (3) _write_CMD                                            1     1      0      66
                                              1 COMRAM     1     1      0
                          _write_LCD
 ---------------------------------------------------------------------------------
 (4) _write_LCD                                            1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myISR                                                0     0      0       0
                        _marca_tecla
                            _tic_LCD
                        _tic_teclado
 ---------------------------------------------------------------------------------
 (6) _tic_teclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _tic_LCD                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _marca_tecla                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _write_CMD
       _write_LCD
   _PicIni21
   _TIMER0_INI
   _TIMER1_INI
   _descomposicion
     ___aldiv
       ___almod (ARG)
         ___xxtofl (ARG)
           _obtener_ADC10 (ARG)
         _readADC (ARG)
           ___fldiv
             ___flmul (ARG)
           ___flmul
           ___fltol
             ___fladd (ARG)
           ___xxtofl
             _obtener_ADC10 (ARG)
           _obtener_ADC10
       ___xxtofl (ARG)
         _obtener_ADC10 (ARG)
       _readADC (ARG)
         ___fldiv
           ___flmul (ARG)
         ___flmul
         ___fltol
           ___fladd (ARG)
         ___xxtofl
           _obtener_ADC10 (ARG)
         _obtener_ADC10
     ___almod
       ___xxtofl (ARG)
         _obtener_ADC10 (ARG)
       _readADC (ARG)
         ___fldiv
           ___flmul (ARG)
         ___flmul
         ___fltol
           ___fladd (ARG)
         ___xxtofl
           _obtener_ADC10 (ARG)
         _obtener_ADC10
     ___fladd
     ___fltol
       ___fladd (ARG)
     ___xxtofl
       _obtener_ADC10 (ARG)
     _char2LCD
       _write_DATA
         _write_LCD
     _msg2LCD
       _write_DATA
         _write_LCD
     _readADC
       ___fldiv
         ___flmul (ARG)
       ___flmul
       ___fltol
         ___fladd (ARG)
       ___xxtofl
         _obtener_ADC10 (ARG)
       _obtener_ADC10
     _set_CURSOR
       _write_CMD
         _write_LCD
   _tecladoIni13

 _myISR (ROOT)
   _marca_tecla
   _tic_LCD
   _tic_teclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      52       5       51.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B0      20        0.0%
DATA                 0      0      B0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Sep 16 12:41:38 2021

                   ___fldiv@aexp 0032                     ___fldiv@bexp 0031  
                   ___fldiv@sign 002A                      __CFG_BOR$ON 000000  
                    __CFG_BORV$3 000000                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                              l488 6DE6  
                   __CFG_CPB$OFF 000000                              _PR2 000FCB  
                            _col 00A8                 _MultiplicadorSet 009E  
                            wreg 000FE8                     ___flmul@aexp 0012  
                   ___flmul@bexp 0013                     ___flmul@sign 000D  
                   ___flmul@temp 0018                     ___flmul@prod 0014  
                   __CFG_LVP$OFF 000000                     ___fltol@exp1 001A  
                   __CFG_WDT$OFF 000000                             l1316 75D4  
                           l1261 7AE4                             l1262 7AC2  
                           l1327 7642                             l1328 763E  
                           l1346 7D2E                             l4011 733E  
                           l1363 7FCC                             l1355 7F46  
                           l1356 7F42                             l1277 7BB6  
                           l1286 7C1C                             l4023 737E  
                           l1287 7C18                             l3313 75D2  
                           l3401 7D1E                             l1394 7256  
                           l4035 73BE                             l3307 75AC  
                           l3243 748E                             l1387 71D8  
                           l3325 7608                             l4047 73FE  
                           l3319 75EA                             l3263 74CE  
                           l3247 7492                             l3361 76E2  
                           l3353 76D4                             l3345 7686  
                           l3281 751C                             l3409 7D4C  
                           l3521 707C                             l3505 7032  
                           l4209 6CF6                             l4059 743E  
                           l3611 6E6E                             l3275 7506  
                           l3267 74D2                             l3451 7EEE  
                           l3531 7094                             l3349 76AA  
                           l3381 7CDA                             l3533 70A0  
                           l3525 708C                             l3711 70EA  
                           l3623 6EB0                             l3359 76E0  
                           l3383 7CDE                             l3607 6DAE  
                           l3633 6D72                             l3289 7534  
                           l3481 7FA8                             l3457 7F0C  
                           l3385 7CEE                             l3561 723E  
                           l3723 7124                             l3619 6E8E  
                           l3299 7584                             l3539 70BC  
                           l3555 7206                             l3725 7130  
                           l3717 7102                             l3493 7FEA  
                           l3477 7F8A                             l3557 720C  
                           l3549 71E8                             l3743 7188  
                           l3735 7164                             l3831 7A3A  
                           l3823 7A1A                             l3399 7D1A  
                           l3567 727C                             l3559 7218  
                           l3585 72C8                             l3569 7288  
                           l3739 7172                             l3771 6FDE  
                           l3763 6FAA                             l3755 6F84  
                           l3907 7B40                             l3819 7A16  
                           l3765 6FB6                             l3925 7BDA  
                           l3941 7BFA                             l3917 7BA6  
                           l3861 7A76                             l3775 6FEC  
                           l3759 6F98                             l3935 7BF0  
                           l3961 7C62                             l3873 7AD0  
                           l3779 7002                             l3875 7AD4  
                           l3795 79CE                             l3973 7C90  
                           l3975 7C92                             l3799 79D2  
                           l3969 7C88                             l3897 7B2A  
                           l3889 7B08                             l3899 7B2E  
                           l3999 72FE                             STR_1 204E  
                           STR_2 206F                             STR_3 2041  
                           STR_4 205B                             STR_5 2055  
                           STR_7 2060                             STR_8 2065  
                           STR_9 206A                             _LATA 000F89  
                           u3110 6D92                             _LATB 000F8A  
                           _LATC 000F8B                             u3040 7292  
                           _LATD 000F8C                             _LATE 000F8D  
                           u3300 6FBA                             u3240 7134  
                           u3080 6DCE                             u3090 6EAC  
                           u3420 7A98                             u2700 76B8  
                           u3430 7AA8                             u3600 7BFE  
                           u3440 7AAA                             u2800 7EB0  
                           u2650 7638                             u3620 7C12  
                           u2805 7EA6                             u3470 7AEC  
                           u2910 7020                             u3720 731E  
                           u2840 7F3C                             u2920 7050  
                           u3730 735E                             u2690 7694  
                           u3740 739E                             u2925 7046  
                           u3750 73DE                             u2790 7D3A  
                           _RBIE 007F93                             u3760 741E  
                           u3680 7C6E                             u2880 7F98  
                           u2960 70A6                             _RBIF 007F90  
                           u3770 7460                             u2890 7FB6  
                           _RBIP 007F88                             i2l92 6D56  
                           _RBPU 007F8F                     ?_marca_tecla 0001  
                           _fila 00A9                             _main 6CD8  
                           fsr1l 000FE1                             btemp 005F  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E                    __CFG_IESO$OFF 000000  
                ___fldiv@new_exp 002B                     msg2LCD@datos 0003  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
                    ?_TIMER0_INI 0001                      ?_TIMER1_INI 0001  
                  __CFG_PLLDIV$5 000000                 __end_of_LCD_init 7462  
                  ___fltol@sign1 0019                  __end_of___aldiv 719A  
                __end_of___almod 7014                  __end_of___fladd 7CAE  
                          ?_main 0001                  __end_of___fldiv 76EA  
                          _EEADR 000FA9                            STR_10 2025  
                __end_of___flmul 8000                  __end_of___fltol 70CE  
                          _CMCON 000FB4                            _RCREG 000FAE  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _PORTA 000F80  
                          _PORTB 000F81                    __CFG_USBDIV$2 000000  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            _TXREG 000FAD  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                __end_of_msg2LCD 6EC4                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                  __end_of_readADC 6F68  
                 __CFG_EBTRB$OFF 000000                            _myISR 0008  
                          _kilos 007C                  __end_of_tic_LCD 6C68  
                          tablat 000FF5                            ttemp5 0060  
                          ttemp6 0063                            ttemp7 0067  
                          status 000FD8                            wtemp8 0060  
                __initialization 6E16                     __end_of_main 6CFC  
               __end_of_PicIni21 6D28                           ??_main 005B  
                  __activetblptr 000002                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           ?_myISR 0001  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _EEDATA 000FA8                           _CCPR1L 000FBE  
                         _EECON2 000FA7                           _INT0IE 007F94  
                         _INT0IF 007F91                           _INT1IE 007F83  
                         _INT1IF 007F80                 __end_of_char2LCD 6D94  
                         i2l4217 6D38              __size_of_TIMER0_INI 001A  
            __size_of_TIMER1_INI 0020                     ?_tic_teclado 0001  
                         _TMR0IF 007F92                           _TMR1IF 007CF0  
                         _TMR0ON 007EAF                           _SPBRGH 000FB0  
                         _TMR1ON 007E68                 __end_of___xxtofl 72DA  
                 __CFG_VREGEN$ON 000000                   __CFG_XINST$OFF 000000  
                      ??___aldiv 0049                        ??___almod 003F  
                      ??___fladd 0009                           _dec_kg 0070  
                      ??___fldiv 0022                   __CFG_STVREN$ON 000000  
                         _cen_kg 0074                        ??___flmul 0009  
                      ??___fltol 0015                           _gramos 0068  
                         clear_0 6E54                           _teclas 2019  
                         _uni_kg 006C                        ??_msg2LCD 0005  
                      ??_readADC 0037                     __pdataCOMRAM 005D  
                      ??_tic_LCD 0001                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                    _OffsetPeriodo 00AC  
            demo_shield2_1@flag0 009A              demo_shield2_1@flag1 0099  
            demo_shield2_1@flag2 0098              demo_shield2_1@flag3 0097  
            demo_shield2_1@cont1 0093              demo_shield2_1@cont2 0092  
            demo_shield2_1@cont3 0091                     ___xxtofl@arg 0011  
                   ___xxtofl@exp 0010                     ___xxtofl@val 0007  
                     __accesstop 0060          __end_of__initialization 6E5E  
                __CFG_PBADEN$OFF 000000                        ?_LCD_init 0001  
                  ___rparam_used 000001                       ___fltol@f1 0011  
           __size_of_marca_tecla 000E                   __pcstackCOMRAM 0001  
                   __pidataBANK0 6C2E                    __end_of_myISR 6D5A  
                      LCD_init@i 0003           __size_of_obtener_ADC10 0046  
                    set_CURSOR@i 0004                          ??_myISR 0001  
                  ?_tecladoIni13 0001                       __pbssBANK0 0060  
                      ?_PicIni21 0001                       ??_LCD_init 0003  
                  _maximoEncoder 0090                     ??_TIMER0_INI 0001  
                   ??_TIMER1_INI 0001                        ?_char2LCD 0001  
        __size_of_descomposicion 02B8                     char2LCD@dato 0003  
                      ?___xxtofl 0007                          Leds13@i 00AF  
                 ??_tecladoIni13 0001                       ??_PicIni21 0001  
             __end_of_TIMER0_INI 6C98               __end_of_TIMER1_INI 6CD8  
                     _frecuencia 005D               __size_of_write_CMD 000E  
             __size_of_write_LCD 0020  _activador_tiempo_ventana_pesaje 0064  
           __size_of_tic_teclado 000A                          __Hparam 0000  
                        __Lparam 0000                       _guarda_ADC 0080  
                  _obtener_ADC10 6DD0                          ___aldiv 70CE  
                        ___almod 6F68                          ___fladd 79A2  
                        ___fldiv 7462                          ___flmul 7CAE  
                        ___fltol 7014                     __psmallconst 2018  
       obtener_ADC10@GuardoPorta 0003                          __pcinit 6E16  
       obtener_ADC10@GuardoTrisa 0004                          __ramtop 0800  
                        _flag_kb 008B                          __ptext0 6CD8  
                        __ptext1 6C68                          __ptext2 76EA  
                        __ptext3 6D94                          __ptext4 6EC4  
                        __ptext5 6DD0                          __ptext6 719A  
                        __ptext7 7014                          __ptext8 7CAE  
                        __ptext9 7462                       ??_char2LCD 0003  
                        _msg2LCD 6E6C                        _T0CONbits 000FD5  
                        _readADC 6EC4                        _T1CONbits 000FCD  
                      _T2CONbits 000FCA                       ??___xxtofl 000B  
                        _tic_LCD 6C56                 ___aldiv@dividend 0041  
                  _minimoEncoder 008F                       _set_CURSOR 6D94  
          _tiempo_ventana_pesaje 00A4                   __pintcode_body 6D28  
                  debounce@state 009D             end_of_initialization 6E5E  
                 set_CURSOR@posi 0003                    __Lmediumconst 0000  
                        int_func 6D28                   ?_obtener_ADC10 0001  
                      _RCSTAbits 000FAB             _casos_valores_pesaje 0060  
               ___aldiv@quotient 004B                          postdec1 000FE5  
                        postinc0 000FEE                        _PORTBbits 000F81  
                      _PORTDbits 000F83                        _PORTEbits 000F84  
              __end_of_write_CMD 6C56               _EstadoDeLosBotones 005C  
              __end_of_write_LCD 6CB8                      ___fladd@grs 0010  
                  ___xxtofl@sign 000F                        _TRISAbits 000F92  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
                      _TRISDbits 000F95                        _TRISEbits 000F96  
              tic_encoder@estado 00AA                      ___fldiv@grs 002D  
                    ___fldiv@rem 0026                      ___flmul@grs 000E  
                  LCD_init@i_395 0007                    LCD_init@i_396 000B  
                  LCD_init@i_397 000F                    LCD_init@i_398 0013  
                  LCD_init@i_399 0017                      _CCP1CONbits 000FBD  
                      _TXSTAbits 000FAC                __size_of_LCD_init 0188  
                     _write_DATA 2008             __end_of_tecladoIni13 6C7E  
                    _BAUDCONbits 000FB8                    __pidataCOMRAM 2000  
                 _descomposicion 76EA                   __end_of_teclas 2025  
            start_initialization 6E16                      ?_set_CURSOR 0001  
                  ??_marca_tecla 0001                __size_of_PicIni21 002C  
                ??_obtener_ADC10 0003                   tecla@status_KB 008A  
                      _LowerByte 00A0              _descomposicion$2520 0057  
            _descomposicion$2521 0053              _descomposicion$2519 004F  
         __end_of_descomposicion 79A2                      __pdataBANK0 00A4  
               __CFG_LPT1OSC$OFF 000000                  _posicionEncoder 008E  
       tic_debounce@debounce_tic 00AB               demo_shield2_1@cont 0094  
                      ___fladd@a 0005                        ___fladd@b 0001  
                      ___fldiv@a 001E                        ___fldiv@b 001A  
                      _UpperByte 00AD                        ___flmul@a 0005  
                      ___flmul@b 0001                __size_of_char2LCD 003A  
                    __pbssCOMRAM 005B                __size_of___xxtofl 0140  
                      __pnvBANK0 00B0                        _flagCanal 008C  
            __end_of_marca_tecla 6C48                        char2LCD@i 0004  
                      __pintcode 0008                         ?___aldiv 0041  
            __size_of_set_CURSOR 003C                         ?___almod 0037  
                       ?___fladd 0001                      ?_write_DATA 0001  
                       ?___fldiv 001A                         ?___flmul 0001  
                       ?___fltol 0011                  ?_descomposicion 0001  
            obtener_ADC10@ad_res 0005                 ___almod@dividend 0037  
              Send4Disp@Nro_Disp 00AE                         ?_msg2LCD 0003  
                       ?_readADC 0033                      __smallconst 2018  
                       ?_tic_LCD 0001                   _desplazar_tout 0084  
                 __size_of_myISR 6D52         demo_shield2_1@PrimeraVez 0096  
                  ??_tic_teclado 0001                  ___aldiv@divisor 0045  
                   debounce@cnt0 009C                     debounce@cnt1 009B  
                ___aldiv@counter 0049                         _LATAbits 000F89  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                       _LATEbits 000F8D                         _LCD_init 72DA  
                       _LCD_tout 00B0                         _PIE1bits 000F9D  
                    _encoderTout 008D            __size_of_tecladoIni13 0016  
                       _PIR1bits 000F9E                 __CFG_WDTPS$32768 000000  
                     _ADCON0bits 000FC2                    _Multiplicador 009F  
                _MedioPeriodoSet 0086                        _write_CMD 6C48  
                      _write_LCD 6C98                      _INTCON2bits 000FF1  
                    _INTCON3bits 000FF0                        copy_data0 6E2A  
            __size_of_write_DATA 000E                     _tecladoIni13 6C68  
                       _PicIni21 6CFC                      _marca_tecla 6C3A  
            Botones13@Estado_BOT 00A1          demo_shield2_1@Desplazar 0095  
                     _EECON1bits 000FA6                         __Hrparam 0000  
                       __Lrparam 0000              __end_of_tic_teclado 6C2E  
               __size_of___aldiv 00CC                 __size_of___almod 00AC  
               __size_of___fladd 030C                   write_DATA@dato 0002  
               __size_of___fldiv 0288                 __size_of___flmul 0352  
               __size_of___fltol 00BA                         _char2LCD 6D5A  
               __size_of_msg2LCD 0058                 __size_of_readADC 00A4  
                       ___xxtofl 719A                         _delay_kb 005B  
               __size_of_tic_LCD 0012                     ??_set_CURSOR 0003  
                     ?_write_CMD 0001                       ?_write_LCD 0001  
                       __ptext10 6E6C                         __ptext11 6D5A  
                       __ptext20 6C48                         __ptext12 2008  
                       __ptext21 6C98                         __ptext13 79A2  
                       __ptext14 6F68                         __ptext23 6C24  
                       __ptext15 70CE                         __ptext24 6C56  
                       __ptext16 6CB8                         __ptext25 6C3A  
                       __ptext17 6C7E                         __ptext18 6CFC  
                       __ptext19 72DA                      _kgrs_pesado 0078  
                ___almod@divisor 003B                         _bot_tout 00A2  
                       _led_tout 0088                  ___almod@counter 003F  
                  __size_of_main 0024                         int$flags 005F  
                       _mux_tout 00A3               __end_of_set_CURSOR 6DD0  
                       msg2LCD@i 0005            __CFG_CPUDIV$OSC1_PLL2 000000  
                     _INTCONbits 000FF2                         intlevel2 0000  
                  write_CMD@dato 0002                      _tic_teclado 6C24  
                  write_LCD@dato 0001                 ??_descomposicion 004F  
          __end_of_obtener_ADC10 6E16                     ??_write_DATA 0002  
                     _TIMER0_INI 6C7E                       _TIMER1_INI 6CB8  
                   ___aldiv@sign 004A                      ??_write_CMD 0002  
                    ??_write_LCD 0001                    ___fladd@signs 000D  
             __CFG_FOSC$HSPLL_HS 000000               __end_of_write_DATA 2016  
                   ___almod@sign 0040                     ___fladd@aexp 000E  
                   ___fladd@bexp 000F  
